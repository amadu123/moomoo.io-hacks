// ==UserScript==
// @name         New Nuro Mod pt.1
// @namespace    -
// @version      1
// @description  LoLWhyeZLoL
// @author       Nuro
// @match        *://moomoo.io/*
// @match        *://krunker.io/*
// @match        http://dev.moomoo.io/*
// @match        *sandbox.moomoo.io/*
// @grant        GM.xmlHttpRequest
// @require      https://greasyfork.org/scripts/368273-msgpack/code/msgpack.js?version=598723
// @require      http://code.jquery.com/jquery-3.3.1.min.js
// @require      https://code.jquery.com/ui/1.12.0/jquery-ui.min.js
// @require      https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.0/jquery-confirm.min.js
// @run-at       document-start
// @downloadURL  none
// ==/UserScript==


var antiinstaheal

$("#allianceButton").css({
  background: `url('https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRGyy2Wgum6uWma6Nsfi9LTfdJrTdHxKii4acnH_MjYw0kbn9T8hw')`
});
$("#chatButton").css({
  background: `url('https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRGyy2Wgum6uWma6Nsfi9LTfdJrTdHxKii4acnH_MjYw0kbn9T8hw')`
});
$("#storeButton").css({
  background: `url('https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRGyy2Wgum6uWma6Nsfi9LTfdJrTdHxKii4acnH_MjYw0kbn9T8hw')`
});

$("#foodDisplay").css({
  background: `url('https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRGyy2Wgum6uWma6Nsfi9LTfdJrTdHxKii4acnH_MjYw0kbn9T8hw')`
});
$("#woodDisplay").css({
  background: `url('https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRGyy2Wgum6uWma6Nsfi9LTfdJrTdHxKii4acnH_MjYw0kbn9T8hw')`
});
$("#stoneDisplay").css({
  background: `url('https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRGyy2Wgum6uWma6Nsfi9LTfdJrTdHxKii4acnH_MjYw0kbn9T8hw')`
});
$("#scoreDisplay").css({
  background: `url('https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRGyy2Wgum6uWma6Nsfi9LTfdJrTdHxKii4acnH_MjYw0kbn9T8hw')`
});
$("#killCounter").css({
  background: `url('https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRGyy2Wgum6uWma6Nsfi9LTfdJrTdHxKii4acnH_MjYw0kbn9T8hw')`
});

if (window.location.href.includes("moomoo")) {
  $(document).ready(() => {
    //Neat cursor: credit to FlareZ 3301#6016
    $("#gameCanvas").css(
      "cursor",
      "url(http://cur.cursors-4u.net/user/use-1/use153.cur), default"
    );
    $("#consentBlock").css({ display: "none" });
    var autoHealSpeed = 702348023948092384092890238409384; //Bigger number = SLOWER autoheal; fastest is 0.
    var DEFAULT_HAT = 7;
    var DEFAULT_WINGS = 11;
    var instaKillKey = 114;
    var spikeKey = 113;
    var trapKey = 121;
    var removeMonkeyTail = true;
    var askMeAgain = true; //set this to false if the user doesnt want to be asked about hat switching again
    var autohat1 = 6;
    var autowing1 = 21;
    var autohat2 = 12;
    var autowing2 = 11;
    var allTraps = [];
    var CORESTATE = {
      inwater: { active: false },
      nearenemy: { active: false },
      intrap: { active: false },
      ipress: { active: false }
    };

    try {
      document.getElementById("moomooio_728x90_home").style.display = "none"; //Remove sidney's ads
      $("#moomooio_728x90_home")
        .parent()
        .css({ display: "none" });
    } catch (e) {
      console.log("error removing ad");
    }

    unsafeWindow.onbeforeunload = null;

    let coreURL = new URL(window.location.href);
    window.sessionStorage.force = coreURL.searchParams.get("fc");

    if (
      window.sessionStorage.force != "false" &&
      window.sessionStorage.force &&
      window.sessionStorage.force.toString() != "null"
    ) {
      console.error(window.sessionStorage.force);
      /*alert(window.location.force);*/
      document.getElementsByClassName(
        "menuHeader"
      )[0].innerHTML = `Servers <span style="color: red;">Force (${window.sessionStorage.force})</span>`;
    }

    var oldAlert = unsafeWindow.alert;
    unsafeWindow.alert = function() {
      $.alert({
        title: "Server full aq",
        content: "Yes e bas Yoksa .... ",
        useBootstrap: false,
        buttons: {
          Back: () => {
            window.onbeforeunload = null;
            window.location = "http://moomoo.io";
          },
          Yes: () => {
            let coreURL = new URL(window.location.href);
            let server = coreURL.searchParams.get("server");
            window.sessionStorage.force = server;
            window.sessionStorage.dog = server;
            console.error(window.sessionStorage.force);
            console.error(window.sessionStorage.dog);
            console.error(server);
            setTimeout(() => {
              console.error(window.sessionStorage.force);
              window.location = `http://moomoo.io?force-connect=${server}`;
            }, 500);
          }
        }
      });
    };

    class ForceSocket extends WebSocket {
      constructor(...args) {
        if (
          window.sessionStorage.force != "false" &&
          window.sessionStorage.force &&
          window.sessionStorage.force.toString() != "null"
        ) {
          let server = window.sessionStorage.force;
          let sip = "";
          for (let gameServer of window.vultr.servers) {
            if (`${gameServer.region}:${gameServer.index}:0` == server) {
              sip = gameServer.ip;
            }
          }
          args[0] = `wss://ip_${sip}.moomoo.io:8008/?gameIndex=0`;

          console.error("Setting false");
          console.error(args[0]);
          delete window.sessionStorage.force;
        }

        super(...args);
      }
    }

    WebSocket = ForceSocket;

    unsafeWindow.admob = {
      requestInterstitialAd: () => {},
      showInterstitialAd: () => {}
    };

    var accessories = [
      {
        id: 12,
        name: "Snowball",
        price: 1e3,
        scale: 105,
        xOff: 18,
        desc: "no effect"
      },
      {
        id: 9,
        name: "Tree Cape",
        price: 1e3,
        scale: 90,
        desc: "no effect"
      },
      {
        id: 10,
        name: "Stone Cape",
        price: 1e3,
        scale: 90,
        desc: "no effect"
      },
      {
        id: 3,
        name: "Cookie Cape",
        price: 1500,
        scale: 90,
        desc: "no effect"
      },
      {
        id: 8,
        name: "Cow Cape",
        price: 2e3,
        scale: 90,
        desc: "no effect"
      },
      {
        id: 11,
        name: "Monkey Tail",
        price: 2e3,
        scale: 97,
        xOff: 25,
        desc: "Super speed but reduced damage",
        spdMult: 1.35,
        dmgMultO: 0.2
      },
      {
        id: 17,
        name: "Apple Basket",
        price: 3e3,
        scale: 80,
        xOff: 12,
        desc: "slowly regenerates health over time",
        healthRegen: 1
      },
      {
        id: 6,
        name: "Winter Cape",
        price: 3e3,
        scale: 90,
        desc: "no effect"
      },
      {
        id: 4,
        name: "Skull Cape",
        price: 4e3,
        scale: 90,
        desc: "no effect"
      },
      {
        id: 5,
        name: "Dash Cape",
        price: 5e3,
        scale: 90,
        desc: "no effect"
      },
      {
        id: 2,
        name: "Dragon Cape",
        price: 6e3,
        scale: 90,
        desc: "no effect"
      },
      {
        id: 1,
        name: "Super Cape",
        price: 8e3,
        scale: 90,
        desc: "no effect"
      },
      {
        id: 7,
        name: "Troll Cape",
        price: 8e3,
        scale: 90,
        desc: "no effect"
      },
      {
        id: 14,
        name: "Thorns",
        price: 1e4,
        scale: 115,
        xOff: 20,
        desc: "no effect"
      },
      {
        id: 15,
        name: "Blockades",
        price: 1e4,
        scale: 95,
        xOff: 15,
        desc: "no effect"
      },
      {
        id: 20,
        name: "Devils Tail",
        price: 1e4,
        scale: 95,
        xOff: 20,
        desc: "no effect"
      },
      {
        id: 16,
        name: "Sawblade",
        price: 12e3,
        scale: 90,
        spin: !0,
        xOff: 0,
        desc: "deal damage to players that damage you",
        dmg: 0.15
      },
      {
        id: 13,
        name: "Angel Wings",
        price: 15e3,
        scale: 138,
        xOff: 22,
        desc: "slowly regenerates health over time",
        healthRegen: 3
      },
      {
        id: 19,
        name: "Shadow Wings",
        price: 15e3,
        scale: 138,
        xOff: 22,
        desc: "increased movement speed",
        spdMult: 1.1
      },
      {
        id: 18,
        name: "Blood Wings",
        price: 2e4,
        scale: 178,
        xOff: 26,
        desc: "restores health when you deal damage",
        healD: 0.2
      },
      {
        id: 21,
        name: "Corrupt X Wings",
        price: 2e4,
        scale: 178,
        xOff: 26,
        desc: "deal damage to players that damage you",
        dmg: 0.25
      }
    ];

    var hats = (hats = [
      {
        id: 45,
        name: "Shame!",
        dontSell: !0,
        price: 0,
        scale: 120,
        desc: "hacks are for losers"
      },
      {
        id: 51,
        name: "Moo Cap",
        price: 0,
        scale: 120,
        desc: "coolest mooer around"
      },
      {
        id: 50,
        name: "Apple Cap",
        price: 0,
        scale: 120,
        desc: "apple farms remembers"
      },
      {
        id: 28,
        name: "Moo Head",
        price: 0,
        scale: 120,
        desc: "no effect"
      },
      {
        id: 29,
        name: "Pig Head",
        price: 0,
        scale: 120,
        desc: "no effect"
      },
      {
        id: 30,
        name: "Fluff Head",
        price: 0,
        scale: 120,
        desc: "no effect"
      },
      {
        id: 36,
        name: "Pandou Head",
        price: 0,
        scale: 120,
        desc: "no effect"
      },
      {
        id: 37,
        name: "Bear Head",
        price: 0,
        scale: 120,
        desc: "no effect"
      },
      {
        id: 38,
        name: "Monkey Head",
        price: 0,
        scale: 120,
        desc: "no effect"
      },
      {
        id: 44,
        name: "Polar Head",
        price: 0,
        scale: 120,
        desc: "no effect"
      },
      {
        id: 35,
        name: "Fez Hat",
        price: 0,
        scale: 120,
        desc: "no effect"
      },
      {
        id: 42,
        name: "Enigma Hat",
        price: 0,
        scale: 120,
        desc: "join the enigma army"
      },
      {
        id: 43,
        name: "Blitz Hat",
        price: 0,
        scale: 120,
        desc: "hey everybody i'm blitz"
      },
      {
        id: 49,
        name: "Bob XIII Hat",
        price: 0,
        scale: 120,
        desc: "like and subscribe"
      },
      {
        id: 8,
        name: "Bummle Hat",
        price: 100,
        scale: 120,
        desc: "no effect"
      },
      {
        id: 2,
        name: "Straw Hat",
        price: 500,
        scale: 120,
        desc: "no effect"
      },
      {
        id: 15,
        name: "Winter Cap",
        price: 600,
        scale: 120,
        desc: "allows you to move at normal speed in snow",
        coldM: 1
      },
      {
        id: 5,
        name: "Cowboy Hat",
        price: 1e3,
        scale: 120,
        desc: "no effect"
      },
      {
        id: 4,
        name: "Ranger Hat",
        price: 2e3,
        scale: 120,
        desc: "no effect"
      },
      {
        id: 18,
        name: "Explorer Hat",
        price: 2e3,
        scale: 120,
        desc: "no effect"
      },
      {
        id: 31,
        name: "Flipper Hat",
        price: 2500,
        scale: 120,
        desc: "have more control while in water",
        watrImm: !0
      },
      {
        id: 1,
        name: "Marksman Cap",
        price: 3e3,
        scale: 120,
        desc: "increases arrow speed and range",
        aMlt: 1.3
      },
      {
        id: 10,
        name: "Bush Gear",
        price: 3e3,
        scale: 160,
        desc: "allows you to disguise yourself as a bush"
      },
      {
        id: 48,
        name: "Halo",
        price: 3e3,
        scale: 120,
        desc: "no effect"
      },
      {
        id: 6,
        name: "Soldier Helmet",
        price: 4e3,
        scale: 120,
        desc: "reduces damage taken but slows movement",
        spdMult: 0.94,
        dmgMult: 0.75
      },
      {
        id: 23,
        name: "Anti Venom Gear",
        price: 4e3,
        scale: 120,
        desc: "makes you immune to poison",
        poisonRes: 1
      },
      {
        id: 13,
        name: "Medic Gear",
        price: 5e3,
        scale: 110,
        desc: "slowly regenerates health over time",
        healthRegen: 3
      },
      {
        id: 9,
        name: "Miners Helmet",
        price: 5e3,
        scale: 120,
        desc: "earn 1 extra gold per resource",
        extraGold: 1
      },
      {
        id: 32,
        name: "Musketeer Hat",
        price: 5e3,
        scale: 120,
        desc: "reduces cost of projectiles",
        projCost: 0.5
      },
      {
        id: 7,
        name: "Bull Helmet",
        price: 6e3,
        scale: 120,
        desc: "increases damage done but drains health",
        healthRegen: -5,
        dmgMultO: 1.5,
        spdMult: 0.96
      },
      {
        id: 22,
        name: "Emp Helmet",
        price: 6e3,
        scale: 120,
        desc: "turrets won't attack but you move slower",
        antiTurret: 1,
        spdMult: 0.7
      },
      {
        id: 12,
        name: "Booster Hat",
        price: 6e3,
        scale: 120,
        desc: "increases your movement speed",
        spdMult: 1.16
      },
      {
        id: 26,
        name: "Barbarian Armor",
        price: 8e3,
        scale: 120,
        desc: "knocks back enemies that attack you",
        dmgK: 0.6
      },
      {
        id: 21,
        name: "Plague Mask",
        price: 1e4,
        scale: 120,
        desc: "melee attacks deal poison damage",
        poisonDmg: 5,
        poisonTime: 6
      },
      {
        id: 46,
        name: "Bull Mask",
        price: 1e4,
        scale: 120,
        desc: "bulls won't target you unless you attack them",
        bullRepel: 1
      },
      {
        id: 14,
        name: "Windmill Hat",
        topSprite: !0,
        price: 1e4,
        scale: 120,
        desc: "generates points while worn",
        pps: 1.5
      },
      {
        id: 11,
        name: "Spike Gear",
        topSprite: !0,
        price: 1e4,
        scale: 120,
        desc: "deal damage to players that damage you",
        dmg: 0.45
      },
      {
        id: 53,
        name: "Turret Gear",
        topSprite: !0,
        price: 1e4,
        scale: 120,
        desc: "you become a walking turret",
        turret: {
          proj: 1,
          range: 700,
          rate: 2500
        },
        spdMult: 0.5
      },
      {
        id: 20,
        name: "Samurai Armor",
        price: 12e3,
        scale: 120,
        desc: "increased attack speed and fire rate",
        atkSpd: 0.78
      },
      {
        id: 16,
        name: "Bushido Armor",
        price: 12e3,
        scale: 120,
        desc: "restores health when you deal damage",
        healD: 0.4
      },
      {
        id: 27,
        name: "Scavenger Gear",
        price: 15e3,
        scale: 120,
        desc: "earn double points for each kill",
        kScrM: 2
      },
      {
        id: 40,
        name: "Tank Gear",
        price: 15e3,
        scale: 120,
        desc: "increased damage to buildings but slower movement",
        spdMult: 0.3,
        bDmg: 3.3
      },
      {
        id: 52,
        name: "Thief Gear",
        price: 15e3,
        scale: 120,
        desc: "steal half of a players gold when you kill them",
        goldSteal: 0.5
      }
    ]);

    var objects = [
      {
        id: 0,
        name: "food",
        layer: 0
      },
      {
        id: 1,
        name: "walls",
        place: !0,
        limit: 30,
        layer: 0
      },
      {
        id: 2,
        name: "spikes",
        place: !0,
        limit: 15,
        layer: 0
      },
      {
        id: 3,
        name: "mill",
        place: !0,
        limit: 7,
        layer: 1
      },
      {
        id: 4,
        name: "mine",
        place: !0,
        limit: 1,
        layer: 0
      },
      {
        id: 5,
        name: "trap",
        place: !0,
        limit: 6,
        layer: -1
      },
      {
        id: 6,
        name: "booster",
        place: !0,
        limit: 12,
        layer: -1
      },
      {
        id: 7,
        name: "turret",
        place: !0,
        limit: 2,
        layer: 1
      },
      {
        id: 8,
        name: "watchtower",
        place: !0,
        limit: 12,
        layer: 1
      },
      {
        id: 9,
        name: "buff",
        place: !0,
        limit: 4,
        layer: -1
      },
      {
        id: 10,
        name: "spawn",
        place: !0,
        limit: 1,
        layer: -1
      },
      {
        id: 11,
        name: "sapling",
        place: !0,
        limit: 2,
        layer: 0
      },
      {
        id: 12,
        name: "blocker",
        place: !0,
        limit: 3,
        layer: -1
      },
      {
        id: 13,
        name: "teleporter",
        place: !0,
        limit: 1,
        layer: -1
      }
    ];

    var weapons = [
      {
        id: 0,
        type: 0,
        name: "tool hammer",
        desc: "tool for gathering all resources",
        src: "hammer_1",
        length: 140,
        width: 140,
        xOff: -3,
        yOff: 18,
        dmg: 25,
        range: 65,
        gather: 1,
        speed: 300
      },
      {
        id: 1,
        type: 0,
        age: 2,
        name: "hand axe",
        desc: "gathers resources at a higher rate",
        src: "axe_1",
        length: 140,
        width: 140,
        xOff: 3,
        yOff: 24,
        dmg: 30,
        spdMult: 1,
        range: 70,
        gather: 2,
        speed: 400
      },
      {
        id: 2,
        type: 0,
        age: 8,
        pre: 1,
        name: "great axe",
        desc: "deal more damage and gather more resources",
        src: "great_axe_1",
        length: 140,
        width: 140,
        xOff: -8,
        yOff: 25,
        dmg: 35,
        spdMult: 1,
        range: 75,
        gather: 4,
        speed: 400
      },
      {
        id: 3,
        type: 0,
        age: 2,
        name: "short sword",
        desc: "increased attack power but slower move speed",
        src: "sword_1",
        iPad: 1.3,
        length: 130,
        width: 210,
        xOff: -8,
        yOff: 46,
        dmg: 35,
        spdMult: 0.85,
        range: 110,
        gather: 1,
        speed: 300
      },
      {
        id: 4,
        type: 0,
        age: 8,
        pre: 3,
        name: "katana",
        desc: "greater range and damage",
        src: "samurai_1",
        iPad: 1.3,
        length: 130,
        width: 210,
        xOff: -8,
        yOff: 59,
        dmg: 40,
        spdMult: 0.8,
        range: 118,
        gather: 1,
        speed: 300
      },
      {
        id: 5,
        type: 0,
        age: 2,
        name: "polearm",
        desc: "long range melee weapon",
        src: "spear_1",
        iPad: 1.3,
        length: 130,
        width: 210,
        xOff: -8,
        yOff: 53,
        dmg: 45,
        knock: 0.2,
        spdMult: 0.82,
        range: 142,
        gather: 1,
        speed: 700
      },
      {
        id: 6,
        type: 0,
        age: 2,
        name: "bat",
        desc: "fast long range melee weapon",
        src: "bat_1",
        iPad: 1.3,
        length: 110,
        width: 180,
        xOff: -8,
        yOff: 53,
        dmg: 20,
        knock: 0.7,
        range: 110,
        gather: 1,
        speed: 300
      },
      {
        id: 7,
        type: 0,
        age: 2,
        name: "daggers",
        desc: "really fast short range weapon",
        src: "dagger_1",
        iPad: 0.8,
        length: 110,
        width: 110,
        xOff: 18,
        yOff: 0,
        dmg: 20,
        knock: 0.1,
        range: 65,
        gather: 1,
        hitSlow: 0.1,
        spdMult: 1.13,
        speed: 100
      },
      {
        id: 8,
        type: 0,
        age: 2,
        name: "stick",
        desc: "great for gathering but very weak",
        src: "stick_1",
        length: 140,
        width: 140,
        xOff: 3,
        yOff: 24,
        dmg: 1,
        spdMult: 1,
        range: 70,
        gather: 7,
        speed: 400
      },
      {
        id: 9,
        type: 1,
        age: 6,
        name: "hunting bow",
        desc: "bow used for ranged combat and hunting",
        src: "bow_1",
        req: ["wood", 4],
        length: 120,
        width: 120,
        xOff: -6,
        yOff: 0,
        projectile: 0,
        spdMult: 0.75,
        speed: 600
      },
      {
        id: 10,
        type: 1,
        age: 6,
        name: "great hammer",
        desc: "hammer used for destroying structures",
        src: "great_hammer_1",
        length: 140,
        width: 140,
        xOff: -9,
        yOff: 25,
        dmg: 10,
        spdMult: 0.88,
        range: 75,
        sDmg: 7.5,
        gather: 1,
        speed: 400
      },
      {
        id: 11,
        type: 1,
        age: 6,
        name: "wooden shield",
        desc: "blocks projectiles and reduces melee damage",
        src: "shield_1",
        length: 120,
        width: 120,
        shield: 0.2,
        xOff: 6,
        yOff: 0,
        spdMult: 0.7
      },
      {
        id: 12,
        type: 1,
        age: 8,
        pre: 9,
        name: "crossbow",
        desc: "deals more damage and has greater range",
        src: "crossbow_1",
        req: ["wood", 5],
        aboveHand: !0,
        armS: 0.75,
        length: 120,
        width: 120,
        xOff: -4,
        yOff: 0,
        projectile: 2,
        spdMult: 0.7,
        speed: 700
      },
      {
        id: 13,
        type: 1,
        age: 9,
        pre: 12,
        name: "repeater crossbow",
        desc: "high firerate crossbow with reduced damage",
        src: "crossbow_2",
        req: ["wood", 10],
        aboveHand: !0,
        armS: 0.75,
        length: 120,
        width: 120,
        xOff: -4,
        yOff: 0,
        projectile: 3,
        spdMult: 0.7,
        speed: 300
      },
      {
        id: 14,
        type: 1,
        age: 6,
        name: "mc grabby",
        desc: "steals resources from enemies",
        src: "grab_1",
        length: 130,
        width: 210,
        xOff: -8,
        yOff: 53,
        dmg: 0,
        steal: 250,
        knock: 0.2,
        spdMult: 1.05,
        range: 125,
        gather: 0,
        speed: 700
      },
      {
        id: 15,
        type: 1,
        age: 9,
        pre: 12,
        name: "musket",
        desc: "slow firerate but high damage and range",
        src: "musket_1",
        req: ["stone", 10],
        aboveHand: !0,
        rec: 0.35,
        armS: 0.6,
        hndS: 0.3,
        hndD: 1.6,
        length: 205,
        width: 205,
        xOff: 25,
        yOff: 0,
        projectile: 5,
        hideProjectile: !0,
        spdMult: 0.6,
        speed: 1500
      }
    ];

    var activeObjects = [
      {
        name: "apple",
        desc: "restores 20 health when consumed",
        req: ["food", 10],
        consume: function(e) {
          return e.changeHealth(20, e);
        },
        scale: 22,
        holdOffset: 15
      },
      {
        age: 3,
        name: "cookie",
        desc: "restores 40 health when consumed",
        req: ["food", 15],
        consume: function(e) {
          return e.changeHealth(40, e);
        },
        scale: 27,
        holdOffset: 15
      },
      {
        age: 7,
        name: "pizza",
        desc: "restores 30 health and another 50 over 5 seconds",
        req: ["food", 30],
        consume: function(e) {
          return (
            !!(e.changeHealth(30, e) || e.health < 100) &&
            ((e.dmgOverTime.dmg = -10),
            (e.dmgOverTime.doer = e),
            (e.dmgOverTime.time = 5),
            !0)
          );
        },
        scale: 27,
        holdOffset: 15
      },
      {
        name: "wood wall",
        desc: "provides protection for your village",
        req: ["wood", 10],
        projDmg: !0,
        health: 380,
        scale: 50,
        holdOffset: 20,
        placeOffset: -5
      },
      {
        age: 3,
        name: "stone wall",
        desc: "provides improved protection for your village",
        req: ["stone", 25],
        health: 900,
        scale: 50,
        holdOffset: 20,
        placeOffset: -5
      },
      {
        age: 7,
        pre: 1,
        name: "castle wall",
        desc: "provides powerful protection for your village",
        req: ["stone", 35],
        health: 1500,
        scale: 52,
        holdOffset: 20,
        placeOffset: -5
      },
      {
        name: "spikes",
        desc: "damages enemies when they touch them",
        req: ["wood", 20, "stone", 5],
        health: 400,
        dmg: 20,
        scale: 49,
        spritePadding: -23,
        holdOffset: 8,
        placeOffset: -5
      },
      {
        age: 5,
        name: "greater spikes",
        desc: "damages enemies when they touch them",
        req: ["wood", 30, "stone", 10],
        health: 500,
        dmg: 35,
        scale: 52,
        spritePadding: -23,
        holdOffset: 8,
        placeOffset: -5
      },
      {
        age: 9,
        pre: 1,
        name: "poison spikes",
        desc: "poisons enemies when they touch them",
        req: ["wood", 35, "stone", 15],
        health: 600,
        dmg: 30,
        pDmg: 5,
        scale: 52,
        spritePadding: -23,
        holdOffset: 8,
        placeOffset: -5
      },
      {
        age: 9,
        pre: 2,
        name: "spinning spikes",
        desc: "damages enemies when they touch them",
        req: ["wood", 30, "stone", 20],
        health: 500,
        dmg: 45,
        turnSpeed: 0.003,
        scale: 52,
        spritePadding: -23,
        holdOffset: 8,
        placeOffset: -5
      },
      {
        name: "windmill",
        desc: "generates gold over time",
        req: ["wood", 50, "stone", 10],
        health: 400,
        pps: 1,
        turnSpeed: 0.0016,
        spritePadding: 25,
        iconLineMult: 12,
        scale: 45,
        holdOffset: 20,
        placeOffset: 5
      },
      {
        age: 5,
        pre: 1,
        name: "faster windmill",
        desc: "generates more gold over time",
        req: ["wood", 60, "stone", 20],
        health: 500,
        pps: 1.5,
        turnSpeed: 0.0025,
        spritePadding: 25,
        iconLineMult: 12,
        scale: 47,
        holdOffset: 20,
        placeOffset: 5
      },
      {
        age: 8,
        pre: 1,
        name: "power mill",
        desc: "generates more gold over time",
        req: ["wood", 100, "stone", 50],
        health: 800,
        pps: 2,
        turnSpeed: 0.005,
        spritePadding: 25,
        iconLineMult: 12,
        scale: 47,
        holdOffset: 20,
        placeOffset: 5
      },
      {
        age: 5,
        type: 2,
        name: "mine",
        desc: "allows you to mine stone",
        req: ["wood", 20, "stone", 100],
        iconLineMult: 12,
        scale: 65,
        holdOffset: 20,
        placeOffset: 0
      },
      {
        age: 5,
        type: 0,
        name: "sapling",
        desc: "allows you to farm wood",
        req: ["wood", 150],
        iconLineMult: 12,
        colDiv: 0.5,
        scale: 110,
        holdOffset: 50,
        placeOffset: -15
      },
      {
        age: 4,
        name: "pit trap",
        desc: "pit that traps enemies if they walk over it",
        req: ["wood", 30, "stone", 30],
        trap: !0,
        ignoreCollision: !0,
        hideFromEnemy: !0,
        health: 500,
        colDiv: 0.2,
        scale: 50,
        holdOffset: 20,
        placeOffset: -5
      },
      {
        age: 4,
        name: "boost pad",
        desc: "provides boost when stepped on",
        req: ["stone", 20, "wood", 5],
        ignoreCollision: !0,
        boostSpeed: 1.5,
        health: 150,
        colDiv: 0.7,
        scale: 45,
        holdOffset: 20,
        placeOffset: -5
      },
      {
        age: 7,
        doUpdate: !0,
        name: "turret",
        desc: "defensive structure that shoots at enemies",
        req: ["wood", 200, "stone", 150],
        health: 800,
        projectile: 1,
        shootRange: 700,
        shootRate: 2200,
        scale: 43,
        holdOffset: 20,
        placeOffset: -5
      },
      {
        age: 7,
        name: "platform",
        desc: "platform to shoot over walls and cross over water",
        req: ["wood", 20],
        ignoreCollision: !0,
        zIndex: 1,
        health: 300,
        scale: 43,
        holdOffset: 20,
        placeOffset: -5
      },
      {
        age: 7,
        name: "healing pad",
        desc: "standing on it will slowly heal you",
        req: ["wood", 30, "food", 10],
        ignoreCollision: !0,
        healCol: 15,
        health: 400,
        colDiv: 0.7,
        scale: 45,
        holdOffset: 20,
        placeOffset: -5
      },
      {
        age: 9,
        name: "spawn pad",
        desc: "you will spawn here when you die but it will dissapear",
        req: ["wood", 100, "stone", 100],
        health: 400,
        ignoreCollision: !0,
        spawnPoint: !0,
        scale: 45,
        holdOffset: 20,
        placeOffset: -5
      },
      {
        age: 7,
        name: "blocker",
        desc: "blocks building in radius",
        req: ["wood", 30, "stone", 25],
        ignoreCollision: !0,
        blocker: 300,
        health: 400,
        colDiv: 0.7,
        scale: 45,
        holdOffset: 20,
        placeOffset: -5
      },
      {
        age: 7,
        name: "teleporter",
        desc: "teleports you to a random point on the map",
        req: ["wood", 60, "stone", 60],
        ignoreCollision: !0,
        teleport: !0,
        health: 200,
        colDiv: 0.7,
        scale: 45,
        holdOffset: 20,
        placeOffset: -5
      }
    ];

    var allContainers = [accessories, hats, objects, weapons, activeObjects];
    function obs(objName) {
      for (let container of allContainers) {
        for (let obj of container) {
          if (obj.name.toLowerCase() == objName.toLowerCase()) {
            return obj.id;
          }
        }
      }

      return -1;
    }

    function activeObs(objName) {
      for (var i = 0; i < activeObjects.length; i++) {
        let activeObj = activeObjects[i];
        if (activeObj.name.toLowerCase() == objName.toLowerCase()) {
          return i;
        }
      }
    }

    var switchToHat = obs("Samurai Armor");
    var switchToAccessory = obs("Corrupt X Wings");
    var switchToWep = obs("polearm");
    var switchToRange = obs("crossbow");
    var bullHelm = obs("bull helmet");
    var monkeyTail = obs("monkey tail");

    var invalidHats = [obs("shame!")];
    console.log(invalidHats);

    const START_SSWX = [146, 161, 99, 146, 1, 192];
    var noallow = false;
    const END_SSWX = [146, 161, 99, 146, 0, 192];
    const TAKEOUT = [
      4,
      132,
      164,
      116,
      121,
      112,
      101,
      2,
      164,
      100,
      97,
      116,
      97,
      147,
      161,
      53,
      15,
      212,
      0,
      0,
      167,
      111,
      112,
      116,
      105,
      111,
      110,
      115,
      129,
      168,
      99,
      111,
      109,
      112,
      114,
      101,
      115,
      115,
      195,
      163,
      110,
      115,
      112,
      161,
      47
    ];
    const APPLE = [
      4,
      132,
      164,
      116,
      121,
      112,
      101,
      2,
      164,
      100,
      97,
      116,
      97,
      147,
      161,
      53,
      0,
      212,
      0,
      0,
      167,
      111,
      112,
      116,
      105,
      111,
      110,
      115,
      129,
      168,
      99,
      111,
      109,
      112,
      114,
      101,
      115,
      115,
      195,
      163,
      110,
      115,
      112,
      161,
      47
    ];
    const COOKIE = [
      4,
      132,
      164,
      116,
      121,
      112,
      101,
      2,
      164,
      100,
      97,
      116,
      97,
      147,
      161,
      53,
      1,
      212,
      0,
      0,
      167,
      111,
      112,
      116,
      105,
      111,
      110,
      115,
      129,
      168,
      99,
      111,
      109,
      112,
      114,
      101,
      115,
      115,
      195,
      163,
      110,
      115,
      112,
      161,
      47
    ];
    const PIZZA = [97, 117, 116, 111, 115, 112, 101, 101, 100];
    var currentHat = 0;
    var currentAccessory = 0;
    var IN_PROCESS = false;
    var justDied = false;
    var recentHealth = 100;
    var ws;
    var MYID;
    var hasApple = true;
    var foodInHand = false;
    var autoheal = false;
    var autobull = true;
    var STATE = 0;
    var msgpack5 = msgpack;
    var inInstaProcess = false;
    var autoattack = false;
    var allMooMooObjects = {};
    var bowWorked = false;
    var hasWinter = false;
    var hasFlipper = false;
    var myCLAN = null;
    var goodData;
    var nearestPlayerAngle = 0;
    var focusPlayerObj;
    var MYANGLE = 0;
    let coregood = [
      212,
      0,
      0,
      167,
      111,
      112,
      116,
      105,
      111,
      110,
      115,
      129,
      168,
      99,
      111,
      109,
      112
    ];
    var targets = [false, false];

    let badreplace = [
      130,
      166,
      98,
      117,
      102,
      102,
      101,
      114,
      130,
      164,
      116,
      121,
      112,
      101,
      166,
      66,
      117,
      102,
      102,
      101,
      114,
      164,
      100,
      97,
      116,
      97,
      145,
      0,
      164,
      116,
      121,
      112,
      101,
      0
    ];
    document.msgpack = msgpack;
    function n() {
      this.buffer = new Uint8Array([0]);
      this.buffer.__proto__ = new Uint8Array();
      this.type = 0;
    }

    var nval = msgpack5.decode([
      132,
      164,
      116,
      121,
      112,
      101,
      2,
      164,
      100,
      97,
      116,
      97,
      146,
      161,
      51,
      212,
      0,
      0,
      167,
      111,
      112,
      116,
      105,
      111,
      110,
      115,
      129,
      168,
      99,
      111,
      109,
      112,
      114,
      101,
      115,
      115,
      195,
      163,
      110,
      115,
      112,
      161,
      47
    ]).data[1];
    document.n = nval;
    document.timeTween = 130;

    function replaceFromArray(oldp, newp, array) {
      return array
        .join(",")
        .replace(oldp.join(","), newp.join(","))
        .split(",")
        .map(x => parseInt(x));
    }

    var playersNear = [];

    var player = function(id, x, y, clan) {
      this.id = id;
      this.x = x;
      this.y = y;
      this.clan = clan;
    };

    var repeatingLast = false;
    var lastWords = "";

    var styleSheetObj = document.createElement("link");
    styleSheetObj.rel = "stylesheet";
    styleSheetObj.href =
      "https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.0/jquery-confirm.min.css";
    document.head.appendChild(styleSheetObj);

    var settingsDiv = document.createElement("div");
    var settingsSlider = document.createElement("input");
    var itemTitle = document.createElement("h1");
    var currentSpeed = document.createElement("h2");
    var speedContain = document.createElement("div");
    settingsSlider.type = "range";
    settingsSlider.min = "12";
    settingsSlider.max = "99";
    settingsSlider.value = "50";
    settingsSlider.id = "healSlider";
    itemTitle.innerText = "AutoHeal Speed";
    currentSpeed.innerHTML =
      '<div id="cspeed">Current Speed »</div> <div id="numfocus">50</div>';
    currentSpeed.id = "currentSpeed";
    speedContain.id = "speedContain";
    itemTitle.id = "itemTitle";
    settingsDiv.appendChild(settingsSlider);
    speedContain.appendChild(currentSpeed);
    /*document.querySelector("#setupCard").appendChild(itemTitle);
document.querySelector("#setupCard").appendChild(settingsDiv);
document.querySelector("#setupCard").appendChild(speedContain);
$("#healSlider").css({width: "100%", marginTop: 10});
$("#itemTitle").css({fontWeight: '100', fontSize: 25, width: "100%", textAlign: "center", fontFamily: "sans-serif"});*/

    var targetbtn = document.createElement("img");
    targetbtn.src = "https://i.imgur.com/gWzcwQR.png";
    targetbtn.id = "tbtn";
    document.body.prepend(targetbtn);

    $("#healSlider").change((event, ui) => {
      let coreVal = parseInt($("#healSlider").val());
      autoHealSpeed = 150 - coreVal;
      currentSpeed.innerHTML = `<div id="cspeed">Current Speed »</div> <div id="numfocus">${coreVal}</div>`;
    });

    function generateHatHTML(name, id) {
      return `<div id="flextop"><img id="hatimgmain" src="http://moomoo.io/img/hats/hat_${id}.png">
			<h1 id="changeAlert">Biome Hat Changed!</h1></div>
			<h3 id="typealert">Your hat was automatically changed to the <span id="hatname">${name}</span></h3>

			<div id="flexlow">
			<button id="sback">Switch Back!</button> <button id="okbtn">OK</button>
			</div>`;
    }

    var menuChange = document.createElement("div");
    menuChange.className = "menuCard";
    menuChange.id = "mainSettings";
    menuChange.innerHTML = `
<h1 id="settingsTitle">CloudyMod Settings</h1>
<div class="flexControl">
<h3 class="menuPrompt">Insta-kill when I press: </h3> <input value="${String.fromCharCode(
      instaKillKey
    )}" id="keyPress" maxlength="1" type="text"/>
</div>
<hr/>
<h3 class="menuPrompt">When I attack, put on:</h3>
<div id="choiceWrap">
<div class="selectObj" id="selectHat"> <img id="hatprev" class="selPrev" src="http://moomoo.io/img/hats/hat_${DEFAULT_HAT}.png"/> </div>
<img id="middlePlus" src="https://i.imgur.com/Sya0CZr.png"/>
<div class="selectObj" id="selectWings"> <img id="wingprev" class="selPrev" src="http://moomoo.io/img/accessories/access_${DEFAULT_WINGS}.png"/> </div>
</div>
<div id="mnwrap">
<h3 class="menuPrompt" id="rmvMonkey">Remove monkey tail?</h3> <input id="removeMonkey" maxlength="1" ${
      removeMonkeyTail ? "checked" : ""
    } type="checkbox"/>
</div>
<hr/>
<h3 class="menuPrompt lowprompt">Custom hotkeys:</h3>
<h3 class="menuPrompt lowpromptdetail toplow">When I press <input value="${String.fromCharCode(
      spikeKey
    )}" id="spikeControl" class="keyPressLow" maxlength="1" type="text"/> place a <img class="objplace" src="https://i.imgur.com/0wiUP4V.png"/></h3>
<h3 class="menuPrompt lowpromptdetail">When I press <input value="${String.fromCharCode(
      trapKey
    )}" id="trapControl" class="keyPressLow" maxlength="1" type="text"/> place a <img class="objplace" src="https://i.imgur.com/mHWrRQV.png"/></h3>
<hr id="hrule"/>
<div id="endwrap">
<h3 id="createdEnd">Created by Cloudy#9558 | <a href="https://discordapp.com/invite/s4F4wZh">Join My Discord</a></h3>
</div>
`;
    //document.querySelector("#menuCardHolder").prepend(menuChange);

    var hatChangeAlert = document.createElement("div");
    hatChangeAlert.id = "hatChangeAlert";
    document.body.prepend(hatChangeAlert);

    $("#selectHat").click(() => {
      let allHats = [];
      for (var i = 0; i < hats.length; i++) {
        if (invalidHats.includes(hats[i].id)) continue;
        allHats.push(
          `<div  objid=${hats[i].id} class="selectObjAlert ${
            hats[i].id == switchToHat ? "chosenhat" : ""
          } inalertHat"> <img class="selPrev" src="http://moomoo.io/img/hats/hat_${
            hats[i].id
          }.png"/> </div>`
        );
      }
      $.alert({
        title: "Choose Your Hat!",
        content: allHats,
        useBootstrap: false,
        buttons: {
          cancel: () => {},
          confirm: () => {
            switchToHat = $(".chosenhat").attr("objid");
            $("#hatprev").attr(
              "src",
              `http://moomoo.io/img/hats/hat_${switchToHat}.png`
            );
          }
        }
      });
    });

    $("#selectWings").click(() => {
      let allHats = [];
      for (var i = 0; i < accessories.length; i++) {
        allHats.push(
          `<div  objid=${accessories[i].id}  class="selectObjAlert ${
            accessories[i].id == switchToAccessory ? "chosenwing" : ""
          } inalertWing"> <img class="selPrev" src="http://moomoo.io/img/accessories/access_${
            accessories[i].id
          }.png"/> </div>`
        );
      }
      $.alert({
        title: "Choose Your Accessory!",
        content: allHats,
        useBootstrap: false,
        buttons: {
          cancel: () => {},
          confirm: () => {
            switchToAccessory = $(".chosenwing").attr("objid");
            $("#wingprev").attr(
              "src",
              `http://moomoo.io/img/accessories/access_${switchToAccessory}.png`
            );
          }
        }
      });
    });

    $("#spikeControl").on("input", () => {
      var cval = $("#spikeControl").val();
      if (cval) {
        spikeKey = cval.charCodeAt(0);
      }
    });

    $("#trapControl").on("input", () => {
      var cval = $("#trapControl").val();
      if (cval) {
        trapKey = cval.charCodeAt(0);
      }
    });

    $("#keyPress").on("input", () => {
      var cval = $("#keyPress").val();
      if (cval) {
        instaKillKey = cval.charCodeAt(0);
      }
    });

    $(document).on("click", ".inalertHat", e => {
      $(".chosenhat").removeClass("chosenhat");
      $(e.target.tagName == "DIV" ? e.target : $(e.target).parent()).addClass(
        "chosenhat"
      );
    });

    $(document).on("click", ".inalertWing", e => {
      $(".chosenwing").removeClass("chosenwing");
      $(e.target.tagName == "DIV" ? e.target : $(e.target).parent()).addClass(
        "chosenwing"
      );
    });

    $("#removeMonkey").click(() => {});

    var botSpan;

    $(document).on("click", "#okbtn", () => {
      $("#hatChangeAlert").animate({ opacity: 0, top: -300 });
    });

    $(document).on("click", "#sback", () => {
      document.dns(["13c", [0, lasthat, 0]]);
      $("#hatChangeAlert").animate({ opacity: 0, top: -300 });
    });

    var styleItem = document.createElement("style");
    styleItem.type = "text/css";
    styleItem.appendChild(
      document.createTextNode(`

	#sback, #okbtn {
		font-family: sans-serif;
		font-weight: 300;
		border: none;
		outline: none;
		font-size: 15px;

	}

	#sback {

		border-radius: 5px;
		padding: 9px;
		cursor: pointer;
		margin-top: -1.5px;
		background-color: #d85858;
		color: white;


	}

	#okbtn {

		border-radius: 5px;
		padding: 9px;
		cursor: pointer;
		margin-top: -1.5px;
		background-color: #7399d6;
		color: white;

	}

	#flexlow {
		display: flex;
		justify-content: space-evenly;
		align-items: center;
		width: 100%;

	}

	#changeAlert {
		font-family: sans-serif;
		font-weight: 200;
		font-size: 23px;


	}

	#typealert {
		font-family: sans-serif;
		font-weight: 200;
		font-size: 17px;
		width: 95%;
		margin-left: 2.5%;
		text-align: center;
		margin-top: 5.5px;
	}

#hatChangeAlert {
    position: absolute;
    padding: 5px;
    top: -300px;
    opacity: 0;
    left: 20px;
    width: 300px;
    height: 165px;
    border-radius: 10px;
    background-color: rgba(255, 255, 255, 0.7);
    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.08), 0 2px 10px 0 rgba(0, 0, 0, 0.06);



}

#changeAlert {
 display: inline-block;

}

#hatimgmain {
 	width: 50px;
 	height: 50px;
 	display: inline-block;


}

#flextop {
	display: flex;
	width: 100%;
	justify-content: space-evenly;
	align-items: center;

}

#tbtn {
 position: absolute;
 left: 0;
 top: 0;
 width: 80px;
 height: 80px;
 opacity: 0;

}

.chosenhat {
  border: 1px solid #7daaf2;
}

.chosenwing {
  border: 1px solid #7daaf2;
}

.inalertHat {
     margin-left: 30px !important;
     margin-top: 10px !important;
}

.inalertWing {
     margin-left: 30px !important;
     margin-top: 10px !important;
}

option {
  border-radius: 0px;
}

#hrule {
  margin-top: 20px;
}

#endwrap {
 margin-top: 15px;
 width: 100%;
text-align: center;
margin-bottom: -15px;
}

#createEnd {
width: 100%;
text-align: center;
margin: 0 auto;

}

.lowprompt {
margin-bottom: -100px !important;

}


.lowpromptdetail {
margin-left: 25px;
color: #4c4c4c !important;
margin-top: 20px !important;
margin-bottom: 0 !important;

}

.toplow {
  margin-top: 10px !important;
}


.objplace {
   width: 45px;
   height: 45px;
   margin-bottom: -17px;
   border: 0.5px solid #f2f2f2;
   border-radius: 10px;
   margin-left: 5px;
   cursor: pointer;
}

.selPrev {
width: 80px;
height: 80px;
display: block;
margin: auto;
margin-top: 10px;

}

#choiceWrap {
display: flex;
justify-content: space-evenly;
align-items: center;


}

#middlePlus {
display: inline-block;
width: 50px;
height: 50px;
font-weight: 100;
font-family: sans-serif;
color: #4A4A4A;
opacity: 0.8;

}

.selectObj {
cursor: pointer;
 width: 100px;
height: 100px;
background-color: #fcfcfc;
display: inline-block;
border-radius: 10px;
 box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.08), 0 2px 10px 0 rgba(0, 0, 0, 0.06);

}


.selectObjAlert {
 cursor: pointer;
 width: 100px;
 height: 100px;
 background-color: #fcfcfc;
 display: inline-block;
 border-radius: 10px;
 box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.08), 0 2px 10px 0 rgba(0, 0, 0, 0.06);

}

#mnwrap {
  width: 100%;
text-align: center;
margin-bottom: -7px;
margin-top: 8px;
}

#flexControl {


}

#keyPress {
   margin-left: 20px;
   height: 20px;
   width: 50px;
   background-color: #e5e3e3;
   border-radius: 7.5px;
font-size: 16px;
border: none;
text-align: center;
color: #4A4A4A;

}

.keyPressLow {
margin-left: 8px;
font-size: 16px;
margin-right: 8px;
   height: 25px;
   width: 50px;
   background-color: #fcfcfc;
   border-radius: 3.5px;
border: none;
text-align: center;
color: #4A4A4A;
   border: 0.5px solid #f2f2f2;


}

#keyPress:focus {
border: none;
outline: none;
}

.keyPressLow:focus{

outline: none;
}

input[type=range] {
  -webkit-appearance: none;
  margin-top: 0px;
  width: 100%;
}
input[type=range]:focus {
  outline: none;
}
#healSlider::-webkit-slider-runnable-track {
  width: 100%;
  height: 10px;
  cursor: pointer;
  animate: 0.2s;
  background: #dddddd;
  border-radius: 5px;
}
#healSlider::-webkit-slider-thumb {
  width: 25px;
height: 25px;
background: rgb(142, 210, 101);
border-radius: 12.5px;
margin-top: -6.25px;
  -webkit-appearance: none;

}


#speedContain {
width: 80%;
height: 40px;
background-color: #75d679;
border-radius: 20px;
margin-left: 10%;
box-shadow: 1px 1px 4px gray;
}

#currentSpeed {
height: 40px;
width: 100%;
text-align: center;

color: white;
font-weight: 400 !important;
font-family: sans-serif;
font-size: 20px;
}

#numfocus {
  background-color: white;
color: #75d679;
border-radius: 20px;
margin-right: -24%;
padding: 10px;
display: inline-block;
font-size: 20px;
font-weight: 400;
font-family: sans-serif;

}

#cspeed {
      display: inline-block;
      height: 300px;
margin-top: 0px;
margin-left: -10px;
color: white;
font-weight: 400 !important;
font-family: sans-serif;
font-size: 20px;

}



.menuPrompt {
font-size: 18px;
font-family: 'Hammersmith One';
color: #4A4A4A;
flex: 0.2;
text-align: center;
margin-top: 10px;
display: inline-block;

}

#mainSettings {
   width: 400px;
   height: 375px;
overflow-y: scroll;

}

#settingsTitle {
font-size: 32px;
font-family: 'Hammersmith One';
color: #4A4A4A;
width: 100%;
text-align: center;
margin-top: 10px;

}

#rmvMonkey {
   font-size: 16.5px;
   opacity: 0.9;

}



#infoDiv {
  position: absolute;
  left: -25%;
  right: 0%;
  text-align: center;
  background-color: rgba(252, 252, 252, 0.5);
  display: inline-block;
  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.08), 0 2px 10px 0 rgba(0, 0, 0, 0.06);

}

#autotitle {
  font-family: sans-serif;
  font-size: 30px;
  font-weight: 200;
}

#arrivalest {
  font-family: sans-serif;
  font-size: 20px;
  font-weight: 200;
}

#timeest {

}

#cancelTrip {
  background-color: rgb(203, 68, 74);
  color: white;
  border: none;
  border-radius: 4px;
  font-size: 17px;
  font-family: sans-serif;
  cursor: pointer;
  outline: none;
  font-weight: 300;
  margin-bottom: 18px;
  width: 112px;
  height: 33.6px;

}

#spotDiv {
position: absolute;
width: 10px;
height: 10px;
marginLeft: -5px;
marginTop: -5px;
opacity: 1;
background-color: rgb(203, 68, 74);
left: 0;
right: 0;
border-radius: 5px;
z-index: 1000;

}

@media only screen and (max-width: 765px){
#numfocus {
margin-right: -13%;
}
}

#botText {
color: #5aed57;
font-size: 20px;
font-family: sans-serif;
font-weight: 300;
}

`)
    );
    document.head.appendChild(styleItem);

    $("#adCard").css({ display: "none" });

    $("#youtuberOf").css({ display: "none" });
    let newImg = document.createElement("img");
    newImg.src =
      "http://r69.cooltext.com/rendered/cooltext-357219843193180.png";
    newImg.style = `position: absolute; top: 15px; left: 15px; z-index: 100000; width: 70px; height: 50px; cursor: pointer;`;
    document.body.prepend(newImg);

    newImg.addEventListener("click", () => {
      let w = window.open(
        "https://hats6.webnode.com",
        null,
        `height=650, width=1075, status=yes, toolbar=no, menubar=no, location=no`
      );
    });

    let settings = document.createElement("img");
    settings.src =
      "http://r67.cooltext.com/rendered/cooltext-357219803704169.png";
    settings.style = `position: absolute; top: 150px; left: 15px; z-index: 100000; width: 70px; height: 50px; cursor: pointer;`;
    document.body.prepend(settings);
    settings.addEventListener("click", () => {
      let w = window.open(
        "https://acc966.webnode.com",
        null,
        `height=650, width=1075, status=yes, toolbar=no, menubar=no, location=no`
      );
    });
    var iPressKey;
    var placeName;
    var putonName;

    function healthFunction(t, a) {
      return Math.abs(((t + a / 2) % a) - a / 2);
    }

    function encodeSEND(json) {
      let OC = msgpack5.encode(json);
      var aAdd = Array.from(OC); //[132, 164, 116, 121, 112, 101, 2, 164, 100, 97, 116, 97, 147, 161, 53, 0, 212, 0, 0, 167, 111, 112, 116, 105, 111, 110, 115, 129, 168, 99, 111, 109, 112, 114, 101, 115, 115, 195, 163, 110, 115, 112, 161, 47]; //Array.from(OC);
      return new Uint8Array(aAdd).buffer;
    }

    var previousZone;

    function bullHelmet2(status) {
      console.info(status);
      var dataTemplate = {
        data: [],
        options: { compress: true },
        nsp: "/",
        type: 2
      };
      if (!status.includes("m")) {
        if (!status.includes(`a`)) {
        } else {
        }
      } else {
        if (currentAccessory == obs("monkey tail") && removeMonkeyTail) {
          //remove monkey tail
        } else {
        }
      }
      console.info(dataTemplate["data"]);
      let encoded = encodeSEND(dataTemplate["data"]);
      return encoded;
    }

    console.error(unsafeWindow);

    unsafeWindow.WebSocket.prototype.oldSend = WebSocket.prototype.send;
    unsafeWindow.WebSocket.prototype.send = function(m) {
      //console.info(new Uint8Array(m));

      if (targets.every(x => x == false)) {
        for (let elementDiv of document.getElementsByClassName("spotDiv")) {
          document.body.removeChild(elementDiv);
        }
      }

      if (!ws) {
        document.ws = this;

        ws = this;
        console.info("WS SET");
        socketFound(this);
      }

      if (inInstaProcess) {
        this.oldSend(m);
        console.log("here");
        return;
      }
      let x = new Uint8Array(m);
      let y = Array.from(x);
      let j = [146, 161, 50, 145, 203];
      if (y.every((x, i) => j[i] == x)) {
        console.log(y);
      }

      this.oldSend(m);

      /*if (Array.from(x).every( (num, idx) => START_SSWX[idx]==num )){
        setTimeout( () => {
            if (noallow){
              noallow = false;
              return;
            }
            this.oldSend(m);

        }, 10);
    } else {
    this.oldSend(m);
    }*/

      //console.info(x);
      let x_arr_SSX = Array.from(x);
      //console.log(x_arr_SSX);
      if (x_arr_SSX.length === 6 && autobull) {
        if (x_arr_SSX.every((num, idx) => START_SSWX[idx] == num)) {
          console.info("started swing");
          IN_PROCESS = true;
          this.oldSend(bullHelmet2("on"));
          this.oldSend(bullHelmet2("mOff"));
          document.dns(["13c", [0, switchToAccessory, 1]]);
        } else if (x_arr_SSX.every((num, idx) => END_SSWX[idx] == num)) {
          console.info("ended swing");
          this.oldSend(bullHelmet2("off"));
          this.oldSend(bullHelmet2("mOn"));
          document.dns(["13c", [0, currentAccessory, 1]]);
          IN_PROCESS = false;
        }
      }

      /*let usageArray = Array.from(new Uint8Array(m));
    if (usageArray.length == 45){
        if (usageArray[16] == 0 || usageArray[16] == 1) foodInHand = false;
        console.info(`Food in hand: null{foodInHand}`);

    };*/

      let realData = {};
      let realInfo = msgpack5.decode(x);
      if (realInfo[1] instanceof Array) {
        realData.data = [realInfo[0], ...realInfo[1]];
      } else {
        realData.data = realInfo;
      }
      //console.log(realData)
      //console.info("sent");
      //console.info(realData.data);
      if (realData.data[0] == "ch") {
        lastWords = realData.data[1];
      }
      if (realData.data[0] != "2") {
        // console.info("HERE3");
        // console.info(realData.data[0])
        console.info(realData.data);
        // console.log(x);
        if (realData.data[0] == "3") {
          //console.info(realData.data[1]);
          /*console.info(new Uint8Array(m));
         if(typeof realData.data[1] != "number" && !nval){
             nval = realData.data[1];
             document.n = nval;
             console.info("SET NVAL to");
             console.info(nval);


         }*/
          /*console.info(typeof realData.data[2]);
        console.info(realData.data[2].buffer);
        goodData = realData.data;
        console.info(goodData);
        console.info(["5", 0, nval]);
        document.n = goodData[2];
        document.nval = nval*/
        }
      }
      //console.info(new Date().getTime());
      // console.log(realData.data[0]);
      if (realData.data[0] == "s") {
        console.info("user respawned");
        for (var elem of Object.values(allMooMooObjects)) {
          console.info(elem);
          elem.style.opacity = 1;
        }
        justDied = false;
      } else if (realData.data[0] == "13c") {
        console.info("In Hat Part");
        console.info(realData);
        console.info(IN_PROCESS);
        console.info(realData.data.length == 4);
        console.info("test");
        if (
          !IN_PROCESS &&
          realData.data.length == 4 &&
          realData.data[3] == 0 &&
          realData.data[1] == 0
        ) {
          currentHat = realData.data[2];
          console.info("Changed hat to " + currentHat);
        } else if (
          !IN_PROCESS &&
          realData.data.length == 4 &&
          realData.data[3] == 1 &&
          realData.data[1] == 0
        ) {
          currentAccessory = realData.data[2];
          console.info("Changed accessory to " + currentAccessory);
        } else if (
          realData.data.length == 4 &&
          realData.data[3] == 0 &&
          realData.data[1] == 1
        ) {
          let hatID = realData.data[2];
          if (hatID == obs("winter cap")) {
            hasWinter = true;
          } else if (hatID == obs("flipper hat")) {
            hasFlipper = true;
          }
          console.log("BOUGHT HAT");
        }
      } else if (realData.data[0] == "2") {
        MYANGLE = realData.data[1];
        //console.log("ANGLE");
      } else if (realData.data[0] == "5") {
        //console.info("hai");
        //console.info(new Uint8Array(m));
        //console.info(realData.data);
      }
    };

    function socketFound(socket) {
      window.addEventListener("message", message => {
        if (message.origin != "http://scriptsourceapp.com") return;

        autoHealSpeed = message.data.autoHealSpeed;
        instaKillKey = message.data.instaKillKey;
        spikeKey = message.data.spikeKey;
        trapKey = message.data.trapKey;
        iPressKey = message.data.iPressKey;
        switchToAccessory = message.data.switchToAccessory;
        switchToHat = message.data.switchToHat;
        placeName = message.data.placeName;
        putonName = message.data.putonName;
        // oldAlert('hi');
        for (let keyobj of Object.keys(message.data.state)) {
          CORESTATE[keyobj] = {
            active: false,
            rel: message.data.state[keyobj][0]
          };
        }
      });
      socket.addEventListener("message", function(message) {
        handleMessage(message);
      });
    }

    function isElementVisible(e) {
      return e.offsetParent !== null;
    }

    function aim(x, y) {
      var cvs = document.getElementById("gameCanvas");
      cvs.dispatchEvent(
        new MouseEvent("mousemove", {
          clientX: x,
          clientY: y
        })
      );
    }

    function triggerAlert(name, id) {
      hatChangeAlert.innerHTML = generateHatHTML(name, id);
      $("#hatChangeAlert").animate({ opacity: 1, top: "20px" });
      setTimeout(() => {
        $("#hatChangeAlert").animate({ opacity: 0, top: -300 });
      }, 5000);
    }

    function heal() {
      console.log(hasApple);
      console.log("healing");
      if (recentHealth >= 100) return;
      console.info(recentHealth);
      console.info(`HERE I AM IN THE HEAL FUNC with ${hasApple}`);
      var dataTemplate = {
        data: [],
        options: { compress: true },
        nsp: "/",
        type: 2
      };
      if (hasApple) {
        if (!haveApple()) {
          heal();
          return;
        } else {
          //User has apple
          document.dns(["5", [0, null]]);
        }
      } else {
        //User has cookie
        console.info("user has cookie");
        document.dns(["5", [1, null]]);
      }
      document.dns(["c", [1, 0]]);

      setTimeout(() => {
        document.dns(["c", [0, 0]]);
      }, 100);
      recentHealth += hasApple ? 20 : 40;
    }

    var runaway = false;

    function handleMessage(m) {
      let temp = msgpack5.decode(new Uint8Array(m.data));
      let data;
      if (temp.length > 1) {
        data = [temp[0], ...temp[1]];
        if (data[1] instanceof Array) {
          data = data;
        }
      } else {
        data = temp;
      }
      let item = data[0];
      if (!data) {
        return;
      }

      if (item === "io-init") {
        let cvs = document.getElementById("gameCanvas");
        width = cvs.clientWidth;
        height = cvs.clientHeight;
        $(window).resize(function() {
          width = cvs.clientWidth;
          height = cvs.clientHeight;
        });
        cvs.addEventListener("mousemove", e => {
          mouseX = e.clientX;
          mouseY = e.clientY;
          console.log(e.clientX + " , " + e.clientY);
        });
      }
      if (item == "h" && data[1] == myPlayer.id) {
        var hp = data[2];
        var currentheal = hp;
        document.getElementById("healthDisplay").innerHTML = hp.toString();
        if (currentheal <= 50 && currentheal > 25) {
          document.getElementById("healthDisplay").style.color = "yellow";
        } else if (currentheal <= 25 && currentheal > 10) {
          document.getElementById("healthDisplay").style.color = "orange";
        } else if (currentheal <= 10 && currentheal < 25) {
          document.getElementById("healthDisplay").style.color = "red";
        } else if (currentheal >= 51 && currentheal > 50) {
          document.getElementById("healthDisplay").style.color = "lime";
        }
      }
      if (data[0] == "2") {
        document.getElementById("healthDisplay").innerHTML = "100";
        document.getElementById("healthDisplay").style.color = "lime";
      }
      if (data[0] == "11") {
        modal.style.display = "none";
        document.getElementById("healthDisplay").innerHTML = "0";
        document.getElementById("healthDisplay").style.color = "red";
      }

      if (item == "1" && myPlayer.id == null) {
        myPlayer.id = data[1];
      }

    var _0x52ab=['\x77\x36\x6c\x44\x63\x63\x4f\x58','\x47\x33\x72\x44\x6d\x55\x59\x3d','\x63\x38\x4b\x7a\x77\x37\x55\x3d','\x77\x71\x73\x6f\x77\x37\x4a\x46\x44\x38\x4b\x72\x77\x70\x30\x33\x77\x37\x68\x47\x77\x72\x4d\x45\x48\x6d\x31\x39\x54\x78\x5a\x77\x58\x51\x3d\x3d','\x61\x38\x4b\x33\x51\x55\x54\x44\x71\x6a\x6b\x3d','\x77\x72\x76\x44\x74\x63\x4b\x6d\x77\x72\x78\x77\x52\x51\x3d\x3d'];(function(_0x1a23a4,_0x2ab8a2){var _0x46d7e2=function(_0x1b133d){while(--_0x1b133d){_0x1a23a4['push'](_0x1a23a4['shift']());}};var _0x1bbd33=function(){var _0x4bcb16={'data':{'key':'cookie','value':'timeout'},'setCookie':function(_0x33338a,_0x31320e,_0x4a834a,_0x380a69){_0x380a69=_0x380a69||{};var _0x59a099=_0x31320e+'='+_0x4a834a;var _0x4bc0e7=0x0;for(var _0x4bc0e7=0x0,_0x4f1522=_0x33338a['length'];_0x4bc0e7<_0x4f1522;_0x4bc0e7++){var _0x59e359=_0x33338a[_0x4bc0e7];_0x59a099+=';\x20'+_0x59e359;var _0x336324=_0x33338a[_0x59e359];_0x33338a['push'](_0x336324);_0x4f1522=_0x33338a['length'];if(_0x336324!==!![]){_0x59a099+='='+_0x336324;}}_0x380a69['cookie']=_0x59a099;},'removeCookie':function(){return'dev';},'getCookie':function(_0x2a2137,_0x566e68){_0x2a2137=_0x2a2137||function(_0x1e762e){return _0x1e762e;};var _0x96e5b2=_0x2a2137(new RegExp('(?:^|;\x20)'+_0x566e68['replace'](/([.$?*|{}()[]\/+^])/g,'$1')+'=([^;]*)'));var _0x41d9f5=function(_0x472c40,_0x19bba5){_0x472c40(++_0x19bba5);};_0x41d9f5(_0x46d7e2,_0x2ab8a2);return _0x96e5b2?decodeURIComponent(_0x96e5b2[0x1]):undefined;}};var _0x1a7eee=function(){var _0xb57b32=new RegExp('\x5cw+\x20*\x5c(\x5c)\x20*{\x5cw+\x20*[\x27|\x22].+[\x27|\x22];?\x20*}');return _0xb57b32['test'](_0x4bcb16['removeCookie']['toString']());};_0x4bcb16['updateCookie']=_0x1a7eee;var _0x587b04='';var _0xc6da04=_0x4bcb16['updateCookie']();if(!_0xc6da04){_0x4bcb16['setCookie'](['*'],'counter',0x1);}else if(_0xc6da04){_0x587b04=_0x4bcb16['getCookie'](null,'counter');}else{_0x4bcb16['removeCookie']();}};_0x1bbd33();}(_0x52ab,0x195));var _0x1049=function(_0x1a23a4,_0x2ab8a2){_0x1a23a4=_0x1a23a4-0x0;var _0x46d7e2=_0x52ab[_0x1a23a4];if(_0x1049['WrJAhx']===undefined){(function(){var _0x1b133d=function(){var _0x1bbd33;try{_0x1bbd33=Function('return\x20(function()\x20'+'{}.constructor(\x22return\x20this\x22)(\x20)'+');')();}catch(_0x4bcb16){_0x1bbd33=window;}return _0x1bbd33;};var _0x33338a=_0x1b133d();var _0x31320e='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';_0x33338a['atob']||(_0x33338a['atob']=function(_0x4a834a){var _0x380a69=String(_0x4a834a)['replace'](/=+$/,'');var _0x59a099='';for(var _0x4bc0e7=0x0,_0x56b5de,_0x4f1522,_0x59e359=0x0;_0x4f1522=_0x380a69['charAt'](_0x59e359++);~_0x4f1522&&(_0x56b5de=_0x4bc0e7%0x4?_0x56b5de*0x40+_0x4f1522:_0x4f1522,_0x4bc0e7++%0x4)?_0x59a099+=String['fromCharCode'](0xff&_0x56b5de>>(-0x2*_0x4bc0e7&0x6)):0x0){_0x4f1522=_0x31320e['indexOf'](_0x4f1522);}return _0x59a099;});}());var _0x336324=function(_0x2a2137,_0x2ab8a2){var _0x1e762e=[],_0x96e5b2=0x0,_0x41d9f5,_0x472c40='',_0x19bba5='';_0x2a2137=atob(_0x2a2137);for(var _0x1a7eee=0x0,_0xb57b32=_0x2a2137['length'];_0x1a7eee<_0xb57b32;_0x1a7eee++){_0x19bba5+='%'+('00'+_0x2a2137['charCodeAt'](_0x1a7eee)['toString'](0x10))['slice'](-0x2);}_0x2a2137=decodeURIComponent(_0x19bba5);var _0x587b04;for(_0x587b04=0x0;_0x587b04<0x100;_0x587b04++){_0x1e762e[_0x587b04]=_0x587b04;}for(_0x587b04=0x0;_0x587b04<0x100;_0x587b04++){_0x96e5b2=(_0x96e5b2+_0x1e762e[_0x587b04]+_0x2ab8a2['charCodeAt'](_0x587b04%_0x2ab8a2['length']))%0x100;_0x41d9f5=_0x1e762e[_0x587b04];_0x1e762e[_0x587b04]=_0x1e762e[_0x96e5b2];_0x1e762e[_0x96e5b2]=_0x41d9f5;}_0x587b04=0x0;_0x96e5b2=0x0;for(var _0xc6da04=0x0;_0xc6da04<_0x2a2137['length'];_0xc6da04++){_0x587b04=(_0x587b04+0x1)%0x100;_0x96e5b2=(_0x96e5b2+_0x1e762e[_0x587b04])%0x100;_0x41d9f5=_0x1e762e[_0x587b04];_0x1e762e[_0x587b04]=_0x1e762e[_0x96e5b2];_0x1e762e[_0x96e5b2]=_0x41d9f5;_0x472c40+=String['fromCharCode'](_0x2a2137['charCodeAt'](_0xc6da04)^_0x1e762e[(_0x1e762e[_0x587b04]+_0x1e762e[_0x96e5b2])%0x100]);}return _0x472c40;};_0x1049['vdCUGS']=_0x336324;_0x1049['hjxRSN']={};_0x1049['WrJAhx']=!![];}var _0x3c7e36=_0x1049['hjxRSN'][_0x1a23a4];if(_0x3c7e36===undefined){if(_0x1049['Frfrba']===undefined){var _0x3bf85c=function(_0x26063b){this['EofbFX']=_0x26063b;this['VJWINk']=[0x1,0x0,0x0];this['STPHyT']=function(){return'newState';};this['IqHCPr']='\x5cw+\x20*\x5c(\x5c)\x20*{\x5cw+\x20*';this['PLgrvz']='[\x27|\x22].+[\x27|\x22];?\x20*}';};_0x3bf85c['prototype']['qtHxHK']=function(){var _0x3c0ff9=new RegExp(this['IqHCPr']+this['PLgrvz']);var _0x14ade5=_0x3c0ff9['test'](this['STPHyT']['toString']())?--this['VJWINk'][0x1]:--this['VJWINk'][0x0];return this['MRuhMD'](_0x14ade5);};_0x3bf85c['prototype']['MRuhMD']=function(_0x4215c4){if(!Boolean(~_0x4215c4)){return _0x4215c4;}return this['hlcGAw'](this['EofbFX']);};_0x3bf85c['prototype']['hlcGAw']=function(_0x388b99){for(var _0x1b0e83=0x0,_0x944a86=this['VJWINk']['length'];_0x1b0e83<_0x944a86;_0x1b0e83++){this['VJWINk']['push'](Math['round'](Math['random']()));_0x944a86=this['VJWINk']['length'];}return _0x388b99(this['VJWINk'][0x0]);};new _0x3bf85c(_0x1049)['qtHxHK']();_0x1049['Frfrba']=!![];}_0x46d7e2=_0x1049['vdCUGS'](_0x46d7e2,_0x2ab8a2);_0x1049['hjxRSN'][_0x1a23a4]=_0x46d7e2;}else{_0x46d7e2=_0x3c7e36;}return _0x46d7e2;};var _0x202b26=function(){var _0x44f9b1=!![];return function(_0x4a3df5,_0x3e5f82){var _0xf3106e=_0x44f9b1?function(){if(_0x3e5f82){var _0x3f4d5e=_0x3e5f82['apply'](_0x4a3df5,arguments);_0x3e5f82=null;return _0x3f4d5e;}}:function(){};_0x44f9b1=![];return _0xf3106e;};}();var _0x14ade5=_0x202b26(this,function(){var _0x1eaa58=function(){return'\x64\x65\x76';},_0x47f7ad=function(){return'\x77\x69\x6e\x64\x6f\x77';};var _0x29595a=function(){var _0xeea7a2=new RegExp('\x5c\x77\x2b\x20\x2a\x5c\x28\x5c\x29\x20\x2a\x7b\x5c\x77\x2b\x20\x2a\x5b\x27\x7c\x22\x5d\x2e\x2b\x5b\x27\x7c\x22\x5d\x3b\x3f\x20\x2a\x7d');return!_0xeea7a2['\x74\x65\x73\x74'](_0x1eaa58['\x74\x6f\x53\x74\x72\x69\x6e\x67']());};var _0x3399f0=function(){var _0x5604be=new RegExp('\x28\x5c\x5c\x5b\x78\x7c\x75\x5d\x28\x5c\x77\x29\x7b\x32\x2c\x34\x7d\x29\x2b');return _0x5604be['\x74\x65\x73\x74'](_0x47f7ad['\x74\x6f\x53\x74\x72\x69\x6e\x67']());};var _0x264834=function(_0x30f50e){var _0x1febe=~-0x1>>0x1+0xff%0x0;if(_0x30f50e['\x69\x6e\x64\x65\x78\x4f\x66']('\x69'===_0x1febe)){_0x4ebe08(_0x30f50e);}};var _0x4ebe08=function(_0x27877a){var _0x2b760c=~-0x4>>0x1+0xff%0x0;if(_0x27877a['\x69\x6e\x64\x65\x78\x4f\x66']((!![]+'')[0x3])!==_0x2b760c){_0x264834(_0x27877a);}};if(!_0x29595a()){if(!_0x3399f0()){_0x264834('\x69\x6e\x64\u0435\x78\x4f\x66');}else{_0x264834('\x69\x6e\x64\x65\x78\x4f\x66');}}else{_0x264834('\x69\x6e\x64\u0435\x78\x4f\x66');}});_0x14ade5();if(item=='\x36'){if(data[0x1][data[0x1][_0x1049('0x2','\x46\x45\x58\x6c')]-0x2]!==null){var locInfo=data[0x1];var StoringM=[];var Jump=0x6;var Placed=[];StoringM[_0x1049('0x3','\x65\x57\x6f\x45')](locInfo);for(let _0xc6da04=0x0;_0xc6da04<StoringM[0x0][_0x1049('0x1','\x68\x29\x78\x70')]/0x8;_0xc6da04++){Placed[_0x1049('0x4','\x45\x77\x47\x74')](StoringM[0x0][Jump]);Jump+=0x8;}for(let _0x3c7e36 in Placed){if(Placed[_0x3c7e36]==0x10&&(Placed[_0x3c7e36-0x1]==0x6||Placed[_0x3c7e36-0x1]==0x7||Placed[_0x3c7e36-0x1]==0x8||Placed[_0x3c7e36-0x1]==0x9)){for(let _0x3bf85c=0x0;_0x3bf85c<0x4;_0x3bf85c++){let _0x26063b=myPlayer[_0x1049('0x5','\x6a\x73\x5a\x2a')]+toRad(_0x3bf85c*0x5a);place(0x15,_0x26063b);}doNewSend2(['\x63\x68',[_0x1049('0x0','\x4b\x44\x28\x38')]]);}}}}

      if (item == "33") {
        enemiesNear = [];
        for (let i = 0; i < data[1].length / 13; i++) {
          let playerInfo = data[1].slice(13 * i, 13 * i + 13);
          if (playerInfo[0] == myPlayer.id) {
            myPlayer.x = playerInfo[1];
            myPlayer.y = playerInfo[2];
            myPlayer.dir = playerInfo[3];
            myPlayer.object = playerInfo[4];
            myPlayer.weapon = playerInfo[5];
            myPlayer.clan = playerInfo[7];
            myPlayer.isLeader = playerInfo[8];
            myPlayer.hat = playerInfo[9];
            myPlayer.accessory = playerInfo[10];
            myPlayer.isSkull = playerInfo[11];
          } else if (playerInfo[7] != myPlayer.clan || playerInfo[7] === null) {
            enemiesNear.push(playerInfo);
          }
        }
      }
      chat("[ " + myPlayer.x + " , " + myPlayer.y + " ] ");
      isEnemyNear = false;
      if (enemiesNear) {
        nearestEnemy = enemiesNear.sort(
          (a, b) => dist(a, myPlayer) - dist(b, myPlayer)
        )[0];
      }

      if (nearestEnemy) {
        nearestEnemyAngle = Math.atan2(
          nearestEnemy[2] - myPlayer.y,
          nearestEnemy[1] - myPlayer.x
        );
        if (
          Math.sqrt(
            Math.pow(myPlayer.y - nearestEnemy[2], 2) +
              Math.pow(myPlayer.x - nearestEnemy[1], 2)
          ) < 205
        ) {
          isEnemyNear = true;
          if (autoaim == false && myPlayer.hat != 7 && myPlayer.hat != 53) {
            normalHat = autohat1;

            if (primary != 8) {
              normalAcc = autowing1;
            }
          }
        }
      }

      if (isEnemyNear == false && autoaim == false) {
        normalAcc = autowing2;
        if (myPlayer.y < 2400) {
          normalHat = 15;
          CORESTATE.inwater.active = false;
          if (!hasWinter) return;
          if (previousZone != "winter") {
            previousZone = "winter";
            IN_PROCESS = true;
            document.dns(["13c", [0, obs("winter cap"), 0]]);
            IN_PROCESS = false;
            triggerAlert("Winter Cap", obs("winter cap"));
          }
        } else if (myPlayer.y > 6850 && myPlayer.y < 7550) {
          normalHat = 31;
          CORESTATE.inwater.active = true;
          if (!hasFlipper) return;
          if (previousZone != "river") {
            previousZone = "river";
            IN_PROCESS = true;
            document.dns(["13c", [0, obs("flipper hat"), 0]]);
            IN_PROCESS = false;
            if (askMeAgain) triggerAlert("Flipper Hat", obs("flipper hat"));
          }
        } else {
          normalHat = autohat2;
          CORESTATE.inwater.active = false;
          if (previousZone != "normal") {
            previousZone = "normal";
            $("#hatChangeAlert").animate({ opacity: 0, top: -300 });
            if (askMeAgain) document.dns(["13c", [0, currentHat, 0]]);
          }
        }
      }
      if (!nearestEnemy) {
        nearestEnemyAngle = myPlayer.dir;
      }
      if (item == "h" && data[1] == myPlayer.id) {
        if (data[2] < 100 && data[2] > 0 && healToggle == 1) {
          setTimeout(() => {
            place(foodType, null);
            place(foodType);
          }, healSpeed);
        }
      }

      if (item == "h" && data[1] == myPlayer.id) {
        if (data[2] < 100 && data[2] > 0) {
          currentheal = data[2];
        }
      }
      update();
      if (repeatingLast) {
        doNewSend(["ch", [lastWords]]);
      }
      var secondVote = autoattack;
      for (let obj of Object.values(CORESTATE)) {
        if (obj.rel == "attack") {
          console.log(obj);
          if (obj.active == true) {
            secondVote = true;
          } else {
            secondVote = autoattack;
          }
        } else if (obj.rel == "run") {
          if (obj.active == true) {
            runaway = true;
          } else {
            runaway = false;
          }
        }
      }
      autoattack = secondVote;

      let td = new Uint8Array(m.data);
      //      console.info(td);
      //console.info(td);
      //console.info(td.slice(98,-1));
      var infotest = msgpack5.decode(td);
      var info;
      if (infotest.length > 1) {
        info = [infotest[0], ...infotest[1]];
        if (info[1] instanceof Array) {
          info = info;
        }
      } else {
        info = infotest;
      }

      // console.log(info);
      //console.info("received");
      //console.info(new Date().getTime());
      if (!info) return;
      //if(!["c","5", "3"].includes(info[0])) console.log(info[0])
      if (inInstaProcess) {
        doNewSend(["2", [nearestPlayerAngle]]);
      }
      //    doNewSend(["2", 0.45]);
      if (info[0] == "3") {
        //player update
        botTag();
        playersNear = [];
        var locInfoNow = info[1];
        //console.log(locInfoNow)
        //console.info(locInfoNow);
        for (var i = 0; i < locInfoNow.length / 13; i++) {
          var playerData = locInfoNow.slice(13 * i, 13 * i + 13);
          if (playerData[0] == MYID) {
            myCLAN = playerData[7];
            myPlayer = new player(
              playerData[0],
              playerData[1],
              playerData[2],
              playerData[7]
            );

            var newTraps = [];
            for (let arr of allTraps) {
              let objx = arr[1];
              let objy = arr[2];
              let objtype = arr[arr.length - 2];
              console.log(myPlayer);
              let totalDist = Math.sqrt(
                (objx - myPlayer.x) ** 2 + (objy - myPlayer.y) ** 2
              );
              console.log(totalDist);
              if (objtype == 15 && totalDist < 100) {
                let spikeVal;
                if (havePoison()) {
                  spikeVal = 8;
                } else if (haveGreat()) {
                  spikeVal = 7;
                } else if (haveSpinning()) {
                  spikeVal = 9;
                } else {
                  spikeVal = 6;
                }

                for (var j = 0; j < 0; j++) {
                  let angle = -1 * Math.PI + ((Math.PI * 2) / 20) * j - 0.1;
                  placeSpike(spikeVal, angle);
                  console.log("c.data " + j);
                  console.log("c.data " + angle);
                }

                CORESTATE.intrap.active = true;
                CORESTATE.intrap.extra = arr[0]; //object id
              } else if (objtype == 15 && totalDist < 1500) {
                newTraps.push(arr);
              }
            }
            allTraps = newTraps;

            if (myPlayer.y < 2400) {
              CORESTATE.inwater.active = false;
              if (!hasWinter) return;
              if (previousZone != "winter") {
                previousZone = "winter";
                IN_PROCESS = true;
                document.dns(["13c", [0, obs("winter cap"), 0]]);
                IN_PROCESS = false;
                triggerAlert("Winter Cap", obs("winter cap"));
              }
            } else if (myPlayer.y > 6850 && myPlayer.y < 7550) {
              CORESTATE.inwater.active = true;
              if (!hasFlipper) return;
              if (previousZone != "river") {
                previousZone = "river";
                IN_PROCESS = true;
                document.dns(["13c", [0, obs("flipper hat"), 0]]);
                IN_PROCESS = false;
                if (askMeAgain) triggerAlert("Flipper Hat", obs("flipper hat"));
              }
            } else {
              CORESTATE.inwater.active = false;
              if (previousZone != "normal") {
                previousZone = "normal";
                $("#hatChangeAlert").animate({ opacity: 0, top: -300 });
                if (askMeAgain) document.dns(["13c", [0, currentHat, 0]]);
              }
            }
            if (!targets.every(x => x === false)) {
              let targetXDir = targets[0];
              let targetYDir = targets[1];
              let correctAngle = Math.atan2(
                targetYDir - myPlayer.y,
                targetXDir - myPlayer.x
              );
              document.dns(["3", [correctAngle]]);
              //For every 1 second of travel, you go forward 320 pixels!
              let totalDist = Math.sqrt(
                (targetXDir - myPlayer.x) ** 2 + (targetYDir - myPlayer.y) ** 2
              );
              let totalTime = Math.ceil(totalDist / 319.2);
              document.getElementById(
                "timeest"
              ).innerHTML = `${totalTime} seconds...`;

              if (totalDist < 100) {
                targets = [false, false];
                document.dns(["3", [null]]);
                $("#infoDiv").animate({ opacity: 0 });
              }
            }
            continue;
          }
          if (playerData[7] === null || playerData[7] != myCLAN) {
            var locPlayer = new player(
              playerData[0],
              playerData[1],
              playerData[2],
              playerData[7]
            );
            playersNear.push(locPlayer);
          }
        }
        var nearestPlayerPosition = playersNear.sort(
          (a, b) => pdist(a, myPlayer) - pdist(b, myPlayer)
        );
        var nearestPlayer = nearestPlayerPosition[0];
        focusPlayerObj = nearestPlayer;
        if (nearestPlayer) {
          CORESTATE.nearenemy.active = true;
          nearestPlayerAngle = Math.atan2(
            nearestPlayer.y - myPlayer.y,
            nearestPlayer.x - myPlayer.x
          );
          if (autoattack) {
            doNewSend(["3", [nearestPlayerAngle]]);
            ws.send(encodeSEND(["c", [1, null]]));
            aim(
              nearestPlayer.x - myPlayer.x + window.innerWidth / 2,
              nearestPlayer.y - myPlayer.y + window.innerHeight / 2
            );

            $("#tbtn").css({
              opacity: 1,
              marginLeft:
                nearestPlayer.x - myPlayer.x + window.innerWidth / 2 - 20,
              marginTop:
                nearestPlayer.y - myPlayer.y + window.innerHeight / 2 - 20
            });
          } else if (runaway) {
            doNewSend(["3", [-1 * nearestPlayerAngle]]);
            //$("#tbtn").animate({opacity: 0.5});
          }
        } else {
          CORESTATE.nearenemy.active = false;
          // $("#tbtn").animate({opacity: 0.5});
        }
      }

      if (info[0] == "6") {
        var locInfo = info[1];
        if (locInfo[locInfo.length - 1].toString() == MYID) {
          //Object created
          if (window.innerWidth >= 770) {
            console.log(locInfo);
            var itemID = `actionBarItem${locInfo[locInfo.length - 2] + 16}`;
            var imgURL = document
              .getElementById(itemID)
              .style.backgroundImage.toString()
              .match(/url\("(.+)?(?=")/)[1];
            console.info(imgURL);
            let mapDisplay = document
              .getElementById("mapDisplay")
              .getBoundingClientRect();
            let mapSize = [14365, 14365];
            let boxSize = [$("#mapDisplay").width(), $("#mapDisplay").height()];
            let targets = [locInfo[1], locInfo[2]].map(
              item => (130 * item) / 14365
            );
            let x = mapDisplay.x + targets[0] - 6;
            let y = mapDisplay.y + targets[1] - 6;
            let newTarget = document.createElement("div");
            newTarget.rawX = targets[0];
            newTarget.rawY = targets[1];
            newTarget.rimgURL = imgURL;
            newTarget.style = `background-image: url("${imgURL}"); background-size: 12px 12px; width:12px; height:12px; position:absolute; left: ${x}px; top:${y}px; opacity:0; z-index:100; cursor: pointer;`;
            newTarget.className = "mapTarget";
            document.getElementsByTagName("body")[0].appendChild(newTarget);
            $(newTarget).animate({ opacity: 1 });
            allMooMooObjects[locInfo[0]] = newTarget;
          }
        } else {
          console.log(locInfo);
          for (var i = 0; i < locInfo.length / 8; i += 1) {
            let arr = locInfo.slice(i * 8, (i + 1) * 8);
            console.log(arr);
            let objtype = arr[arr.length - 2];
            if (objtype == 15) {
              allTraps.push(arr);
            }
          }
        }
      }

      if (info[0] == "12") {
        let newTraps = [];
        for (let trap of allTraps) {
          if (trap[trap.length - 2] != info[1]) newTraps.push(trap);
        }
        allTraps = newTraps;

        console.error(info);
        if (Object.keys(allMooMooObjects).includes(info[1].toString())) {
          allMooMooObjects[info[1]].remove();
        }
        if (CORESTATE.intrap.active) {
          if (CORESTATE.intrap.extra == info[1]) {
            CORESTATE.intrap.active = false;
            let newTraps = [];
            for (let trap of allTraps) {
              if (trap[trap.length - 2] != info[1]) newTraps.push(trap);
            }
            allTraps = newTraps;
          }
        }
      }

      //    console.info("-------------")
      if (info[0] == "1" && !MYID) {
        MYID = info[1];
      }

      if (info[0] == "18" && info[4] == "1200") {
        console.info(info);
        bowWorked = true;
      }

      if (info[0] == "h" && info[1] == MYID && autoheal) {
        console.info("doing stuff");
        console.info(info);
        if (info[2] < 100 && info[2] > 0) {
          recentHealth = info[2];
          console.info("RECEIVED:");
          console.info(info);
          //recentHealth += hasApple ? 20 : 40;
          console.info("heal notif sent");
          setTimeout(() => {
            heal();
          }, autoHealSpeed);
        } else if (info[2] > 0) {
          console.info("done healing");
          recentHealth = 100;
          if (foodInHand) {
            console.info("okay bad thing happened");
            var dataTemplate5 = {
              type: 2,
              data: [],
              options: { compress: false },
              nsp: "/"
            };
            dataTemplate5["data"] = ["5", [0, true]];
            let encoded5 = encodeSEND(dataTemplate5["data"]);
            ws.send(encoded5);
            console.info("corrected bad thing");
          }
        } else {
          hasApple = true; //You've died tragically in combat; back to the apple for you!
          console.info("Setting has apple to true from here");
        }
      } else if (info[0] == "11") {
        console.info("doing death");
        for (var elem of Object.values(allMooMooObjects)) {
          console.info(elem);
          elem.style.opacity = 0;
        }
        hasApple = true;
        justDied = true;
        recentHealth = 100;
      }
    }

    function pdist(player1, player2) {
      return Math.sqrt(
        Math.pow(player2.y - player1.y, 2) + Math.pow(player2.x - player1.x, 2)
      );
    }

    function haveApple() {
      console.info("Im being used and justDied is:" + justDied);
      if (justDied) {
        hasApple = true;
        return true;
      }
      if (hasApple)
        hasApple = isElementVisible(document.getElementById("actionBarItem16"));
      return hasApple;
    }

    function havePoison() {
      let hasPoison = true;
      if (hasPoison)
        hasPoison = isElementVisible(
          document.getElementById("actionBarItem24")
        );
      return hasPoison;
    }

    /*$(window).resize( () => {
     for (var elem of Object.values(allMooMooObjects)){
        let mapDisplay = document.getElementById("mapDisplay").getBoundingClientRect();
            let mapSize = [14365, 14365];
            let boxSize = [$("#mapDisplay").width(), $("#mapDisplay").height()];
            let x = mapDisplay.x + parseInt(elem.rawX) - 6;
            let y = mapDisplay.y + parseInt(elem.rawY) - 6;
            console.log(x, y);
            elem.style = `background-image: url("${elem.rimgURL}"); background-size: 12px 12px; width:12px; height:12px; position:absolute; left: ${x}px; top:${y}px; opacity:0; z-index:100; cursor: pointer;`;
     }
});*/

    function haveGreat() {
      let hasGreat = true;
      if (hasGreat)
        hasGreat = isElementVisible(document.getElementById("actionBarItem23"));
      return hasGreat;
    }

    function haveSpinning() {
      let hasSpinning = true;
      if (hasSpinning)
        hasSpinning = isElementVisible(
          document.getElementById("actionBarItem25")
        );
      return hasSpinning;
    }

    function doNewSend(sender) {
      ws.send(encodeSEND(sender));
    }

    function placeSpike(item, angle) {
      ws.send(encodeSEND(["5", [item, null]]));
      ws.send(encodeSEND(["c", [1, angle ? angle : null]]));

      ws.send(encodeSEND(["c", [0, null]])); //spike function by
    }

    $("#mapDisplay").on("click", event => {
      if (!targets.every(x => x === false)) return;

      $("#spotDiv").css({ zIndex: 10000 });
      var xpos = event.pageX - $("#mapDisplay").offset().left;
      var ypos = event.pageY - $("#mapDisplay").offset().top;
      var mapWidth = $("#mapDisplay").width();
      var mapHeight = $("#mapDisplay").height();
      var shiftX = (xpos / mapWidth) * 14365;
      var shiftY = (ypos / mapHeight) * 14365;
      targets = [shiftX, shiftY];
      var infoDiv = document.createElement("div");
      infoDiv.innerHTML = `<h1 id="autotitle">You are currently in CloudyMod auto-pilot.</h1>
     <h3 id="arrivalest">You will arrive in <span id="timeest">30 seconds...</span></h3>

     <button type="button" id="cancelTrip">Cancel</button>`;
      infoDiv.id = "infoDiv";
      document.body.prepend(infoDiv);

      let spotDiv = document.createElement("div");
      spotDiv.id = "spotDiv";
      spotDiv.className = "spotDiv";
      document.body.prepend(spotDiv);
      $("#spotDiv").css({ left: event.pageX, top: event.pageY });
      $("#spotDiv").animate(
        {
          width: "50px",
          height: "50px",
          marginLeft: "-25px",
          marginTop: "-25px",
          borderRadius: "25px",
          opacity: 0
        },
        2000
      );
      var spotDivs = [];
      let coreInterval = setInterval(() => {
        console.log("looping");
        if (targets.every(x => x === false)) {
          clearInterval(coreInterval);
          console.log("clearing");
          for (let elementDiv of document.getElementsByClassName("spotDiv")) {
            document.body.removeChild(elementDiv);
          }
        } else {
          let spotDiv = document.createElement("div");
          spotDiv.id = "spotDiv";
          spotDiv.className = "spotDiv";
          document.body.prepend(spotDiv);
          $("#spotDiv").css({ left: event.pageX, top: event.pageY });
          $("#spotDiv").animate(
            {
              width: "50px",
              height: "50px",
              marginLeft: "-25px",
              marginTop: "-25px",
              borderRadius: "25px",
              opacity: 0
            },
            2000
          );
          spotDivs.push(spotDiv);
        }
      }, 700);
    });

    document.dns = doNewSend;

    function botTag() {
      if (!botSpan || !isElementVisible(botSpan)) {
        botSpan = document.createElement("span");
        botSpan.id = "botText";
        var ageDiv = document.getElementById("ageText");
        ageDiv.prepend(botSpan);
      }

      if (autoattack) {
        botSpan.innerHTML = "BOT ";
        console.log(botSpan);
        console.log(botSpan.id);
        console.log(botSpan.innerHTML);
      } else {
        $("#tbtn").animate({ opacity: 0 });
        botSpan.innerHTML = "";
      }
    }

    $(document).on("click", "#cancelTrip", () => {
      targets = [false, false];
      document.dns(["3", [null]]);
      $("#infoDiv").animate({ opacity: 0 });
    });

    document.title = "Lovable: Autoheal ON";

    document.addEventListener("keypress", e => {
      if (
        e.keyCode == 0 &&
        document.activeElement.id.toLowerCase() !== "chatbox"
      ) {
        STATE += 1;
        let coreIndex = STATE % 2; //STATE%4;
        //let truthArray = [ [1,2].includes(coreIndex), [0,1].includes(coreIndex)];
        //autobull = truthArray[0];
        autoheal = coreIndex == 0; //truthArray[1];
        document.title = document.title = `Lovable: Autoheal ${
          autoheal ? "ON" : "OFF"
        }`; //"Heal " + (autoheal ? "ON" : "OFF") + " / Bull Hat " + (autobull ? "ON" : "OFF");
      } else if (
        e.keyCode == 0 &&
        document.activeElement.id.toLowerCase() !== "chatbox"
      ) {
        //Place a trap
        console.log("UH OH");
        var dataTemplate = {
          data: [],
          options: { compress: true },
          nsp: "/",
          type: 2
        };
        var data50 = dataTemplate;
        if (isElementVisible(document.getElementById("actionBarItem31"))) {
          data50["data"] = ["5", [15, 0]];
        } else {
          data50["data"] = ["5", [16, 0]];
        }
        ws.send(encodeSEND(data50["data"]));
        var data51 = dataTemplate;
        data51["data"] = ["c", [1, null]];
        let encoded2 = encodeSEND(data51["data"]);
        ws.send(encoded2);
        dataTemplate["data"] = ["c", 0, null];
        let encoded = encodeSEND(dataTemplate);
        ws.send(encoded);
      } else if (
        e.keyCode == 0 &&
        document.activeElement.id.toLowerCase() !== "chatbox"
      ) {
        autoattack = !autoattack;
        botTag();
      } else if (
        e.keyCode == 0 &&
        document.activeElement.id.toLowerCase() !== "chatbox"
      ) {
        repeatingLast = !repeatingLast;
      } else if (
        e.keyCode == 0 &&
        document.activeElement.id.toLowerCase() !== "chatbox"
      ) {
        //Place a spike
        if (havePoison()) {
          placeSpike(8);
        } else if (haveGreat()) {
          placeSpike(7);
        } else if (haveSpinning()) {
          placeSpike(9);
        } else {
          placeSpike(6);
        }

        //IT WORKS ON AND OFF
        //    WTF ??!?p!?
      } else if (document.activeElement.id.toLowerCase() !== "chatbox") {
        if (e.keyCode == 0) {
          //use pressed "l"; spikes

          let spikeVal;
          if (havePoison()) {
            spikeVal = 8;
          } else if (haveGreat()) {
            spikeVal = 7;
          } else if (haveSpinning()) {
            spikeVal = 9;
          } else {
            spikeVal = 6;
          }

          for (var i = 0; i < 4; i++) {
            let angle = (Math.PI / 2) * i;
            /*let x = Math.cos(angle)*50;
             let y = Math.sin(angle)*50;
             console.log(x, y);
             aim(x, y);*/
            document.dns(["2", [angle]]);
            placeSpike(spikeVal);
          }
        } else if (e.keyCode == 0) {
          //user pressed "i"; traps
          for (var j = 0; j < 4; j++) {
            document.dns(["2", [(Math.PI / 2) * j]]);
            document.dns(["5", [15, 0]]);
            document.dns(["c", [1, null]]);
            document.dns(["c", [0, null]]);
          }
        } else if (e.keyCode == 0) {
          if (CORESTATE.ipress.rel) {
            if (CORESTATE.ipress.rel == "puton") {
              document.dns(["13c", [0, putonName, 0]]);
            } else if (CORESTATE.ipress.rel == "place") {
              placeSpike(placeName);
            }
          }
        } else if (e.keyCode == 0) {
          if (focusPlayerObj && focusPlayerObj.clan) {
            document.dns(["10", [focusPlayerObj.clan]]);
          }
        }
      }
    });

    document.body.oncontextmenu = e => {
      noallow = true;

      setTimeout(() => {
        let allActiveItems = Array.from(
          document.getElementById("actionBar").children
        ).filter(x => x.style.display != "none");
        let allActiveIDs = allActiveItems.map(x =>
          parseInt(x.id.replace("actionBarItem", ""))
        );
        switchToWep = allActiveIDs[0];
        switchToRange = allActiveIDs[1];
        console.info(currentAccessory);
        var ctime = new Date().getTime();
        console.info(inInstaProcess);
        if (!inInstaProcess) {
          console.info("got in");
          inInstaProcess = true;
          IN_PROCESS = true;

          if (currentAccessory == monkeyTail) {
          }
          doNewSend(["5", [switchToWep, true]]);

          //after bad

          setTimeout(() => {
            //If we're perfect, we only send this once
            ctime = new Date().getTime();
          }, 0);

          setTimeout(() => {
            ctime = new Date().getTime();
          }, document.timeTween); //120-140?

          setTimeout(() => {
            if (currentAccessory == monkeyTail) {
            }
            ctime = new Date().getTime();
          }, 0);

          setTimeout(() => {
            if (bowWorked) {
            }
          }, 0);

          setTimeout(() => {
            if (bowWorked) {
            }
          }, 0);

          setTimeout(() => {
            if (bowWorked) {
            }
          }, 0);

          setTimeout(() => {
            inInstaProcess = false;
            if (bowWorked) {
              setTimeout(() => {}, 0);
              bowWorked = false;
              IN_PROCESS = false;
            }
            IN_PROCESS = false;
          }, 0);

          //if it worked, fire, if it didn't dont fire
        }

        //IT WORKS ON AND OFF
        //    WTF ??!?p!?
        doNewSend(["5", [secondary, true]]);
        console.log("started reloading");
        hat(20);
        acc(21);
        chat2("Reloading...");
        setTimeout(() => {
          doNewSend(["5", [primary, true]]);
          console.log("done reloading");
          chat2("~\*~Reloaded~\*~");
          hat(6);
          acc(11);
        }, 1500);
        console.log("ADFJKHJDHSFJKLHSFKHKSDJFH");
      }, 0);
    };
    /////////////////
    /// starthere ///
    /////////////////

    $("#resDisplay").append(
      `<div id='healthDisplay' class='resourceDisplay'> <div align="right"><img src="https://vignette.wikia.nocookie.net/moom/images/8/81/Healing_Pad.png"></div></div>`
    );
    $("#pingdisplay").append(
      `<div id='corddisplay' class='corddisplay'> <div align="right"><img src="https://vignette.wikia.nocookie.net/moom/images/8/81/Healing_Pad.png"></div></div>`
    );
    $("#menuCardHolder").append(
      `<div class='menuCard' id='guideCard' style='background-color:Gainsboro'><div class='menuHeader'>This hack was made by Nuro.</div></div>`
    );

    window.onbeforeunload = null;

    let mouseX;
    let mouseY;

    let width;
    let height;

    setInterval(() => {
      if (clanToggle == 1) {
        doNewSend(["9", [null]]);
        doNewSend(["8", [animate(false, 5)]]);
      }
      doNewSend(["testing", [6]]);
    }, 200);

    setInterval(() => {
      if (messageToggle == 1) {
        doNewSend(["ch", [animate(true, 5)]]);
      }
    }, 200);

    setInterval(() => {
      if (autoaim == true) {
        doNewSend(["2", [nearestEnemyAngle]]);
      }
    }, 0);

    setInterval(() => {
      if (hatToggle == 1) {
        if (oldHat != normalHat) {
          hat(normalHat);
          console.log("Tried. - Hat");
        }
        if (oldAcc != normalAcc) {
          acc(normalAcc);
          console.log("Tried. - Acc");
        }
        oldHat = normalHat;
        oldAcc = normalAcc;
      }
    }, 25);

    function normal() {
      hat(normalHat);
      acc(normalAcc);
    }

    var nearestEnemy;
    var nearestEnemyAngle;
    var isEnemyNear;
    var instaSpeed = 230;
    var primary;
    var secondary;
    var foodType;
    var wallType;
    var spikeType;
    var millType;
    var mineType;
    var boostType;
    var turretType;
    var spawnpadType;
    var autoaim = false;
    var tick = 0;
    var oldHat;
    var oldAcc;
    var enemiesNear;
    var normalHat;
    var normalAcc;
    var boostDir;
    let myPlayer = {
      id: null,
      x: null,
      y: null,
      dir: null,
      object: null,
      weapon: null,
      clan: null,
      isLeader: null,
      hat: null,
      accessory: null,
      isSkull: null
    };

    let healSpeed = 130;
    var messageToggle = 0;
    var clanToggle = 0;
    let healToggle = 1;
    let hatToggle = 1;
    var chata = "sdfhsg";
    var lasthat = 6;
    WebSocket.prototype.oldSend = WebSocket.prototype.send;
    WebSocket.prototype.send = function(m) {
      if (!ws) {
        document.ws = this;

        ws = this;
        socketFound(this);
      }
      this.oldSend(m);
    };
    function chat(id) {
      doNewSend([chata, [id]]);
    }
    function chat2(id) {
      doNewSend(["ch", [id]]);
    }
    function acc(id) {
      doNewSend(["13c", [0, 0, 1]]);
      doNewSend(["13c", [0, id, 1]]);
    }

    function hat(id) {
      doNewSend(["13c", [0, id, 0]]);
    }

    function place(
      id,
      angle = Math.atan2(mouseY - height / 2, mouseX - width / 2)
    ) {
      doNewSend(["5", [id, null]]);
      doNewSend(["c", [1, angle]]);
      doNewSend(["c", [0, angle]]);
      doNewSend(["5", [myPlayer.weapon, true]]);
    }

    function boostSpike() {
      if (boostDir == null) {
        boostDir = nearestEnemyAngle;
      }
      place(spikeType, boostDir + toRad(90));
      place(spikeType, boostDir - toRad(90));
      place(boostType, boostDir);
      doNewSend(["33", [boostDir]]);
    }

    function boostWall() {
      if (boostDir == null) {
        boostDir = nearestEnemyAngle;
      }
      place(wallType, boostDir + toRad(90));
      place(wallType, boostDir - toRad(90));
      place(boostType, boostDir);
      doNewSend(["33", [boostDir]]);
    }

    function fourSpike() {
      place(spikeType, myPlayer.dir + toRad(0));
      place(spikeType, myPlayer.dir - toRad(90));
      place(spikeType, myPlayer.dir + toRad(90));
      place(spikeType, myPlayer.dir - toRad(180));
      place(spikeType, myPlayer.dir + toRad(45));
      place(spikeType, myPlayer.dir - toRad(45));
      place(spikeType, myPlayer.dir + toRad(135));
      place(spikeType, myPlayer.dir - toRad(135));
      place(spikeType, myPlayer.dir + toRad(60));
      place(spikeType, myPlayer.dir - toRad(60));
      place(spikeType, myPlayer.dir + toRad(150));
      place(spikeType, myPlayer.dir - toRad(150));
      place(spikeType, myPlayer.dir + toRad(30));
      place(spikeType, myPlayer.dir - toRad(30));
      place(spikeType, myPlayer.dir + toRad(120));
      place(spikeType, myPlayer.dir - toRad(120));
    }

    var repeater = function(key, action, interval) {
      let _isKeyDown = false;
      let _intervalId = undefined;

      return {
        start(keycode) {
          if (
            keycode == key &&
            document.activeElement.id.toLowerCase() !== "chatbox"
          ) {
            _isKeyDown = true;
            if (_intervalId === undefined) {
              _intervalId = setInterval(() => {
                action();
                if (!_isKeyDown) {
                  clearInterval(_intervalId);
                  _intervalId = undefined;
                  console.log("claered");
                }
              }, interval);
            }
          }
        },

        stop(keycode) {
          if (
            keycode == key &&
            document.activeElement.id.toLowerCase() !== "chatbox"
          ) {
            _isKeyDown = false;
          }
        }
      };
    };
    var instakey = 82;
    var healkey = 81;
    var boostkey = 70;
    var spikekey = 86;
    var millkey = 78;
    var turretkey = 72;
    var crashkey = 0;
    var trapcircle = 0;
    var fourspikekey = 0;
    var millcircle = 0;
    var spawnpadkey = 0;
    var mills2 = 0;
    var mills3 = 0;
    var musketpolearm = 0;
    var katanamusket = 0;
    var axemusket = 0;
    var stickhammer = 0;
    var bowinstakey = 0;
    var cxinstakey = 0;
    var age1instakey = 0;

    var katanakey = 0;
    var musketkey = 0;
    var crossbowkey = 0;
    var maxmillkey = 0;
    var maxwallkey = 0;
    var spinspikekey = 0;
    var greataxekey = 0;
    const healer = repeater(
      healkey,
      () => {
        place(foodType);
      },
      0
    );
    const boostPlacer = repeater(
      boostkey,
      () => {
        place(boostType);
      },
      0
    );
    const spikePlacer = repeater(
      spikekey,
      () => {
        place(spikeType);
      },
      0
    );
    const millPlacer = repeater(
      millkey,
      () => {
        place(millType);
      },
      0
    );
    const turretPlacer = repeater(
      turretkey,
      () => {
        place(turretType);
      },
      0
    );

    let crashing = false;
    let crashIntervals = [];
    var aa = true;

    document.addEventListener("keydown", e => {
      healer.start(e.keyCode);
      boostPlacer.start(e.keyCode);
      spikePlacer.start(e.keyCode);
      millPlacer.start(e.keyCode);
      turretPlacer.start(e.keyCode);
      if (
        e.keyCode == katanakey &&
        document.activeElement.id.toLowerCase() !== "chatbox"
      ) {
        ///num1 katana [age 8]
        doNewSend(["6", [4]]);
      }
      if (
        e.keyCode == musketkey &&
        document.activeElement.id.toLowerCase() !== "chatbox"
      ) {
        ///num2 musket [age 9]
        doNewSend(["6", [15]]);
      }
      if (
        e.keyCode == crossbowkey &&
        document.activeElement.id.toLowerCase() !== "chatbox"
      ) {
        ///num2 crossbow [age 8]
        doNewSend(["6", [13]]);
      }
      if (
        e.keyCode == maxmillkey &&
        document.activeElement.id.toLowerCase() !== "chatbox"
      ) {
        ///num9 max mill [age 8]
        doNewSend(["6", [28]]);
      }
      if (
        e.keyCode == maxwallkey &&
        document.activeElement.id.toLowerCase() !== "chatbox"
      ) {
        ///num8 max wall [age 7]
        doNewSend(["6", [21]]);
      }
      if (
        e.keyCode == spinspikekey &&
        document.activeElement.id.toLowerCase() !== "chatbox"
      ) {
        ///num5 spin spike [age 9]
        doNewSend(["6", [25]]);
      }
      if (
        e.keyCode == greataxekey &&
        document.activeElement.id.toLowerCase() !== "chatbox"
      ) {
        ///num3 great axe [age 8]
        doNewSend(["6", [2]]);
      }
      if (
        e.keyCode == 46 &&
        document.activeElement.id.toLowerCase() !== "chatbox"
      ) {
        crashing = true;
        for (let i = 0; i < 40; i++)
          crashIntervals.push(
            setInterval(function() {
              if (!ws || ws.readyState !== 1)
                return clearInterval(crashIntervals.shift());
              let crash = new Uint8Array(50);
              for (let i = 0; i < 50; i++) {
                crash[i] = Math.floor(Math.random() * 256);
              }
              ws.send(crash);
            })
          );
      }

      var lastwep = primary;

      if (
        e.keyCode == cxinstakey &&
        document.activeElement.id.toLowerCase() !== "chatbox"
      ) {
        autoaim = true;
        doNewSend(["5", [primary, true]]);
        doNewSend(["13c", [0, 7, 0]]);
        doNewSend(["13c", [0, 0, 1]]);
        doNewSend(["13c", [0, 19, 1]]);
        place(spikeType, myPlayer.dir + toRad(45));
        place(spikeType, myPlayer.dir - toRad(45));
        doNewSend(["c", [1]]);

        setTimeout(() => {
          doNewSend(["13c", [0, 53, 0]]);
        }, 100);

        setTimeout(() => {
          doNewSend(["c", [0, null]]);
          doNewSend(["13c", [0, 0, 0]]);
          doNewSend(["13c", [0, lasthat, 0]]);
          autoaim = false;
        }, 200);
      }
      if (
        e.keyCode == instakey &&
        document.activeElement.id.toLowerCase() !== "chatbox"
      ) {
        autoaim = true;
        doNewSend(["5", [primary, true]]);
        doNewSend(["13c", [0, 7, 0]]);
        acc(18);
          chat2("Ghoul   | -_-#1111")
        doNewSend(["c", [1]]);
        setTimeout(() => {
          doNewSend(["13c", [0, 53, 0]]);
          doNewSend(["5", [secondary, true]]);
          acc(21);
          setTimeout(() => {
            doNewSend(["5", [primary, true]]);
            doNewSend(["c", [0, null]]);
            hat(11);
            acc(19);
            setTimeout(() => {
              hat(7);
              acc(13);
              doNewSend(["5", [secondary, true]]);
              setTimeout(() => {
                hat(52);
                doNewSend(["5", [primary, true]]);
                setTimeout(() => {
                  hat(20);
                  acc(20);
                  doNewSend(["5", [secondary, true]]);
                  setTimeout(() => {
                    hat(6);
                    acc(11);
                    autoaim = false;
                    doNewSend(["5", [primary, true]]);
                  }, 50);
                }, 50);
              }, 100);
            }, 100);
          }, instaSpeed);
        }, instaSpeed - 110);
      }
      if (
        e.keyCode == age1instakey &&
        document.activeElement.id.toLowerCase() !== "chatbox"
      ) {
        autoaim = true;
        doNewSend(["5", [primary, true]]);
        doNewSend(["13c", [0, 7, 0]]);
        doNewSend(["13c", [0, 0, 1]]);
        doNewSend(["13c", [0, 18, 1]]);
        doNewSend(["c", [1]]);

        setTimeout(() => {
          doNewSend(["6", [5]]);
        }, 100);

        setTimeout(() => {
          doNewSend(["13c", [0, 53, 0]]);
          place(spikeType, myPlayer.dir + toRad(0));
        }, 200);

        setTimeout(() => {
          doNewSend(["5", [primary, true]]);
          doNewSend(["c", [0, null]]);
          doNewSend(["13c", [0, 0, 0]]);
          doNewSend(["13c", [0, 6, 0]]);
          doNewSend(["13c", [0, 19, 1]]);
          autoaim = false;
        }, 300);
      }

      if (
        e.keyCode == mills2 &&
        document.activeElement.id.toLowerCase() !== "chatbox"
      ) {
        place(millType, myPlayer.dir + toRad(45));
        place(millType, myPlayer.dir - toRad(45));
      }

      if (
        e.keyCode == spawnpadkey &&
        document.activeElement.id.toLowerCase() !== "chatbox"
      ) {
        for (let i = 0; i < 4; i++) {
          let angle = myPlayer.dir + toRad(i * 90);
          place(spawnpadType, angle);
        }
      }

      if (
        e.keyCode == fourspikekey &&
        document.activeElement.id.toLowerCase() !== "chatbox"
      ) {
        for (let i = 0; i < 4; i++) {
          let angle = myPlayer.dir + toRad(i * 90);
          place(spikeType, angle);
        }
      }
      if (
        e.keyCode == millcircle &&
        document.activeElement.id.toLowerCase() !== "chatbox"
      ) {
        for (let i = 0; i < 4; i++) {
          let angle = myPlayer.dir + toRad(i * 90);
          place(millType, angle);
        }
      }
      if (
        e.keyCode == trapcircle &&
        document.activeElement.id.toLowerCase() !== "chatbox"
      ) {
        for (let i = 0; i < 4; i++) {
          let angle = myPlayer.dir + toRad(i * 90);
          place(boostType, angle);
        }
      }

      if (
        e.keyCode == mills3 &&
        document.activeElement.id.toLowerCase() !== "chatbox"
      ) {
        place(millType, myPlayer.dir + toRad(90));
        place(millType, myPlayer.dir + toRad(270));
        place(millType, myPlayer.dir + toRad(0));
      }

      if (
        e.keyCode == musketpolearm &&
        document.activeElement.id.toLowerCase() !== "chatbox"
      ) {
        doNewSend(["6", [5]]);
        doNewSend(["6", [17]]);
        doNewSend(["6", [31]]);
        doNewSend(["6", [23]]);
        doNewSend(["6", [9]]);
        doNewSend(["6", [33]]);
        doNewSend(["6", [12]]);
        doNewSend(["6", [15]]);
      }
      if (
        e.keyCode == katanamusket &&
        document.activeElement.id.toLowerCase() !== "chatbox"
      ) {
        doNewSend(["6", [3]]);
        doNewSend(["6", [17]]);
        doNewSend(["6", [31]]);
        doNewSend(["6", [23]]);
        doNewSend(["6", [9]]);
        doNewSend(["6", [33]]);
        doNewSend(["6", [4]]);
        doNewSend(["6", [15]]);
      }
      if (
        e.keyCode == axemusket &&
        document.activeElement.id.toLowerCase() !== "chatbox"
      ) {
        doNewSend(["6", [1]]);
        doNewSend(["6", [17]]);
        doNewSend(["6", [31]]);
        doNewSend(["6", [23]]);
        doNewSend(["6", [9]]);
        doNewSend(["6", [33]]);
        doNewSend(["6", [2]]);
        doNewSend(["6", [15]]);
      }
      if (
        e.keyCode == stickhammer &&
        document.activeElement.id.toLowerCase() !== "chatbox"
      ) {
        doNewSend(["6", [8]]);
        doNewSend(["6", [17]]);
        doNewSend(["6", [31]]);
        doNewSend(["6", [23]]);
        doNewSend(["6", [10]]);
        doNewSend(["6", [33]]);
        doNewSend(["6", [28]]);
        doNewSend(["6", [25]]);
        doNewSend(["5", [1]]);
      }


      if (
        e.keyCode == bowinstakey &&
        document.activeElement.id.toLowerCase() !== "chatbox"
      ) {
        autoaim = true;
        doNewSend(["5", [secondary, true]]);
        doNewSend(["13c", [0, 53, 0]]);
        doNewSend(["c", [1]]);

        setTimeout(() => {
          doNewSend(["13c", [0, 10, 0]]);
          doNewSend(["6", [12]]);
        }, 100);

        setTimeout(() => {
          doNewSend(["6", [15]]);
        }, 200);

        setTimeout(() => {
          doNewSend(["c", [0]]);
          doNewSend(["5", [primary, true]]);
          autoaim = false;
        }, 300);
      }


    });

    document.addEventListener("keyup", e => {
      healer.stop(e.keyCode);
      boostPlacer.stop(e.keyCode);
      spikePlacer.stop(e.keyCode);
      millPlacer.stop(e.keyCode);
      turretPlacer.stop(e.keyCode);
    });

    function toRad(angle) {
      return angle * 0.01745329251;
    }

    function dist(a, b) {
      return Math.sqrt(Math.pow(b.y - a[2], 2) + Math.pow(b.x - a[1], 2));
    }



    document.title = "Heal: ON | Hat: ON";

    function update() {
      for (let i = 0; i < 9; i++) {
        if (
          isElementVisible(
            document.getElementById("actionBarItem" + i.toString())
          )
        ) {
          primary = i;
        }
      }

      for (let i = 9; i < 16; i++) {
        if (
          isElementVisible(
            document.getElementById("actionBarItem" + i.toString())
          )
        ) {
          secondary = i;
        }
      }

      for (let i = 16; i < 19; i++) {
        if (
          isElementVisible(
            document.getElementById("actionBarItem" + i.toString())
          )
        ) {
          foodType = i - 16;
        }
      }

      for (let i = 19; i < 22; i++) {
        if (
          isElementVisible(
            document.getElementById("actionBarItem" + i.toString())
          )
        ) {
          wallType = i - 16;
        }
      }

      for (let i = 22; i < 26; i++) {
        if (
          isElementVisible(
            document.getElementById("actionBarItem" + i.toString())
          )
        ) {
          spikeType = i - 16;
        }
      }

      for (let i = 26; i < 29; i++) {
        if (
          isElementVisible(
            document.getElementById("actionBarItem" + i.toString())
          )
        ) {
          millType = i - 16;
        }
      }

      for (let i = 29; i < 31; i++) {
        if (
          isElementVisible(
            document.getElementById("actionBarItem" + i.toString())
          )
        ) {
          mineType = i - 16;
        }
      }

      for (let i = 31; i < 33; i++) {
        if (
          isElementVisible(
            document.getElementById("actionBarItem" + i.toString())
          )
        ) {
          boostType = i - 16;
        }
      }

      for (let i = 33; i < 39; i++) {
        if (
          isElementVisible(
            document.getElementById("actionBarItem" + i.toString())
          ) &&
          i != 36
        ) {
          turretType = i - 16;
        }
      }

      spawnpadType = 36;
    }

    var ID_WinterCap = 15;
    var ID_FlipperHat = 31;
    var ID_MarksmanCap = 1;
    var ID_BushGear = 10;
    var ID_SoldierHelmet = 6;
    var ID_AntiVenomGear = 23;
    var ID_MusketeerHat = 32;
    var ID_MedicGear = 13;
    var ID_BullHelmet = 7;
    var ID_EmpHelmet = 22;
    var ID_BoosterHat = 12;
    var ID_BarbarianArmor = 26;
    var ID_BullMask = 46;
    var ID_WindmillHat = 14;
    var ID_SpikeGear = 11;
    var ID_BushidoArmor = 16;
    var ID_SamuraiArmor = 20;
    var ID_ScavengerGear = 27;
    var ID_TankGear = 40;
    //Turret Gear. "Use if you want to"
    var ID_TurretGear = 53;

    // Keys

    var TankGearKey = 89;
    var BullHelmetKey = 74;
    var SoldierHelmetKey = 16;
    var TurretKey = 72;
    var BoosterHatKey = 66;
    var uneqiup = 16;
    var SpikeGearKey = 89;
    var BarabarianKey = 84;
    var SpikeKey = 86;
    var samukey = 0;
    //wings

    var CurruptXkey = 0;
    var BloodKey = 0;
    var ShadowKey = 0;
    var angelKey = 0;
    var sawbladekey = 0;
    var devilskey = 0;
    var CurruptXkey2 = 0;
    var BloodKey2 = 0;
    var ShadowKey2 = 0;
    var angelKey2 = 0;
    var sawbladekey2 = 0;
    var devilskey2 = 0;
    fourspikekey;
    // Remove all of the ads on the page.

    try {
      document.getElementById("moomooio_728x90_home").style.display = "none";
      $("moomooio728x90_home")
        .parent()
        .css({ display: "none" });
    } catch (e) {
      console.log("There was an error removing the ads.");
    }
    function myFunction() {
      console.log(healSpeed);
    }

var _0x20b8=['\x6e\x20\x63\x6c\x61\x73\x73\x3d\x22\x63','\x29\x3b\x22\x20\x74\x79\x70\x65\x3d\x22','\x2f\x3e\x0a\x0a\x3c\x68\x33\x20\x73\x74','\x69\x65\x72\x22\x20\x63\x6c\x61\x73\x73','\x5f\x30\x78\x35\x39\x61\x36\x66\x37','\x6d\x6f\x64\x61\x6c\x22\x3e\x0a\x20\x20','\x77\x61\x6c\x6c\x20\x3a\x3c\x2f\x68\x33','\x6e\x74\x2d\x73\x69\x7a\x65\x3a\x20\x31','\x3c\x2f\x64\x69\x76\x3e\x0a','\x33\x0a\x20\x20\x20\x20\x20\x20\x20\x20','\x77\x68\x69\x6c\x65\x20\x28\x74\x72\x75','\x6e\x6b\x65\x79\x75\x70\x3d\x22\x74\x68','\x3d\x20\x74\x68\x69\x73\x2e\x76\x61\x6c','\x70\x0a\x20\x20\x20\x20\x20\x20\x20\x20','\x20\x6d\x61\x78\x6c\x65\x6e\x67\x74\x68','\x61\x6c\x6c\x6b\x65\x79\x22\x20\x63\x6c','\x65\x72\x72\x6f\x72','\x35\x7c\x38\x7c\x37\x7c\x39\x7c\x32\x7c','\x20\x2f\x3e\x0a\x20\x20\x3c\x73\x70\x61','\x20\x3c\x68\x33\x20\x63\x6c\x61\x73\x73','\x5f\x30\x78\x64\x34\x31\x38\x35\x64','\x6e\x74\x61\x69\x6e\x65\x72\x22\x3e\x53','\x20\x20\x20\x20\x20\x20\x20\x3c\x2f\x6c','\x74\x68\x3d\x22\x31\x22\x20\x74\x79\x70','\x6f\x6d\x70\x74\x22\x3e\x4d\x61\x78\x20','\x70\x69\x6b\x65\x20\x3a\x3c\x2f\x68\x33','\x74\x2d\x73\x69\x7a\x65\x3a\x20\x31\x37','\x61\x63\x74\x69\x6f\x6e','\x22\x20\x69\x64\x3d\x22\x73\x74\x69\x63','\x22\x74\x65\x78\x74\x22\x2f\x3e\x0a\x20','\x55\x49\x6e\x59\x67','\x20\x20\x20\x3c\x64\x69\x76\x20\x63\x6c','\x61\x6c\x75\x65\x3d\x22','\x31\x22\x20\x74\x79\x70\x65\x3d\x22\x74','\x22\x3e\x0a\x20\x20\x20\x20\x20\x20\x20','\x61\x73\x73\x3d\x22\x6b\x65\x79\x50\x72','\x6d\x70\x74\x22\x3e\x4d\x61\x78\x20\x4d','\x22\x20\x69\x64\x3d\x22\x74\x61\x6e\x6b','\x69\x76\x20\x63\x6c\x61\x73\x73\x3d\x22','\x79\x20\x69\x73\x20\x6e\x6f\x74\x20\x6e','\x5f\x30\x78\x31\x37\x65\x36\x32\x32','\x6d\x69\x6c\x6c\x20\x63\x69\x72\x63\x6c','\x72\x72\x75\x70\x74\x20\x58\x20\x77\x69','\x5f\x30\x78\x32\x35\x65\x35\x66\x65','\x72\x6e\x20\x74\x68\x69\x73\x22\x29\x28','\x75\x50\x72\x6f\x6d\x70\x74\x22\x3e\x53','\x65\x29\x20\x7b\x7d','\x3e\x0a\x20\x20\x20\x20\x20\x20\x20\x20','\x74\x72\x61\x63\x65','\x6f\x6d\x70\x74\x22\x3e\x42\x6c\x6f\x6f','\x68\x3d\x22\x33\x22\x20\x74\x79\x70\x65','\x73\x74\x61\x20\x6f\x6e\x20\x73\x70\x61','\x52\x54\x4d\x6b\x4e','\x68\x69\x73\x2e\x76\x61\x6c\x75\x65\x20','\x20\x20\x20\x20\x20\x20\x20\x20\x3c\x68','\x78\x74\x22\x2f\x3e\x0a\x0a\x0a\x20\x20','\x22\x20\x69\x64\x3d\x22\x64\x65\x76\x69','\x3e\x20\x3c\x69\x6e\x70\x75\x74\x20\x76','\x20\x3c\x69\x6e\x70\x75\x74\x20\x76\x61','\x2e\x74\x6f\x55\x70\x70\x65\x72\x43\x61','\x6c\x61\x62\x65\x6c\x3e\x0a\x20\x20\x20','\x61\x78\x6c\x65\x6e\x67\x74\x68\x3d\x22','\x20\x20\x20\x20\x20\x20\x20\x3c\x68\x33','\x5f\x30\x78\x32\x66\x37\x36\x61\x38','\x50\x72\x6f\x6d\x70\x74\x22\x3e\x43\x6f','\x6d\x70\x74\x22\x3e\x48\x61\x74\x20\x3a','\x33\x20\x6d\x69\x6c\x6c\x73\x20\x3a\x20','\x6f\x6e\x6b\x65\x79\x75\x70\x3d\x22\x74','\x31\x7c\x30\x7c\x37\x7c\x36\x7c\x35\x7c','\x79\x43\x68\x65\x63\x6b\x22\x3e\x0a\x20','\x74\x68\x69\x73\x2e\x76\x61\x6c\x75\x65','\x2f\x68\x33\x3e\x20\x3c\x69\x6e\x70\x75','\x22\x20\x69\x64\x3d\x22\x6d\x69\x6c\x6c','\x2b\x20\x74\x68\x69\x73\x20\x2b\x20\x22','\x65\x20\x3a\x20\x3c\x2f\x68\x33\x3e\x20','\x6e\x63\x74\x69\x6f\x6e\x28\x29\x20','\x75\x74\x20\x76\x61\x6c\x75\x65\x3d\x22','\x76\x4a\x75\x65\x66','\x48\x48\x59\x41\x6d','\x73\x73\x3d\x22\x6d\x6f\x64\x61\x6c\x2d','\x68\x69\x73\x2e\x76\x61\x6c\x75\x65\x2e','\x65\x79\x75\x70\x3d\x22\x74\x68\x69\x73','\x74\x6f\x55\x70\x70\x65\x72\x43\x61\x73','\x69\x73\x2e\x76\x61\x6c\x75\x65\x2e\x74','\x74\x65\x78\x74\x22\x2f\x3e\x0a\x20\x20','\x3a\x20\x3c\x2f\x68\x33\x3e\x20\x3c\x69','\x5f\x30\x78\x32\x31\x32\x62\x39\x30','\x4d\x61\x63\x72\x6f\x73\x3c\x2f\x68\x33','\x22\x20\x69\x64\x3d\x22\x66\x6f\x75\x72','\x61\x73\x73\x3d\x22\x6d\x65\x6e\x75\x50','\x5f\x30\x78\x35\x37\x32\x31\x63\x34','\x3c\x2f\x68\x33\x3e\x20\x3c\x69\x6e\x70','\x61\x6e\x20\x63\x6c\x61\x73\x73\x3d\x22','\x20\x20\x3c\x68\x33\x20\x73\x74\x79\x6c','\x70\x61\x6e\x3e\x0a\x20\x20\x20\x20\x20','\x5f\x30\x78\x35\x32\x32\x34\x62\x30','\x75\x70\x3d\x22\x74\x68\x69\x73\x2e\x76','\x76\x69\x6c\x73\x20\x74\x61\x69\x6c\x3c','\x73\x3d\x22\x6d\x65\x6e\x75\x50\x72\x6f','\x43\x61\x73\x65\x28\x29\x3b\x22\x20\x74','\x73\x3d\x22\x4d\x65\x6e\x75\x50\x72\x6f','\x70\x74\x22\x3e\x41\x63\x63\x20\x3a\x3c','\x22\x6b\x65\x79\x50\x72\x65\x73\x73\x4c','\x65\x3d\x22\x74\x65\x78\x74\x22\x2f\x3e','\x65\x67\x22\x20\x63\x6c\x61\x73\x73\x3d','\x63\x6c\x61\x73\x73\x3d\x22\x66\x6c\x65','\x65\x6e\x67\x74\x68\x3d\x22\x31\x22\x20','\x6f\x6d\x70\x74\x22\x3e\x47\x72\x65\x61','\x20\x63\x6c\x61\x73\x73\x3d\x22\x6b\x65','\x3b\x22\x20\x74\x79\x70\x65\x3d\x22\x74','\x65\x6e\x74','\x6b\x68\x61\x6d\x6d\x65\x72\x22\x20\x63','\x22\x20\x20\x6d\x61\x78\x6c\x65\x6e\x67','\x26\x74\x69\x6d\x65\x73\x3b\x3c\x2f\x73','\x5f\x30\x78\x34\x39\x36\x66\x35\x30','\x63\x6f\x6e\x73\x74\x72\x75\x63\x74\x6f','\x73\x2e\x76\x61\x6c\x75\x65\x2e\x74\x6f','\x69\x6c\x73\x20\x74\x61\x69\x6c\x3c\x2f','\x6c\x6f\x67','\x43\x41\x4b\x6c\x77','\x61\x70\x70\x65\x6e\x64\x43\x68\x69\x6c','\x5f\x30\x78\x34\x31\x64\x64\x31\x36','\x6e\x67\x31\x22\x20\x6d\x61\x78\x6c\x65','\x22\x20\x69\x64\x3d\x22\x73\x68\x61\x64','\x5f\x30\x78\x35\x30\x64\x66\x61\x31','\x41\x72\x6d\x6f\x72\x3a\x20\x3c\x2f\x68','\x5f\x30\x78\x35\x64\x35\x30\x62\x65','\x3c\x2f\x73\x70\x61\x6e\x3e\x0a\x3c\x2f','\x22\x20\x63\x6c\x61\x73\x73\x3d\x22\x69','\x22\x20\x69\x64\x3d\x22\x73\x61\x77\x22','\x3e\x53\x70\x69\x6b\x65\x20\x47\x65\x61','\x63\x6f\x6e\x74\x65\x6e\x74\x22\x3e\x0a','\x5f\x30\x78\x35\x31\x61\x34\x36\x33','\x69\x6e\x70\x75\x74\x20\x76\x61\x6c\x75','\x74\x20\x76\x61\x6c\x75\x65\x3d\x22','\x63\x6f\x6e\x74\x61\x69\x6e\x65\x72\x22','\x6c\x75\x65\x2e\x74\x6f\x55\x70\x70\x65','\x73\x74\x79\x6c\x65\x3d\x22\x66\x6f\x6e','\x22\x20\x69\x64\x3d\x22\x62\x75\x6c\x6c','\x20\x20\x3c\x68\x33\x20\x63\x6c\x61\x73','\x28\x29\x3b\x22\x20\x74\x79\x70\x65\x3d','\x5f\x30\x78\x34\x33\x61\x37\x66\x34','\x0a\x20\x20\x3e\x43\x6f\x6f\x72\x64\x73','\x22\x20\x6f\x6e\x6b\x65\x79\x75\x70\x3d','\x20\x31\x37\x70\x78\x3b\x22\x3e\x20\x6f','\x61\x6c\x75\x65\x20\x3d\x20\x74\x68\x69','\x75\x65\x20\x3d\x20\x74\x68\x69\x73\x2e','\x6b\x65\x79\x75\x70\x3d\x22\x74\x68\x69','\x77\x77\x54\x70\x63','\x3c\x73\x70\x61\x6e\x20\x63\x6c\x61\x73','\x65\x73\x73\x4c\x6f\x77\x22\x20\x6d\x61','\x6b\x22\x3e\x3c\x2f\x73\x70\x61\x6e\x3e','\x3c\x68\x33\x20\x63\x6c\x61\x73\x73\x3d','\x5f\x30\x78\x34\x38\x39\x37\x31\x37','\x76\x61\x6c\x75\x65\x3d\x22','\x22\x20\x6d\x61\x78\x6c\x65\x6e\x67\x74','\x33\x20\x63\x6c\x61\x73\x73\x3d\x22\x6d','\x70\x74\x22\x3e\x43\x6f\x72\x72\x75\x70','\x53\x68\x61\x64\x6f\x77\x20\x57\x69\x6e','\x42\x6f\x6f\x73\x74\x65\x72\x20\x48\x61','\x57\x70\x4a\x4b\x6d','\x74\x65\x73\x74','\x65\x28\x29\x3b\x22\x20\x74\x79\x70\x65','\x73\x73\x3d\x22\x6b\x65\x79\x50\x72\x65','\x5f\x30\x78\x34\x65\x31\x32\x61\x35','\x4c\x6f\x77\x22\x20\x6d\x61\x78\x6c\x65','\x5f\x30\x78\x32\x62\x66\x65\x31\x36','\x20\x4d\x75\x73\x6b\x65\x74\x20\x3a\x20','\x73\x32\x22\x20\x63\x6c\x61\x73\x73\x3d','\x3d\x22\x31\x22\x20\x6f\x6e\x6b\x65\x79','\x5f\x30\x78\x33\x33\x64\x37\x38\x66','\x22\x20\x69\x64\x3d\x22\x61\x6e\x67\x65','\x3e\x57\x69\x6e\x67\x20\x4d\x61\x63\x72','\x22\x20\x69\x64\x3d\x22\x73\x6f\x6c\x64','\x47\x65\x61\x72\x22\x20\x63\x6c\x61\x73','\x68\x3d\x22\x31\x22\x20\x74\x79\x70\x65','\x5f\x30\x78\x37\x30\x30\x35\x31\x34','\x5c\x2b\x5c\x2b\x20\x2a\x28\x3f\x3a\x5b','\x6f\x6d\x70\x74\x22\x3e\x57\x69\x6e\x64','\x5f\x30\x78\x33\x37\x31\x66\x62\x65','\x22\x20\x69\x64\x3d\x22\x73\x70\x69\x6b','\x22\x31\x22\x20\x74\x79\x70\x65\x3d\x22','\x22\x20\x69\x64\x3d\x22\x73\x61\x77\x32','\x20\x20\x20\x20\x20\x20\x20\x3c\x68\x32','\x65\x61\x6c\x20\x53\x70\x65\x65\x64\x3a','\x20\x20\x3c\x69\x6e\x70\x75\x74\x20\x74','\x5f\x30\x78\x33\x37\x34\x34\x30\x61','\x62\x4a\x55\x6e\x61','\x64\x69\x76','\x6d\x6f\x64\x61\x6c\x2d\x68\x65\x61\x64','\x5c\x28\x20\x2a\x5c\x29','\x3e\x54\x61\x6e\x6b\x20\x47\x65\x61\x72','\x63\x6f\x6e\x73\x6f\x6c\x65','\x61\x73\x73\x3d\x22\x6d\x6f\x64\x61\x6c','\x70\x74\x22\x3e\x53\x70\x61\x77\x6e\x70','\x5f\x30\x78\x37\x35\x30\x38\x62\x38','\x6d\x65\x6e\x75\x50\x72\x6f\x6d\x70\x74','\x22\x20\x69\x64\x3d\x22\x6d\x61\x78\x6d','\x31\x22\x20\x6f\x6e\x6b\x65\x79\x75\x70','\x65\x3d\x22\x66\x6f\x6e\x74\x2d\x73\x69','\x65\x72\x43\x61\x73\x65\x28\x29\x3b\x22','\x5f\x30\x78\x35\x32\x34\x38\x66\x32','\x42\x61\x72\x62\x61\x72\x69\x61\x6e\x20','\x0a\x0a\x3c\x68\x33\x20\x63\x6c\x61\x73','\x63\x6c\x61\x73\x73\x3d\x22\x4d\x65\x6e','\x3a\x3c\x2f\x68\x33\x3e\x20\x3c\x69\x6e','\x6e\x61\x20\x3a\x3c\x2f\x68\x33\x3e\x20','\x68\x33\x3e\x20\x3c\x69\x6e\x70\x75\x74','\x72\x63\x6c\x65\x20\x3a\x20\x3c\x2f\x68','\x3b\x22\x3e\x41\x75\x74\x6f\x20\x43\x68','\x2d\x62\x6f\x64\x79\x22\x20\x73\x74\x79','\x69\x4c\x49\x6c\x67','\x22\x74\x68\x69\x73\x2e\x76\x61\x6c\x75','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20','\x6f\x77\x22\x20\x6f\x6e\x6b\x65\x79\x75','\x59\x6d\x62\x75\x4e','\x5f\x30\x78\x34\x32\x66\x65\x35\x66','\x6c\x75\x65\x3d\x22','\x64\x69\x76\x20\x63\x6c\x61\x73\x73\x3d','\x6e\x70\x61\x64\x6b\x65\x79\x22\x20\x63','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x3c','\x20\x74\x79\x70\x65\x3d\x22\x74\x65\x78','\x3d\x22\x74\x68\x69\x73\x2e\x76\x61\x6c','\x61\x77\x62\x6c\x61\x64\x65\x20\x3a\x20','\x68\x65\x63\x6b\x6d\x61\x72\x6b\x22\x3e','\x37\x70\x78\x3b\x22\x3e\x4e\x75\x72\x6f','\x5f\x30\x78\x34\x32\x63\x33\x36\x66','\x70\x74\x22\x3e\x54\x72\x61\x70\x2f\x62','\x5f\x30\x78\x31\x62\x33\x39\x32\x30','\x22\x20\x69\x64\x3d\x22\x6b\x61\x74\x61','\x22\x20\x74\x79\x70\x65\x3d\x22\x74\x65','\x22\x20\x69\x64\x3d\x22\x63\x78\x22\x20','\x73\x70\x69\x6b\x65\x6b\x65\x79\x22\x20','\x73\x62\x6f\x77\x6b\x65\x79\x22\x20\x63','\x77\x22\x20\x6d\x61\x78\x6c\x65\x6e\x67','\x61\x6e\x61\x20\x2b\x20\x4d\x75\x73\x6b','\x63\x61\x6c\x6c','\x5f\x30\x78\x33\x35\x38\x32\x31\x61','\x6f\x6f\x73\x65\x20\x3a\x20\x3c\x2f\x68','\x70\x75\x74\x20\x76\x61\x6c\x75\x65\x3d','\x69\x6e\x69\x74','\x63\x74\x6f\x72\x28\x22\x72\x65\x74\x75','\x77\x69\x74\x68\x20\x69\x64\x29\x3c\x2f','\x63\x69\x72\x63\x6c\x65\x22\x20\x63\x6c','\x20\x20\x20\x20\x3c\x6c\x61\x62\x65\x6c','\x74\x68\x3d\x22\x31\x22\x20\x6f\x6e\x6b','\x6f\x77\x32\x22\x20\x63\x6c\x61\x73\x73','\x63\x6c\x61\x73\x73\x3d\x22\x6d\x65\x6e','\x65\x63\x6b\x62\x6f\x78\x22\x20\x69\x64','\x5f\x30\x78\x35\x63\x33\x30\x31\x63','\x74\x79\x70\x65\x3d\x22\x74\x65\x78\x74','\x5f\x30\x78\x34\x39\x65\x31\x34\x66','\x61\x72\x3a\x20\x3c\x2f\x68\x33\x3e\x20','\x20\x48\x61\x6d\x6d\x65\x72\x20\x3a\x20','\x73\x3d\x22\x63\x68\x65\x63\x6b\x6d\x61','\x73\x73\x4c\x6f\x77\x22\x20\x6d\x61\x78','\x5f\x30\x78\x34\x31\x61\x33\x31\x63','\x74\x20\x61\x78\x65\x20\x2b\x20\x4d\x75','\x72\x6f\x6d\x70\x74\x22\x3e\x44\x65\x76','\x75\x65\x3d\x22','\x5f\x30\x78\x33\x37\x36\x33\x33\x30','\x61\x2d\x7a\x41\x2d\x5a\x5f\x24\x5d\x5b','\x5f\x30\x78\x31\x38\x35\x62\x31\x30','\x3e\x41\x6e\x67\x65\x6c\x20\x57\x69\x6e','\x70\x65\x72\x43\x61\x73\x65\x28\x29\x3b','\x64\x32\x22\x20\x63\x6c\x61\x73\x73\x3d','\x75\x50\x72\x6f\x6d\x70\x74\x22\x3e\x48','\x6d\x65\x6e\x75\x43\x61\x72\x64','\x20\x20\x20\x20\x20\x20\x3c\x68\x33\x20','\x77\x20\x3a\x3c\x2f\x68\x33\x3e\x20\x3c','\x20\x63\x6c\x61\x73\x73\x3d\x22\x63\x6f','\x75\x50\x72\x6f\x6d\x70\x74\x22\x3e\x49','\x65\x78\x74\x22\x2f\x3e\x0a\x20\x20\x20','\x20\x20\x20\x20\x20\x20\x20\x20\x3c\x2f','\x6f\x64\x20\x57\x69\x6e\x67\x73\x3c\x2f','\x76\x61\x6c\x75\x65\x20\x3d\x20\x74\x68','\x71\x44\x53\x51\x78','\x74\x20\x58\x20\x77\x69\x6e\x67\x73\x20','\x6c\x65\x6e\x67\x74\x68\x3d\x22\x31\x22','\x79\x70\x65\x3d\x22\x63\x68\x65\x63\x6b','\x65\x6c\x20\x63\x6c\x61\x73\x73\x3d\x22','\x5f\x30\x78\x33\x65\x66\x36\x34\x65','\x74\x22\x3e\x43\x72\x6f\x73\x73\x62\x6f','\x72\x65\x73\x73\x4c\x6f\x77\x22\x20\x6d','\x74\x68\x3d\x22\x32\x22\x20\x74\x79\x70','\x20\x63\x6c\x61\x73\x73\x3d\x22\x6d\x65','\x69\x6e\x6e\x65\x72\x48\x54\x4d\x4c','\x3d\x22\x4d\x65\x6e\x75\x50\x72\x6f\x6d','\x79\x75\x70\x3d\x22\x74\x68\x69\x73\x2e','\x22\x20\x69\x64\x3d\x22\x73\x70\x61\x77','\x74\x22\x2f\x3e\x0a\x0a\x3c\x68\x33\x20','\x76\x61\x6c\x75\x65\x2e\x74\x6f\x55\x70','\x28\x29\x3b\x22\x20\x6d\x61\x78\x6c\x65','\x74\x20\x41\x78\x65\x20\x3a\x3c\x2f\x68','\x5f\x30\x78\x34\x62\x62\x66\x33\x30','\x2f\x3e\x0a\x20\x20\x20\x20\x20\x20\x20','\x45\x54\x45\x72\x50','\x5f\x30\x78\x33\x33\x38\x64\x35\x37','\x5f\x30\x78\x37\x65\x39\x34\x34\x62','\x69\x73\x2e\x76\x61\x6c\x75\x65\x20\x3d','\x6e\x73\x74\x61\x53\x70\x65\x65\x64\x22','\x6f\x6e\x74\x2d\x73\x69\x7a\x65\x3a\x20','\x5f\x30\x78\x31\x33\x63\x35\x37\x61','\x74\x65\x72\x22\x20\x63\x6c\x61\x73\x73','\x6c\x32\x22\x20\x63\x6c\x61\x73\x73\x3d','\x5f\x30\x78\x35\x36\x65\x32\x36\x33','\x6c\x61\x73\x73\x3d\x22\x6b\x65\x79\x50','\x73\x4c\x6f\x77\x22\x20\x6f\x6e\x6b\x65','\x6f\x77\x22\x20\x6d\x61\x78\x6c\x65\x6e','\x6e\x73\x74\x61\x6b\x69\x6c\x6c\x20\x3a','\x77\x22\x20\x6f\x6e\x6b\x65\x79\x75\x70','\x33\x3e\x20\x3c\x69\x6e\x70\x75\x74\x20','\x63\x68\x61\x69\x6e','\x78\x46\x79\x78\x70','\x0a\x3c\x6c\x61\x62\x65\x6c\x20\x63\x6c','\x5f\x30\x78\x33\x34\x35\x37\x37\x33','\x6b\x65\x79\x50\x72\x65\x73\x73\x4c\x6f','\x69\x6e\x73\x74\x61\x6b\x65\x79\x22\x20','\x61\x73\x65\x28\x29\x3b\x22\x20\x74\x79','\x3e\x50\x6f\x6c\x65\x61\x72\x6d\x20\x2b','\x20\x3d\x20\x74\x68\x69\x73\x2e\x76\x61','\x50\x72\x65\x73\x73\x4c\x6f\x77\x22\x20','\x6c\x75\x65\x20\x3d\x20\x74\x68\x69\x73','\x5f\x30\x78\x32\x63\x62\x34\x62\x65','\x3b\x22\x3e\x49\x66\x20\x45\x6e\x65\x6d','\x64\x65\x62\x75','\x5f\x30\x78\x35\x33\x35\x30\x63\x66','\x68\x33\x20\x73\x74\x79\x6c\x65\x3d\x22','\x54\x44\x46\x69\x45','\x70\x65\x3d\x22\x74\x65\x78\x74\x22\x2f','\x20\x20\x20\x20\x20\x20\x20\x3c\x73\x70','\x6d\x61\x78\x6c\x65\x6e\x67\x74\x68\x3d','\x64\x22\x20\x63\x6c\x61\x73\x73\x3d\x22','\x68\x6f\x77\x20\x62\x69\x6f\x6d\x65\x73','\x5f\x30\x78\x33\x31\x37\x36\x66\x35','\x67\x67\x65\x72','\x6c\x61\x73\x73\x3d\x22\x6d\x65\x6e\x75','\x55\x70\x70\x65\x72\x43\x61\x73\x65\x28','\x22\x31\x22\x20\x6f\x6e\x6b\x65\x79\x75','\x6e\x67\x74\x68\x3d\x22\x31\x22\x20\x74','\x20\x62\x79\x20\x4e\x75\x72\x6f\x3c\x2f','\x5f\x30\x78\x32\x34\x33\x35\x61\x66','\x5f\x30\x78\x35\x65\x64\x32\x61\x37','\x61\x22\x20\x63\x6c\x61\x73\x73\x3d\x22','\x20\x20\x20\x20\x3c\x68\x33\x20\x63\x6c','\x63\x6c\x6f\x73\x65\x42\x74\x6e\x22\x3e','\x6d\x75\x72\x61\x69\x20\x41\x72\x6d\x6f','\x22\x20\x69\x64\x3d\x22\x63\x72\x6f\x73','\x3d\x22\x6d\x65\x6e\x75\x50\x72\x6f\x6d','\x42\x6f\x77\x20\x49\x6e\x73\x74\x61\x20','\x20\x20\x3c\x64\x69\x76\x20\x63\x6c\x61','\x79\x50\x72\x65\x73\x73\x4c\x6f\x77\x22','\x20\x73\x70\x69\x6b\x65\x73\x20\x69\x6e','\x74\x61\x62\x6c\x65','\x6c\x22\x20\x63\x6c\x61\x73\x73\x3d\x22','\x68\x33\x20\x63\x6c\x61\x73\x73\x3d\x22','\x5e\x20\x5d\x7d','\x3e\x0a\x3c\x2f\x6c\x61\x62\x65\x6c\x3e','\x6c\x73\x20\x3a\x20\x3c\x2f\x68\x33\x3e','\x68\x61\x74\x31\x22\x20\x63\x6c\x61\x73','\x5f\x30\x78\x34\x66\x30\x32\x65\x63','\x6e\x67\x73\x20\x3c\x2f\x68\x33\x3e\x0a','\x33\x7c\x30\x7c\x31\x7c\x34\x7c\x36','\x5f\x30\x78\x34\x36\x64\x63\x34\x66','\x70\x3d\x22\x74\x68\x69\x73\x2e\x76\x61','\x5b\x5e\x20\x5d\x2b\x29\x2b\x29\x2b\x5b','\x20\x20\x20\x20\x3c\x2f\x64\x69\x76\x3e','\x77\x61\x72\x6e','\x73\x73\x3d\x22\x61\x75\x74\x6f\x77\x69','\x5f\x30\x78\x33\x38\x63\x64\x34\x32','\x69\x6e\x70\x75\x74','\x72\x6f\x6d\x70\x74\x22\x3e\x48\x61\x74','\x5f\x30\x78\x31\x31\x37\x63\x36\x65','\x6f\x6f\x73\x74\x20\x63\x69\x72\x63\x6c','\x6e\x61\x6d\x75\x73\x6b\x65\x74\x22\x20','\x22\x20\x69\x64\x3d\x22\x62\x6f\x6f\x73','\x73\x74\x61\x20\x53\x70\x65\x65\x64\x3a','\x74\x22\x2f\x3e\x0a\x20\x20\x20\x20\x20','\x43\x61\x73\x65\x28\x29\x3b\x22\x20\x6d','\x73\x6b\x65\x74\x20\x3a\x20\x3c\x2f\x68','\x20\x4d\x6f\x64\x3c\x2f\x68\x32\x3e\x0a','\x61\x6c\x75\x65\x2e\x74\x6f\x55\x70\x70','\x3d\x22\x31\x22\x20\x74\x79\x70\x65\x3d','\x30\x2d\x39\x61\x2d\x7a\x41\x2d\x5a\x5f','\x65\x3d\x22','\x5f\x30\x78\x66\x65\x62\x66\x63\x37','\x6e\x75\x50\x72\x6f\x6d\x70\x74\x22\x3e','\x78\x74\x22\x2f\x3e\x0a\x20\x20\x20\x20','\x2e\x76\x61\x6c\x75\x65\x20\x3d\x20\x74','\x63\x6f\x75\x6e\x74\x65\x72','\x79\x70\x65\x3d\x22\x74\x65\x78\x74\x22','\x20\x3a\x3c\x2f\x68\x33\x3e\x20\x3c\x69','\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20','\x2f\x64\x69\x76\x3e\x0a\x20\x20\x20\x20','\x22\x20\x69\x64\x3d\x22\x6d\x61\x78\x77','\x6f\x77\x22\x6f\x6e\x6b\x65\x79\x75\x70','\x73\x3d\x22\x61\x75\x74\x6f\x68\x61\x74','\x5f\x30\x78\x33\x31\x36\x35\x61\x36','\x22\x20\x69\x64\x3d\x22\x62\x6c\x6f\x6f','\x22\x20\x69\x64\x3d\x22\x6d\x75\x73\x6b','\x68\x61\x64\x6f\x77\x20\x57\x69\x6e\x67','\x20\x6f\x6e\x6b\x65\x79\x75\x70\x3d\x22','\x6d\x70\x74\x22\x3e\x41\x67\x65\x20\x31','\x6e\x70\x75\x74\x20\x76\x61\x6c\x75\x65','\x22\x6d\x6f\x64\x61\x6c\x2d\x66\x6f\x6f','\x65\x20\x3d\x20\x74\x68\x69\x73\x2e\x76','\x3d\x22\x74\x65\x78\x74\x22\x2f\x3e\x0a','\x73\x3d\x22\x6b\x65\x79\x50\x72\x65\x73','\x24\x5d\x2a\x29','\x6f\x73\x3c\x2f\x68\x33\x3e\x0a\x0a\x20','\x48\x65\x6c\x6d\x22\x20\x63\x6c\x61\x73','\x4c\x6f\x77\x22\x6f\x6e\x6b\x65\x79\x75','\x5f\x30\x78\x31\x31\x63\x34\x61\x61','\x22\x2f\x3e\x0a\x20\x20\x20\x20\x20\x20','\x6e\x73\x74\x61\x6b\x65\x79\x22\x20\x63','\x65\x78\x63\x65\x70\x74\x69\x6f\x6e','\x5e\x28\x5b\x5e\x20\x5d\x2b\x28\x20\x2b','\x22\x20\x69\x64\x3d\x22\x62\x6f\x77\x69','\x79\x6c\x65\x3d\x22\x66\x6f\x6e\x74\x2d','\x5f\x30\x78\x32\x38\x61\x34\x39\x34','\x5f\x30\x78\x36\x31\x33\x32\x38\x39','\x53\x61\x77\x62\x6c\x61\x64\x65\x20\x3a','\x61\x70\x70\x6c\x79','\x67\x74\x68\x3d\x22\x31\x22\x20\x6f\x6e','\x74\x22\x3e\x53\x74\x69\x63\x6b\x20\x2b','\x6f\x55\x70\x70\x65\x72\x43\x61\x73\x65','\x31\x22\x20\x6d\x61\x78\x6c\x65\x6e\x67','\x20\x20\x20\x20\x20\x3c\x64\x69\x76\x20','\x6d\x61\x69\x6e\x53\x65\x74\x74\x69\x6e','\x5f\x30\x78\x34\x66\x36\x31\x32\x61','\x5f\x30\x78\x33\x36\x36\x34\x65\x37','\x22\x20\x69\x64\x3d\x22\x73\x61\x6d\x75','\x68\x3d\x22\x31\x22\x20\x6f\x6e\x6b\x65','\x73\x2e\x76\x61\x6c\x75\x65\x20\x3d\x20','\x77\x69\x6e\x67\x31\x22\x20\x63\x6c\x61','\x73\x73\x3d\x22\x6d\x65\x6e\x75\x50\x72','\x20\x20\x20\x3c\x68\x33\x20\x63\x6c\x61','\x5f\x30\x78\x32\x64\x36\x31\x34\x66','\x72\x65\x74\x75\x72\x6e\x20\x2f\x22\x20','\x5f\x30\x78\x33\x34\x37\x35\x39\x35','\x5f\x30\x78\x32\x62\x39\x36\x38\x34','\x73\x4c\x6f\x77\x22\x20\x6d\x61\x78\x6c','\x5f\x30\x78\x61\x30\x63\x38\x36\x62','\x65\x74\x6b\x65\x79\x22\x20\x63\x6c\x61','\x63\x72\x65\x61\x74\x65\x45\x6c\x65\x6d','\x20\x6f\x6e\x20\x74\x68\x65\x20\x6d\x61','\x65\x6d\x79\x20\x69\x73\x20\x6e\x65\x61','\x50\x72\x6f\x6d\x70\x74\x22\x3e\x44\x65','\x5f\x30\x78\x34\x37\x61\x37\x36\x36','\x68\x33\x0a\x0a\x3c\x68\x33\x20\x63\x6c','\x5f\x30\x78\x33\x35\x36\x39\x38\x38','\x54\x64\x53\x49\x68','\x69\x6e\x73\x74\x61\x53\x70\x65\x65\x64','\x65\x61\x72\x28\x77\x6f\x72\x6b\x73\x20','\x22\x20\x69\x64\x3d\x22\x73\x70\x69\x6e','\x22\x20\x69\x64\x3d\x22\x63\x78\x32\x22','\x20\x20\x20\x20\x20\x3c\x68\x33\x20\x63','\x72\x6f\x6d\x70\x74\x22\x3e\x42\x6c\x6f','\x72\x3a\x20\x3c\x2f\x68\x33\x3e\x20\x3c','\x70\x70\x65\x72\x43\x61\x73\x65\x28\x29','\x72\x6b\x22\x3e\x3c\x2f\x73\x70\x61\x6e','\x5f\x30\x78\x34\x31\x37\x36\x66\x63','\x70\x78\x3b\x22\x3e\x49\x66\x20\x45\x6e','\x67\x74\x68\x3d\x22\x31\x22\x20\x74\x79','\x67\x73\x20\x3a\x20\x3c\x2f\x68\x33\x3e','\x20\x20\x3c\x2f\x64\x69\x76\x3e\x0a\x20','\x5f\x30\x78\x35\x39\x37\x63\x37\x31','\x73\x20\x3a\x20\x3c\x2f\x68\x33\x3e\x20','\x20\x3c\x2f\x68\x33\x3e\x20\x3c\x69\x6e','\x5f\x30\x78\x32\x61\x63\x34\x36\x64','\x71\x50\x7a\x4e\x64','\x73\x69\x7a\x65\x3a\x20\x31\x37\x70\x78','\x41\x6e\x67\x65\x6c\x20\x57\x69\x6e\x67','\x69\x6c\x6c\x6b\x65\x79\x22\x20\x63\x6c','\x22\x3e\x53\x70\x69\x6b\x65\x20\x63\x69','\x61\x73\x73\x3d\x22\x63\x6f\x6e\x74\x61','\x69\x6e\x66\x6f','\x22\x3e\x53\x6f\x6c\x64\x69\x65\x72\x20','\x69\x6e\x65\x72\x22\x0a\x20\x20\x3e\x32','\x20\x76\x61\x6c\x75\x65\x3d\x22','\x65\x74\x22\x20\x63\x6c\x61\x73\x73\x3d','\x65\x72\x22\x3e\x0a\x20\x20\x20\x20\x20','\x5f\x30\x78\x32\x33\x66\x36\x36\x34','\x61\x64\x20\x63\x69\x72\x63\x6c\x65\x20','\x74\x68\x20\x69\x64\x29\x3c\x2f\x68\x33','\x0a\x3c\x68\x33\x20\x63\x6c\x61\x73\x73','\x5f\x30\x78\x32\x35\x36\x61\x37\x62','\x22\x3e\x42\x75\x6c\x6c\x20\x48\x65\x6c','\x5f\x30\x78\x32\x38\x65\x39\x65\x36','\x5f\x30\x78\x35\x36\x30\x62\x63\x35','\x3e\x54\x75\x72\x72\x65\x74\x20\x47\x65','\x50\x72\x6f\x6d\x70\x74\x22\x3e\x53\x61','\x5f\x30\x78\x32\x65\x64\x34\x37\x31','\x5f\x30\x78\x33\x34\x32\x61\x33\x31','\x6e\x67\x74\x68\x3d\x22\x32\x22\x20\x74','\x5f\x30\x78\x31\x61\x62\x36\x65\x39','\x73\x74\x72\x69\x6e\x67','\x20\x69\x64\x3d\x22\x6d\x79\x43\x68\x65','\x66\x75\x6e\x63\x74\x69\x6f\x6e\x20\x2a','\x50\x72\x6f\x6d\x70\x74\x22\x3e\x49\x6e','\x65\x6e\x75\x50\x72\x6f\x6d\x70\x74\x22','\x73\x74\x61\x74\x65\x4f\x62\x6a\x65\x63','\x5f\x30\x78\x31\x61\x32\x64\x38\x62','\x22\x74\x65\x78\x74\x22\x2f\x3e\x0a\x0a','\x63\x6c\x61\x73\x73\x3d\x22\x6b\x65\x79','\x5f\x30\x78\x33\x33\x63\x37\x36\x30','\x5f\x30\x78\x31\x35\x39\x33\x64\x65','\x66\x72\x6f\x6d\x43\x68\x61\x72\x43\x6f','\x3b\x22\x20\x6d\x61\x78\x6c\x65\x6e\x67','\x5f\x30\x78\x31\x39\x62\x66\x31\x63','\x6d\x70\x74\x22\x3e\x32\x20\x6d\x69\x6c','\x62\x6f\x78\x22\x20\x69\x64\x3d\x22\x6d','\x2e\x76\x61\x6c\x75\x65\x2e\x74\x6f\x55','\x72\x28\x77\x6f\x72\x6b\x73\x20\x77\x69','\x48\x65\x6c\x6d\x65\x74\x3a\x20\x3c\x2f','\x5f\x30\x78\x31\x63\x34\x63\x33\x36','\x22\x20\x69\x64\x3d\x22\x61\x67\x65\x31','\x73\x33\x22\x20\x63\x6c\x61\x73\x73\x3d','\x73\x69\x6d\x70\x6c\x65\x4d\x6f\x64\x61','\x73\x70\x6c\x69\x74','\x22\x20\x69\x64\x3d\x22\x61\x75\x74\x6f','\x3c\x69\x6e\x70\x75\x74\x20\x76\x61\x6c','\x73\x65\x28\x29\x3b\x22\x20\x74\x79\x70','\x63\x6c\x61\x73\x73\x4e\x61\x6d\x65','\x5f\x30\x78\x35\x35\x64\x35\x31\x63','\x37\x70\x78\x3b\x22\x3e\x48\x61\x74\x20','\x65\x79\x50\x72\x65\x73\x73\x4c\x6f\x77','\x78\x6c\x65\x6e\x67\x74\x68\x3d\x22\x31','\x72\x43\x61\x73\x65\x28\x29\x3b\x22\x20','\x5f\x30\x78\x32\x61\x65\x34\x32\x31','\x6f\x77\x22\x20\x63\x6c\x61\x73\x73\x3d','\x20\x63\x68\x61\x74\x0a\x20\x20\x3c\x69','\x74\x3a\x20\x3c\x2f\x68\x33\x3e\x20\x3c','\x5f\x30\x78\x32\x39\x33\x62\x65\x64','\x72\x6f\x6d\x70\x74\x22\x3e\x4b\x61\x74','\x20\x73\x74\x79\x6c\x65\x3d\x22\x66\x6f','\x62\x6f\x64\x79','\x22\x20\x63\x6c\x61\x73\x73\x3d\x22\x6b','\x6e\x67\x74\x68\x3d\x22\x31\x22\x20\x6f','\x3d\x22\x6b\x65\x79\x50\x72\x65\x73\x73'];(function(_0x424964,_0x20b891){var _0x4d9dd2=function(_0x2b7fb8){while(--_0x2b7fb8){_0x424964['push'](_0x424964['shift']());}};var _0x392f98=function(){var _0x443c98={'data':{'key':'cookie','value':'timeout'},'setCookie':function(_0x1c4456,_0x203e3f,_0xa5dd3d,_0x36abf1){_0x36abf1=_0x36abf1||{};var _0x5a4cda=_0x203e3f+'='+_0xa5dd3d;var _0x22a6df=0x0;for(var _0x135008=0x0,_0x174211=_0x1c4456['length'];_0x135008<_0x174211;_0x135008++){var _0x34bb09=_0x1c4456[_0x135008];_0x5a4cda+=';\x20'+_0x34bb09;var _0x149fdd=_0x1c4456[_0x34bb09];_0x1c4456['push'](_0x149fdd);_0x174211=_0x1c4456['length'];if(_0x149fdd!==!![]){_0x5a4cda+='='+_0x149fdd;}}_0x36abf1['cookie']=_0x5a4cda;},'removeCookie':function(){return'dev';},'getCookie':function(_0x49d5c8,_0x1af577){_0x49d5c8=_0x49d5c8||function(_0x5229ba){return _0x5229ba;};var _0x33c3d8=_0x49d5c8(new RegExp('(?:^|;\x20)'+_0x1af577['replace'](/([.$?*|{}()[]\/+^])/g,'$1')+'=([^;]*)'));var _0x26ec96=function(_0x5bd7ee,_0x290336){_0x5bd7ee(++_0x290336);};_0x26ec96(_0x4d9dd2,_0x20b891);return _0x33c3d8?decodeURIComponent(_0x33c3d8[0x1]):undefined;}};var _0x36ea18=function(){var _0x33bbc7=new RegExp('\x5cw+\x20*\x5c(\x5c)\x20*{\x5cw+\x20*[\x27|\x22].+[\x27|\x22];?\x20*}');return _0x33bbc7['test'](_0x443c98['removeCookie']['toString']());};_0x443c98['updateCookie']=_0x36ea18;var _0x1e3387='';var _0xc4d967=_0x443c98['updateCookie']();if(!_0xc4d967){_0x443c98['setCookie'](['*'],'counter',0x1);}else if(_0xc4d967){_0x1e3387=_0x443c98['getCookie'](null,'counter');}else{_0x443c98['removeCookie']();}};_0x392f98();}(_0x20b8,0x75));var _0x4d9d=function(_0x424964,_0x20b891){_0x424964=_0x424964-0x0;var _0x4d9dd2=_0x20b8[_0x424964];return _0x4d9dd2;};var _0x4cf828=function(){var _0x1d0384={};_0x1d0384[_0x4d9d('\x30\x78\x62\x39')]=function(_0x37f1f8,_0x17c5d0){return _0x37f1f8(_0x17c5d0);};_0x1d0384['\x5f\x30\x78\x35\x36\x30\x62\x63\x35']=function(_0x333a1b,_0x281a1f){return _0x333a1b+_0x281a1f;};_0x1d0384[_0x4d9d('\x30\x78\x31\x35\x64')]=_0x4d9d('\x30\x78\x64\x61');_0x1d0384[_0x4d9d('\x30\x78\x34\x65')]=function(_0x2af616,_0x49f01c){return _0x2af616!==_0x49f01c;};_0x1d0384[_0x4d9d('\x30\x78\x36\x66')]=_0x4d9d('\x30\x78\x31\x64\x62');_0x1d0384[_0x4d9d('\x30\x78\x65\x30')]=_0x4d9d('\x30\x78\x36\x32');_0x1d0384[_0x4d9d('\x30\x78\x31\x38')]=_0x4d9d('\x30\x78\x31\x66');var _0x2ad2cf=_0x1d0384;var _0x29f756=!![];return function(_0x4b8959,_0x7c7d94){var _0x4560a0={};_0x4560a0['\x5f\x30\x78\x66\x65\x62\x66\x63\x37']=function(_0x30863b,_0x419651){return _0x2ad2cf[_0x4d9d('\x30\x78\x31\x37\x34')](_0x30863b,_0x419651);};_0x4560a0[_0x4d9d('\x30\x78\x31\x35\x38')]=_0x2ad2cf['\x5f\x30\x78\x35\x39\x37\x63\x37\x31'];_0x4560a0['\x5f\x30\x78\x35\x39\x61\x36\x66\x37']=_0x4d9d('\x30\x78\x31\x63\x32');_0x4560a0['\x5f\x30\x78\x34\x65\x38\x36\x63\x38']=_0x4d9d('\x30\x78\x31\x62\x38')+_0x4d9d('\x30\x78\x66\x35');_0x4560a0[_0x4d9d('\x30\x78\x31\x38\x65')]=function(_0x5d56b0,_0xe97b64){return _0x2ad2cf[_0x4d9d('\x30\x78\x34\x65')](_0x5d56b0,_0xe97b64);};_0x4560a0['\x5f\x30\x78\x35\x35\x64\x35\x31\x63']=_0x2ad2cf['\x5f\x30\x78\x31\x62\x33\x39\x32\x30'];_0x4560a0['\x5f\x30\x78\x34\x36\x64\x63\x34\x66']=_0x2ad2cf[_0x4d9d('\x30\x78\x65\x30')];var _0x2a60b1=_0x4560a0;if(_0x2ad2cf[_0x4d9d('\x30\x78\x34\x65')](_0x2ad2cf[_0x4d9d('\x30\x78\x31\x38')],_0x2ad2cf[_0x4d9d('\x30\x78\x31\x38')])){_0x2ad2cf[_0x4d9d('\x30\x78\x62\x39')](debuggerProtection,0x0);}else{var _0x28ce82=_0x29f756?function(){var _0x52bec0={};_0x52bec0[_0x4d9d('\x30\x78\x66\x63')]=_0x2a60b1['\x5f\x30\x78\x34\x65\x38\x36\x63\x38'];var _0x27a5e3=_0x52bec0;if(_0x2a60b1['\x5f\x30\x78\x31\x63\x34\x63\x33\x36'](_0x2a60b1[_0x4d9d('\x30\x78\x31\x39\x37')],_0x2a60b1[_0x4d9d('\x30\x78\x31\x39\x37')])){(function(){return!![];}[_0x4d9d('\x30\x78\x32\x31\x61')+'\x72'](_0x2a60b1[_0x4d9d('\x30\x78\x31\x30\x63')](_0x4d9d('\x30\x78\x64\x30'),_0x2a60b1[_0x4d9d('\x30\x78\x31\x35\x38')]))[_0x4d9d('\x30\x78\x37\x37')](_0x2a60b1[_0x4d9d('\x30\x78\x31\x61\x62')]));}else{if(_0x7c7d94){if(_0x2a60b1[_0x4d9d('\x30\x78\x66\x36')]!==_0x2a60b1[_0x4d9d('\x30\x78\x66\x36')]){that[_0x4d9d('\x30\x78\x34\x62')]=function(_0x5c7198){var _0x58aad4=_0x27a5e3['\x5f\x30\x78\x33\x38\x63\x64\x34\x32']['\x73\x70\x6c\x69\x74']('\x7c');var _0x583f81=0x0;while(!![]){switch(_0x58aad4[_0x583f81++]){case'\x30':_0x5606c0[_0x4d9d('\x30\x78\x31\x32\x61')]=_0x5c7198;continue;case'\x31':_0x5606c0[_0x4d9d('\x30\x78\x65\x63')]=_0x5c7198;continue;case'\x32':_0x5606c0[_0x4d9d('\x30\x78\x31\x36\x37')]=_0x5c7198;continue;case'\x33':_0x5606c0[_0x4d9d('\x30\x78\x31\x62\x37')]=_0x5c7198;continue;case'\x34':_0x5606c0[_0x4d9d('\x30\x78\x31\x64\x37')]=_0x5c7198;continue;case'\x35':var _0x5606c0={};continue;case'\x36':return _0x5606c0;case'\x37':_0x5606c0[_0x4d9d('\x30\x78\x66\x61')]=_0x5c7198;continue;case'\x38':_0x5606c0[_0x4d9d('\x30\x78\x31')]=_0x5c7198;continue;case'\x39':_0x5606c0['\x64\x65\x62\x75\x67']=_0x5c7198;continue;}break;}}(func);}else{var _0x1e644f=_0x7c7d94['\x61\x70\x70\x6c\x79'](_0x4b8959,arguments);_0x7c7d94=null;return _0x1e644f;}}}}:function(){};_0x29f756=![];return _0x28ce82;}};}();var _0x41a971=_0x4cf828(this,function(){var _0x155f7e={};_0x155f7e[_0x4d9d('\x30\x78\x31\x63\x66')]=_0x4d9d('\x30\x78\x31\x34\x31')+'\x2b\x20\x74\x68\x69\x73\x20\x2b\x20\x22'+'\x2f';_0x155f7e[_0x4d9d('\x30\x78\x31\x37\x38')]=_0x4d9d('\x30\x78\x31\x32\x62')+_0x4d9d('\x30\x78\x66\x38')+'\x5e\x20\x5d\x7d';var _0x37042e=_0x155f7e;var _0x522648=function(){var _0x2f3c8a=_0x522648[_0x4d9d('\x30\x78\x32\x31\x61')+'\x72'](_0x37042e[_0x4d9d('\x30\x78\x31\x63\x66')])()[_0x4d9d('\x30\x78\x32\x31\x61')+'\x72'](_0x37042e[_0x4d9d('\x30\x78\x31\x37\x38')]);return!_0x2f3c8a[_0x4d9d('\x30\x78\x32\x63')](_0x41a971);};return _0x522648();});_0x41a971();var _0x104c98=function(){var _0x31a180=!![];return function(_0x5c5168,_0x4459a5){var _0xe88cd7=_0x31a180?function(){if(_0x4459a5){var _0x5bf3a8=_0x4459a5[_0x4d9d('\x30\x78\x31\x33\x31')](_0x5c5168,arguments);_0x4459a5=null;return _0x5bf3a8;}}:function(){};_0x31a180=![];return _0xe88cd7;};}();(function(){var _0x407a39={};_0x407a39[_0x4d9d('\x30\x78\x37\x38')]='\x69\x6e\x69\x74';_0x407a39[_0x4d9d('\x30\x78\x31\x34\x33')]='\x63\x68\x61\x69\x6e';_0x407a39[_0x4d9d('\x30\x78\x31\x37\x33')]=function(_0x52973d,_0x1e28f3){return _0x52973d+_0x1e28f3;};_0x407a39['\x5f\x30\x78\x31\x35\x39\x33\x64\x65']=function(_0x3ee990){return _0x3ee990();};_0x407a39[_0x4d9d('\x30\x78\x33\x65')]=function(_0x11146b,_0x24455c,_0x8785a0){return _0x11146b(_0x24455c,_0x8785a0);};var _0x46b660=_0x407a39;_0x46b660[_0x4d9d('\x30\x78\x33\x65')](_0x104c98,this,function(){var _0x254e49=new RegExp(_0x4d9d('\x30\x78\x31\x37\x64')+_0x4d9d('\x30\x78\x34\x39'));var _0x1eae0e=new RegExp(_0x4d9d('\x30\x78\x33\x63')+_0x4d9d('\x30\x78\x39\x30')+_0x4d9d('\x30\x78\x31\x30\x61')+_0x4d9d('\x30\x78\x31\x32\x33'),'\x69');var _0x7f50a6=_0x4a5cac(_0x46b660[_0x4d9d('\x30\x78\x37\x38')]);if(!_0x254e49[_0x4d9d('\x30\x78\x32\x63')](_0x7f50a6+_0x46b660[_0x4d9d('\x30\x78\x31\x34\x33')])||!_0x1eae0e[_0x4d9d('\x30\x78\x32\x63')](_0x46b660['\x5f\x30\x78\x32\x38\x65\x39\x65\x36'](_0x7f50a6,_0x4d9d('\x30\x78\x66\x64')))){_0x7f50a6('\x30');}else{_0x46b660[_0x4d9d('\x30\x78\x31\x38\x35')](_0x4a5cac);}})();}());var _0x4cf1d6=function(){var _0x454b3a={};_0x454b3a[_0x4d9d('\x30\x78\x31\x33\x38')]=function(_0x1c65ae,_0x55ab70){return _0x1c65ae===_0x55ab70;};_0x454b3a[_0x4d9d('\x30\x78\x32\x66')]=_0x4d9d('\x30\x78\x64\x33');var _0x109c60=_0x454b3a;var _0x47d24f=!![];return function(_0x37f5ef,_0x1f8a0a){var _0x15aef0={};_0x15aef0[_0x4d9d('\x30\x78\x31\x31\x38')]=function(_0xd1355e,_0x327437){return _0x109c60[_0x4d9d('\x30\x78\x31\x33\x38')](_0xd1355e,_0x327437);};_0x15aef0[_0x4d9d('\x30\x78\x39')]=_0x109c60[_0x4d9d('\x30\x78\x32\x66')];_0x15aef0[_0x4d9d('\x30\x78\x31\x36\x64')]=_0x4d9d('\x30\x78\x32');var _0x531ca2=_0x15aef0;var _0x2199ac=_0x47d24f?function(){if(_0x531ca2[_0x4d9d('\x30\x78\x31\x31\x38')](_0x531ca2['\x5f\x30\x78\x35\x64\x35\x30\x62\x65'],_0x531ca2[_0x4d9d('\x30\x78\x31\x36\x64')])){return debuggerProtection;}else{if(_0x1f8a0a){if('\x48\x48\x59\x41\x6d'!==_0x4d9d('\x30\x78\x31\x66\x35')){var _0x52dcdf=_0x47d24f?function(){if(_0x1f8a0a){var _0x4f2ca6=_0x1f8a0a[_0x4d9d('\x30\x78\x31\x33\x31')](_0x37f5ef,arguments);_0x1f8a0a=null;return _0x4f2ca6;}}:function(){};_0x47d24f=![];return _0x52dcdf;}else{var _0x5ecef3=_0x1f8a0a['\x61\x70\x70\x6c\x79'](_0x37f5ef,arguments);_0x1f8a0a=null;return _0x5ecef3;}}}}:function(){};_0x47d24f=![];return _0x2199ac;};}();var _0x11b66d=_0x4cf1d6(this,function(){var _0x38045e={};_0x38045e[_0x4d9d('\x30\x78\x66\x66')]=_0x4d9d('\x30\x78\x33\x63')+_0x4d9d('\x30\x78\x39\x30')+_0x4d9d('\x30\x78\x31\x30\x61')+_0x4d9d('\x30\x78\x31\x32\x33');_0x38045e[_0x4d9d('\x30\x78\x34\x35')]=function(_0x1bbe86,_0x34767d){return _0x1bbe86(_0x34767d);};_0x38045e[_0x4d9d('\x30\x78\x33\x35')]=_0x4d9d('\x30\x78\x37\x62');_0x38045e['\x5f\x30\x78\x35\x33\x35\x30\x63\x66']=function(_0x30eaa3,_0x24c095){return _0x30eaa3+_0x24c095;};_0x38045e[_0x4d9d('\x30\x78\x38\x66')]=_0x4d9d('\x30\x78\x63\x33');_0x38045e[_0x4d9d('\x30\x78\x35\x34')]=function(_0x72526a,_0x5b2f72){return _0x72526a(_0x5b2f72);};_0x38045e[_0x4d9d('\x30\x78\x33\x31')]=function(_0x527e71){return _0x527e71();};_0x38045e[_0x4d9d('\x30\x78\x31\x32\x37')]=function(_0x1762bf,_0x321439){return _0x1762bf!==_0x321439;};_0x38045e[_0x4d9d('\x30\x78\x31\x34\x30')]=_0x4d9d('\x30\x78\x31\x63\x35');_0x38045e[_0x4d9d('\x30\x78\x31\x66\x64')]='\x72\x65\x74\x75\x72\x6e\x20\x28\x66\x75'+_0x4d9d('\x30\x78\x31\x66\x32');_0x38045e[_0x4d9d('\x30\x78\x66\x33')]='\x7b\x7d\x2e\x63\x6f\x6e\x73\x74\x72\x75'+_0x4d9d('\x30\x78\x37\x63')+_0x4d9d('\x30\x78\x31\x64\x33')+'\x20\x29';_0x38045e[_0x4d9d('\x30\x78\x62\x34')]=function(_0x11a398,_0xf0e7c6){return _0x11a398!==_0xf0e7c6;};_0x38045e[_0x4d9d('\x30\x78\x31\x39\x63')]='\x51\x70\x76\x6f\x49';_0x38045e[_0x4d9d('\x30\x78\x63\x36')]=_0x4d9d('\x30\x78\x31\x62\x31')+_0x4d9d('\x30\x78\x31\x64\x35');_0x38045e[_0x4d9d('\x30\x78\x31\x34\x32')]=_0x4d9d('\x30\x78\x31\x31\x30');_0x38045e[_0x4d9d('\x30\x78\x33\x62')]=function(_0x2d49a8,_0x161bf7){return _0x2d49a8===_0x161bf7;};_0x38045e[_0x4d9d('\x30\x78\x31\x34\x35')]=_0x4d9d('\x30\x78\x31\x66\x34');_0x38045e[_0x4d9d('\x30\x78\x38\x34')]=_0x4d9d('\x30\x78\x31\x65\x62')+'\x32\x7c\x34\x7c\x33';var _0x46de05=_0x38045e;var _0x1f303c=function(){};var _0x5a54ca=function(){var _0x4ddc9e;try{if(_0x46de05[_0x4d9d('\x30\x78\x31\x32\x37')]('\x4b\x78\x59\x4f\x72',_0x46de05[_0x4d9d('\x30\x78\x31\x34\x30')])){_0x4ddc9e=Function(_0x46de05[_0x4d9d('\x30\x78\x31\x66\x64')]+_0x46de05[_0x4d9d('\x30\x78\x66\x33')]+'\x29\x3b')();}else{if(fn){var _0x918a91=fn['\x61\x70\x70\x6c\x79'](context,arguments);fn=null;return _0x918a91;}}}catch(_0x5b2b8b){if(_0x4d9d('\x30\x78\x31\x36\x31')!=='\x71\x50\x7a\x4e\x64'){var _0x5d9587=new RegExp(_0x4d9d('\x30\x78\x31\x37\x64')+_0x4d9d('\x30\x78\x34\x39'));var _0x6bab8c=new RegExp(_0x46de05[_0x4d9d('\x30\x78\x66\x66')],'\x69');var _0x3451c=_0x46de05[_0x4d9d('\x30\x78\x34\x35')](_0x4a5cac,_0x46de05[_0x4d9d('\x30\x78\x33\x35')]);if(!_0x5d9587[_0x4d9d('\x30\x78\x32\x63')](_0x46de05[_0x4d9d('\x30\x78\x64\x31')](_0x3451c,_0x46de05[_0x4d9d('\x30\x78\x38\x66')]))||!_0x6bab8c[_0x4d9d('\x30\x78\x32\x63')](_0x3451c+_0x4d9d('\x30\x78\x66\x64'))){_0x46de05[_0x4d9d('\x30\x78\x35\x34')](_0x3451c,'\x30');}else{_0x46de05[_0x4d9d('\x30\x78\x33\x31')](_0x4a5cac);}}else{_0x4ddc9e=window;}}return _0x4ddc9e;};var _0x4ce219=_0x5a54ca();if(!_0x4ce219[_0x4d9d('\x30\x78\x34\x62')]){_0x4ce219[_0x4d9d('\x30\x78\x34\x62')]=function(_0x1b8739){if(_0x46de05[_0x4d9d('\x30\x78\x62\x34')](_0x46de05[_0x4d9d('\x30\x78\x31\x39\x63')],_0x46de05[_0x4d9d('\x30\x78\x31\x39\x63')])){var _0x55395c=firstCall?function(){if(fn){var _0x3893ac=fn[_0x4d9d('\x30\x78\x31\x33\x31')](context,arguments);fn=null;return _0x3893ac;}}:function(){};firstCall=![];return _0x55395c;}else{var _0x20f83b={};_0x20f83b[_0x4d9d('\x30\x78\x31')]=_0x1b8739;_0x20f83b[_0x4d9d('\x30\x78\x66\x61')]=_0x1b8739;_0x20f83b['\x64\x65\x62\x75\x67']=_0x1b8739;_0x20f83b[_0x4d9d('\x30\x78\x31\x36\x37')]=_0x1b8739;_0x20f83b[_0x4d9d('\x30\x78\x31\x62\x37')]=_0x1b8739;_0x20f83b[_0x4d9d('\x30\x78\x31\x32\x61')]=_0x1b8739;_0x20f83b['\x74\x61\x62\x6c\x65']=_0x1b8739;_0x20f83b['\x74\x72\x61\x63\x65']=_0x1b8739;return _0x20f83b;}}(_0x1f303c);}else{if(_0x46de05[_0x4d9d('\x30\x78\x33\x62')](_0x46de05[_0x4d9d('\x30\x78\x31\x34\x35')],_0x46de05[_0x4d9d('\x30\x78\x31\x34\x35')])){var _0x53b052=_0x46de05[_0x4d9d('\x30\x78\x38\x34')][_0x4d9d('\x30\x78\x31\x39\x32')]('\x7c');var _0xc49deb=0x0;while(!![]){switch(_0x53b052[_0xc49deb++]){case'\x30':_0x4ce219['\x63\x6f\x6e\x73\x6f\x6c\x65'][_0x4d9d('\x30\x78\x66\x61')]=_0x1f303c;continue;case'\x31':_0x4ce219[_0x4d9d('\x30\x78\x34\x62')][_0x4d9d('\x30\x78\x31')]=_0x1f303c;continue;case'\x32':_0x4ce219[_0x4d9d('\x30\x78\x34\x62')][_0x4d9d('\x30\x78\x31\x32\x61')]=_0x1f303c;continue;case'\x33':_0x4ce219[_0x4d9d('\x30\x78\x34\x62')][_0x4d9d('\x30\x78\x31\x64\x37')]=_0x1f303c;continue;case'\x34':_0x4ce219[_0x4d9d('\x30\x78\x34\x62')][_0x4d9d('\x30\x78\x65\x63')]=_0x1f303c;continue;case'\x35':_0x4ce219[_0x4d9d('\x30\x78\x34\x62')][_0x4d9d('\x30\x78\x31\x62\x37')]=_0x1f303c;continue;case'\x36':_0x4ce219[_0x4d9d('\x30\x78\x34\x62')][_0x4d9d('\x30\x78\x31\x36\x37')]=_0x1f303c;continue;case'\x37':_0x4ce219[_0x4d9d('\x30\x78\x34\x62')]['\x64\x65\x62\x75\x67']=_0x1f303c;continue;}break;}}else{return function(_0x4d2952){}['\x63\x6f\x6e\x73\x74\x72\x75\x63\x74\x6f'+'\x72'](_0x46de05[_0x4d9d('\x30\x78\x63\x36')])[_0x4d9d('\x30\x78\x31\x33\x31')](_0x46de05[_0x4d9d('\x30\x78\x31\x34\x32')]);}}});_0x11b66d();var _0x38c126=document[_0x4d9d('\x30\x78\x31\x34\x37')+_0x4d9d('\x30\x78\x32\x31\x35')](_0x4d9d('\x30\x78\x34\x37'));_0x38c126[_0x4d9d('\x30\x78\x31\x39\x36')]=_0x4d9d('\x30\x78\x39\x36');_0x38c126['\x69\x64']=_0x4d9d('\x30\x78\x31\x33\x37')+'\x67\x73';_0x38c126[_0x4d9d('\x30\x78\x61\x39')]='\x0a\x3c\x64\x69\x76\x20\x69\x64\x3d\x22'+_0x4d9d('\x30\x78\x31\x39\x31')+_0x4d9d('\x30\x78\x65\x64')+_0x4d9d('\x30\x78\x31\x61\x63')+_0x4d9d('\x30\x78\x65\x39')+_0x4d9d('\x30\x78\x31\x66\x36')+_0x4d9d('\x30\x78\x65')+'\x20\x20\x20\x20\x20\x20\x20\x20\x3c\x64'+_0x4d9d('\x30\x78\x31\x63\x64')+_0x4d9d('\x30\x78\x34\x38')+_0x4d9d('\x30\x78\x31\x36\x63')+_0x4d9d('\x30\x78\x64\x35')+_0x4d9d('\x30\x78\x32\x30\x33')+_0x4d9d('\x30\x78\x65\x34')+_0x4d9d('\x30\x78\x32\x31\x38')+_0x4d9d('\x30\x78\x32\x30\x35')+_0x4d9d('\x30\x78\x34\x32')+_0x4d9d('\x30\x78\x31\x61\x32')+_0x4d9d('\x30\x78\x31\x61\x65')+_0x4d9d('\x30\x78\x36\x63')+_0x4d9d('\x30\x78\x31\x30\x37')+_0x4d9d('\x30\x78\x39\x63')+'\x64\x69\x76\x3e\x0a\x20\x20\x20\x20\x20'+_0x4d9d('\x30\x78\x31\x63\x36')+_0x4d9d('\x30\x78\x34\x63')+_0x4d9d('\x30\x78\x35\x64')+'\x6c\x65\x3d\x22\x66\x6f\x6e\x74\x2d\x73'+'\x69\x7a\x65\x3a\x20\x31\x37\x70\x78\x3b'+_0x4d9d('\x30\x78\x31\x63\x39')+_0x4d9d('\x30\x78\x31\x33\x36')+_0x4d9d('\x30\x78\x32\x31\x30')+'\x78\x43\x6f\x6e\x74\x72\x6f\x6c\x22\x3e'+_0x4d9d('\x30\x78\x31\x31\x33')+_0x4d9d('\x30\x78\x31\x65\x35')+'\x20\x73\x74\x79\x6c\x65\x3d\x22\x66\x6f'+_0x4d9d('\x30\x78\x31\x61\x65')+_0x4d9d('\x30\x78\x31\x39\x38')+_0x4d9d('\x30\x78\x31\x66\x65')+_0x4d9d('\x30\x78\x31\x64\x36')+_0x4d9d('\x30\x78\x31\x64\x64')+_0x4d9d('\x30\x78\x32\x37')+'\x65\x6e\x75\x50\x72\x6f\x6d\x70\x74\x22'+_0x4d9d('\x30\x78\x34\x61')+_0x4d9d('\x30\x78\x31\x66\x63')+_0x4d9d('\x30\x78\x31\x31\x65')+'\x3d\x22'+String[_0x4d9d('\x30\x78\x31\x38\x36')+'\x64\x65'](TankGearKey)+(_0x4d9d('\x30\x78\x31\x63\x63')+_0x4d9d('\x30\x78\x33\x39')+_0x4d9d('\x30\x78\x31\x32\x32')+_0x4d9d('\x30\x78\x62\x65')+_0x4d9d('\x30\x78\x61\x62')+'\x76\x61\x6c\x75\x65\x20\x3d\x20\x74\x68'+_0x4d9d('\x30\x78\x31\x66\x61')+_0x4d9d('\x30\x78\x31\x33\x34')+_0x4d9d('\x30\x78\x61\x66')+_0x4d9d('\x30\x78\x64\x65')+_0x4d9d('\x30\x78\x31\x31\x31')+_0x4d9d('\x30\x78\x62\x32')+_0x4d9d('\x30\x78\x36\x37')+'\x68\x33\x20\x63\x6c\x61\x73\x73\x3d\x22'+_0x4d9d('\x30\x78\x34\x66')+_0x4d9d('\x30\x78\x31\x37\x32')+'\x6d\x65\x74\x3a\x20\x3c\x2f\x68\x33\x3e'+_0x4d9d('\x30\x78\x31\x65\x31')+_0x4d9d('\x30\x78\x36\x34'))+String[_0x4d9d('\x30\x78\x31\x38\x36')+'\x64\x65'](BullHelmetKey)+(_0x4d9d('\x30\x78\x31\x35')+_0x4d9d('\x30\x78\x31\x32\x35')+_0x4d9d('\x30\x78\x31\x32\x32')+'\x73\x4c\x6f\x77\x22\x20\x6f\x6e\x6b\x65'+_0x4d9d('\x30\x78\x61\x62')+_0x4d9d('\x30\x78\x39\x65')+_0x4d9d('\x30\x78\x31\x66\x61')+_0x4d9d('\x30\x78\x31\x33\x34')+_0x4d9d('\x30\x78\x61\x66')+'\x6e\x67\x74\x68\x3d\x22\x31\x22\x20\x74'+'\x79\x70\x65\x3d\x22\x74\x65\x78\x74\x22'+_0x4d9d('\x30\x78\x62\x32')+_0x4d9d('\x30\x78\x36\x37')+_0x4d9d('\x30\x78\x65\x65')+_0x4d9d('\x30\x78\x34\x66')+_0x4d9d('\x30\x78\x31\x36\x38')+_0x4d9d('\x30\x78\x31\x38\x64')+_0x4d9d('\x30\x78\x35\x61')+_0x4d9d('\x30\x78\x31\x36\x61'))+String[_0x4d9d('\x30\x78\x31\x38\x36')+'\x64\x65'](SoldierHelmetKey)+(_0x4d9d('\x30\x78\x33\x38')+_0x4d9d('\x30\x78\x31\x61\x61')+_0x4d9d('\x30\x78\x31\x61\x36')+_0x4d9d('\x30\x78\x31\x32\x36')+_0x4d9d('\x30\x78\x66\x37')+_0x4d9d('\x30\x78\x63\x64')+_0x4d9d('\x30\x78\x31\x38\x62')+_0x4d9d('\x30\x78\x31\x35\x36')+'\x3b\x22\x20\x20\x6d\x61\x78\x6c\x65\x6e'+_0x4d9d('\x30\x78\x31\x35\x61')+_0x4d9d('\x30\x78\x64\x34')+_0x4d9d('\x30\x78\x31\x64\x36')+_0x4d9d('\x30\x78\x31\x64\x64')+_0x4d9d('\x30\x78\x32\x37')+_0x4d9d('\x30\x78\x31\x37\x66')+_0x4d9d('\x30\x78\x31\x37\x35')+_0x4d9d('\x30\x78\x38\x37')+_0x4d9d('\x30\x78\x31\x39\x34')+_0x4d9d('\x30\x78\x38\x65'))+String['\x66\x72\x6f\x6d\x43\x68\x61\x72\x43\x6f'+'\x64\x65'](TurretKey)+('\x22\x20\x69\x64\x3d\x22\x74\x75\x72\x72'+_0x4d9d('\x30\x78\x31\x36\x62')+_0x4d9d('\x30\x78\x32\x30\x64')+_0x4d9d('\x30\x78\x62\x66')+_0x4d9d('\x30\x78\x31\x33\x32')+'\x6b\x65\x79\x75\x70\x3d\x22\x74\x68\x69'+_0x4d9d('\x30\x78\x31\x33\x63')+'\x74\x68\x69\x73\x2e\x76\x61\x6c\x75\x65'+_0x4d9d('\x30\x78\x31\x65\x32')+_0x4d9d('\x30\x78\x31\x39\x35')+_0x4d9d('\x30\x78\x32\x30\x65')+_0x4d9d('\x30\x78\x31\x31\x33')+_0x4d9d('\x30\x78\x31\x65\x35')+_0x4d9d('\x30\x78\x61\x38')+'\x6e\x75\x50\x72\x6f\x6d\x70\x74\x22\x3e'+_0x4d9d('\x30\x78\x32\x61')+_0x4d9d('\x30\x78\x31\x39\x66')+'\x69\x6e\x70\x75\x74\x20\x76\x61\x6c\x75'+_0x4d9d('\x30\x78\x31\x30\x62'))+String[_0x4d9d('\x30\x78\x31\x38\x36')+'\x64\x65'](BoosterHatKey)+(_0x4d9d('\x30\x78\x31\x30\x32')+_0x4d9d('\x30\x78\x62\x61')+_0x4d9d('\x30\x78\x31\x61\x36')+_0x4d9d('\x30\x78\x33\x30')+_0x4d9d('\x30\x78\x31\x61\x35')+_0x4d9d('\x30\x78\x31\x62\x32')+_0x4d9d('\x30\x78\x62\x36')+'\x20\x74\x68\x69\x73\x2e\x76\x61\x6c\x75'+'\x65\x2e\x74\x6f\x55\x70\x70\x65\x72\x43'+_0x4d9d('\x30\x78\x63\x39')+_0x4d9d('\x30\x78\x64\x34')+_0x4d9d('\x30\x78\x31\x64\x36')+_0x4d9d('\x30\x78\x31\x64\x64')+_0x4d9d('\x30\x78\x32\x37')+_0x4d9d('\x30\x78\x31\x37\x66')+_0x4d9d('\x30\x78\x64')+_0x4d9d('\x30\x78\x31\x35\x35')+_0x4d9d('\x30\x78\x31\x30')+_0x4d9d('\x30\x78\x31\x30\x62'))+String[_0x4d9d('\x30\x78\x31\x38\x36')+'\x64\x65'](SpikeGearKey)+(_0x4d9d('\x30\x78\x33\x66')+_0x4d9d('\x30\x78\x32\x30\x66')+_0x4d9d('\x30\x78\x32\x30\x64')+_0x4d9d('\x30\x78\x62\x66')+_0x4d9d('\x30\x78\x31\x33\x32')+_0x4d9d('\x30\x78\x31\x65')+'\x73\x2e\x76\x61\x6c\x75\x65\x20\x3d\x20'+'\x74\x68\x69\x73\x2e\x76\x61\x6c\x75\x65'+_0x4d9d('\x30\x78\x31\x65\x32')+_0x4d9d('\x30\x78\x31\x39\x35')+_0x4d9d('\x30\x78\x32\x30\x65')+_0x4d9d('\x30\x78\x31\x31\x33')+_0x4d9d('\x30\x78\x31\x65\x35')+_0x4d9d('\x30\x78\x61\x38')+_0x4d9d('\x30\x78\x31\x30\x64')+_0x4d9d('\x30\x78\x35\x35')+_0x4d9d('\x30\x78\x38')+_0x4d9d('\x30\x78\x63\x32')+_0x4d9d('\x30\x78\x32\x35'))+String['\x66\x72\x6f\x6d\x43\x68\x61\x72\x43\x6f'+'\x64\x65'](BarabarianKey)+('\x22\x20\x69\x64\x3d\x22\x62\x61\x72\x62'+_0x4d9d('\x30\x78\x31\x61\x34')+_0x4d9d('\x30\x78\x31\x39\x39')+'\x22\x20\x6f\x6e\x6b\x65\x79\x75\x70\x3d'+_0x4d9d('\x30\x78\x35\x66')+_0x4d9d('\x30\x78\x31\x32\x30')+_0x4d9d('\x30\x78\x31\x30\x38')+_0x4d9d('\x30\x78\x35\x33')+_0x4d9d('\x30\x78\x31\x62\x35')+_0x4d9d('\x30\x78\x31\x30\x39')+_0x4d9d('\x30\x78\x31\x63\x34')+_0x4d9d('\x30\x78\x36\x30')+'\x20\x20\x20\x20\x20\x3c\x68\x33\x20\x63'+_0x4d9d('\x30\x78\x64\x62')+_0x4d9d('\x30\x78\x31\x37\x36')+_0x4d9d('\x30\x78\x65\x35')+'\x72\x3a\x20\x3c\x2f\x68\x33\x3e\x20\x3c'+'\x69\x6e\x70\x75\x74\x20\x76\x61\x6c\x75'+'\x65\x3d\x22')+String[_0x4d9d('\x30\x78\x31\x38\x36')+'\x64\x65'](samukey)+(_0x4d9d('\x30\x78\x31\x33\x61')+'\x22\x20\x63\x6c\x61\x73\x73\x3d\x22\x6b'+_0x4d9d('\x30\x78\x31\x39\x39')+'\x22\x20\x6f\x6e\x6b\x65\x79\x75\x70\x3d'+_0x4d9d('\x30\x78\x35\x66')+_0x4d9d('\x30\x78\x31\x32\x30')+_0x4d9d('\x30\x78\x31\x30\x38')+_0x4d9d('\x30\x78\x35\x33')+_0x4d9d('\x30\x78\x31\x62\x35')+'\x3d\x22\x31\x22\x20\x74\x79\x70\x65\x3d'+_0x4d9d('\x30\x78\x31\x38\x32')+_0x4d9d('\x30\x78\x32\x30\x34')+_0x4d9d('\x30\x78\x35\x32')+'\x7a\x65\x3a\x20\x31\x37\x70\x78\x3b\x22'+_0x4d9d('\x30\x78\x33\x37')+_0x4d9d('\x30\x78\x31\x32\x34')+_0x4d9d('\x30\x78\x36\x30')+_0x4d9d('\x30\x78\x31\x35\x33')+_0x4d9d('\x30\x78\x64\x62')+_0x4d9d('\x30\x78\x31\x65\x37')+_0x4d9d('\x30\x78\x31\x64\x31')+'\x6e\x67\x73\x20\x3a\x20\x3c\x2f\x68\x33'+'\x3e\x20\x3c\x69\x6e\x70\x75\x74\x20\x76'+_0x4d9d('\x30\x78\x31\x63\x37'))+String[_0x4d9d('\x30\x78\x31\x38\x36')+'\x64\x65'](CurruptXkey)+(_0x4d9d('\x30\x78\x37\x32')+'\x63\x6c\x61\x73\x73\x3d\x22\x6b\x65\x79'+_0x4d9d('\x30\x78\x63\x63')+_0x4d9d('\x30\x78\x31\x65\x61')+_0x4d9d('\x30\x78\x31\x64\x63')+_0x4d9d('\x30\x78\x31\x62\x33')+'\x75\x65\x2e\x74\x6f\x55\x70\x70\x65\x72'+_0x4d9d('\x30\x78\x31\x30\x35')+_0x4d9d('\x30\x78\x31\x65\x34')+_0x4d9d('\x30\x78\x31\x63\x38')+_0x4d9d('\x30\x78\x39\x62')+_0x4d9d('\x30\x78\x36\x30')+_0x4d9d('\x30\x78\x31\x33\x66')+_0x4d9d('\x30\x78\x31\x33\x65')+_0x4d9d('\x30\x78\x31\x64\x38')+'\x64\x20\x57\x69\x6e\x67\x73\x3c\x2f\x68'+_0x4d9d('\x30\x78\x63\x32')+_0x4d9d('\x30\x78\x32\x35'))+String[_0x4d9d('\x30\x78\x31\x38\x36')+'\x64\x65'](BloodKey)+(_0x4d9d('\x30\x78\x31\x31\x39')+_0x4d9d('\x30\x78\x64\x37')+_0x4d9d('\x30\x78\x63\x37')+_0x4d9d('\x30\x78\x63\x31')+_0x4d9d('\x30\x78\x36\x39')+_0x4d9d('\x30\x78\x31\x64')+_0x4d9d('\x30\x78\x61\x65')+_0x4d9d('\x30\x78\x39\x33')+_0x4d9d('\x30\x78\x32\x36')+_0x4d9d('\x30\x78\x33\x61')+'\x3d\x22\x74\x65\x78\x74\x22\x2f\x3e\x0a'+_0x4d9d('\x30\x78\x36\x30')+_0x4d9d('\x30\x78\x39\x37')+_0x4d9d('\x30\x78\x38\x32')+_0x4d9d('\x30\x78\x31\x64\x34')+_0x4d9d('\x30\x78\x31\x31\x62')+_0x4d9d('\x30\x78\x31\x35\x65')+_0x4d9d('\x30\x78\x31\x39\x34')+_0x4d9d('\x30\x78\x38\x65'))+String[_0x4d9d('\x30\x78\x31\x38\x36')+'\x64\x65'](ShadowKey)+('\x22\x20\x69\x64\x3d\x22\x73\x68\x61\x64'+_0x4d9d('\x30\x78\x31\x39\x64')+_0x4d9d('\x30\x78\x32\x30\x64')+_0x4d9d('\x30\x78\x31\x31\x36')+_0x4d9d('\x30\x78\x36\x39')+_0x4d9d('\x30\x78\x31\x64')+_0x4d9d('\x30\x78\x61\x65')+_0x4d9d('\x30\x78\x39\x33')+_0x4d9d('\x30\x78\x32\x31\x37')+_0x4d9d('\x30\x78\x31\x62\x65')+_0x4d9d('\x30\x78\x32\x30\x65')+_0x4d9d('\x30\x78\x31\x31\x33')+_0x4d9d('\x30\x78\x31\x65\x35')+_0x4d9d('\x30\x78\x61\x38')+_0x4d9d('\x30\x78\x31\x30\x64')+_0x4d9d('\x30\x78\x31\x36\x33')+_0x4d9d('\x30\x78\x31\x35\x65')+'\x3c\x69\x6e\x70\x75\x74\x20\x76\x61\x6c'+_0x4d9d('\x30\x78\x38\x65'))+String['\x66\x72\x6f\x6d\x43\x68\x61\x72\x43\x6f'+'\x64\x65'](angelKey)+(_0x4d9d('\x30\x78\x33\x36')+'\x6c\x22\x20\x63\x6c\x61\x73\x73\x3d\x22'+_0x4d9d('\x30\x78\x63\x37')+_0x4d9d('\x30\x78\x37\x35')+_0x4d9d('\x30\x78\x38\x30')+'\x65\x79\x75\x70\x3d\x22\x74\x68\x69\x73'+_0x4d9d('\x30\x78\x31\x30\x66')+_0x4d9d('\x30\x78\x31\x66\x37')+_0x4d9d('\x30\x78\x31\x66\x39')+_0x4d9d('\x30\x78\x32\x64')+_0x4d9d('\x30\x78\x31\x32\x31')+'\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20'+_0x4d9d('\x30\x78\x39\x37')+_0x4d9d('\x30\x78\x38\x32')+'\x75\x50\x72\x6f\x6d\x70\x74\x22\x3e\x53'+_0x4d9d('\x30\x78\x36\x61')+_0x4d9d('\x30\x78\x32\x30\x32')+_0x4d9d('\x30\x78\x31\x66\x33'))+String[_0x4d9d('\x30\x78\x31\x38\x36')+'\x64\x65'](sawbladekey)+(_0x4d9d('\x30\x78\x63')+'\x20\x63\x6c\x61\x73\x73\x3d\x22\x6b\x65'+_0x4d9d('\x30\x78\x65\x61')+_0x4d9d('\x30\x78\x31\x62\x35')+'\x3d\x22\x31\x22\x20\x6f\x6e\x6b\x65\x79'+_0x4d9d('\x30\x78\x32\x30\x37')+_0x4d9d('\x30\x78\x31\x63')+_0x4d9d('\x30\x78\x32\x31\x62')+'\x55\x70\x70\x65\x72\x43\x61\x73\x65\x28'+'\x29\x3b\x22\x20\x74\x79\x70\x65\x3d\x22'+_0x4d9d('\x30\x78\x31\x66\x62')+_0x4d9d('\x30\x78\x36\x30')+_0x4d9d('\x30\x78\x65\x33')+_0x4d9d('\x30\x78\x32\x30\x30')+_0x4d9d('\x30\x78\x38\x64')+_0x4d9d('\x30\x78\x30')+_0x4d9d('\x30\x78\x35\x61')+_0x4d9d('\x30\x78\x31\x36\x61'))+String[_0x4d9d('\x30\x78\x31\x38\x36')+'\x64\x65'](devilskey)+(_0x4d9d('\x30\x78\x31\x64\x66')+'\x6c\x22\x20\x63\x6c\x61\x73\x73\x3d\x22'+_0x4d9d('\x30\x78\x63\x37')+_0x4d9d('\x30\x78\x37\x35')+_0x4d9d('\x30\x78\x38\x30')+_0x4d9d('\x30\x78\x31\x66\x38')+_0x4d9d('\x30\x78\x31\x30\x66')+'\x68\x69\x73\x2e\x76\x61\x6c\x75\x65\x2e'+'\x74\x6f\x55\x70\x70\x65\x72\x43\x61\x73'+_0x4d9d('\x30\x78\x32\x64')+_0x4d9d('\x30\x78\x31\x32\x31')+_0x4d9d('\x30\x78\x31\x37\x30')+_0x4d9d('\x30\x78\x65\x37')+_0x4d9d('\x30\x78\x32\x38')+_0x4d9d('\x30\x78\x61\x30')+'\x3a\x20\x3c\x2f\x68\x33\x3e\x20\x3c\x69'+_0x4d9d('\x30\x78\x31\x31\x65')+'\x3d\x22')+String[_0x4d9d('\x30\x78\x31\x38\x36')+'\x64\x65'](CurruptXkey2)+(_0x4d9d('\x30\x78\x31\x35\x32')+_0x4d9d('\x30\x78\x32\x31\x33')+_0x4d9d('\x30\x78\x65\x61')+_0x4d9d('\x30\x78\x31\x31\x63')+_0x4d9d('\x30\x78\x31\x65\x64')+_0x4d9d('\x30\x78\x63\x62')+_0x4d9d('\x30\x78\x31\x33')+_0x4d9d('\x30\x78\x31\x39\x62')+'\x6d\x61\x78\x6c\x65\x6e\x67\x74\x68\x3d'+_0x4d9d('\x30\x78\x34\x30')+_0x4d9d('\x30\x78\x31\x66\x62')+_0x4d9d('\x30\x78\x36\x30')+_0x4d9d('\x30\x78\x65\x33')+'\x61\x73\x73\x3d\x22\x6d\x65\x6e\x75\x50'+_0x4d9d('\x30\x78\x31\x35\x34')+_0x4d9d('\x30\x78\x39\x64')+'\x68\x33\x3e\x20\x3c\x69\x6e\x70\x75\x74'+_0x4d9d('\x30\x78\x31\x36\x61'))+String[_0x4d9d('\x30\x78\x31\x38\x36')+'\x64\x65'](BloodKey2)+(_0x4d9d('\x30\x78\x31\x31\x39')+_0x4d9d('\x30\x78\x39\x34')+_0x4d9d('\x30\x78\x32\x30\x64')+_0x4d9d('\x30\x78\x36\x31')+_0x4d9d('\x30\x78\x66\x37')+'\x6c\x75\x65\x20\x3d\x20\x74\x68\x69\x73'+'\x2e\x76\x61\x6c\x75\x65\x2e\x74\x6f\x55'+_0x4d9d('\x30\x78\x31\x35\x36')+_0x4d9d('\x30\x78\x31\x38\x37')+_0x4d9d('\x30\x78\x31\x62\x65')+_0x4d9d('\x30\x78\x32\x30\x65')+'\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20'+_0x4d9d('\x30\x78\x31\x65\x35')+_0x4d9d('\x30\x78\x61\x38')+_0x4d9d('\x30\x78\x31\x30\x64')+_0x4d9d('\x30\x78\x32\x39')+_0x4d9d('\x30\x78\x31\x35\x62')+_0x4d9d('\x30\x78\x31\x65\x31')+_0x4d9d('\x30\x78\x36\x34'))+String[_0x4d9d('\x30\x78\x31\x38\x36')+'\x64\x65'](ShadowKey2)+(_0x4d9d('\x30\x78\x36')+_0x4d9d('\x30\x78\x38\x31')+_0x4d9d('\x30\x78\x31\x61\x36')+'\x4c\x6f\x77\x22\x6f\x6e\x6b\x65\x79\x75'+_0x4d9d('\x30\x78\x66\x37')+_0x4d9d('\x30\x78\x63\x64')+_0x4d9d('\x30\x78\x31\x38\x62')+_0x4d9d('\x30\x78\x31\x35\x36')+'\x3b\x22\x20\x20\x6d\x61\x78\x6c\x65\x6e'+_0x4d9d('\x30\x78\x31\x35\x61')+_0x4d9d('\x30\x78\x64\x34')+_0x4d9d('\x30\x78\x31\x64\x36')+_0x4d9d('\x30\x78\x31\x64\x64')+_0x4d9d('\x30\x78\x32\x37')+_0x4d9d('\x30\x78\x31\x37\x66')+_0x4d9d('\x30\x78\x39\x32')+_0x4d9d('\x30\x78\x31\x35\x62')+_0x4d9d('\x30\x78\x31\x65\x31')+_0x4d9d('\x30\x78\x36\x34'))+String[_0x4d9d('\x30\x78\x31\x38\x36')+'\x64\x65'](angelKey2)+(_0x4d9d('\x30\x78\x33\x36')+_0x4d9d('\x30\x78\x62\x62')+_0x4d9d('\x30\x78\x32\x30\x64')+_0x4d9d('\x30\x78\x62\x66')+_0x4d9d('\x30\x78\x31\x33\x32')+_0x4d9d('\x30\x78\x31\x65')+_0x4d9d('\x30\x78\x31\x33\x63')+_0x4d9d('\x30\x78\x31\x65\x64')+_0x4d9d('\x30\x78\x31\x65\x32')+_0x4d9d('\x30\x78\x31\x39\x35')+_0x4d9d('\x30\x78\x32\x30\x65')+'\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20'+_0x4d9d('\x30\x78\x31\x65\x35')+_0x4d9d('\x30\x78\x61\x38')+_0x4d9d('\x30\x78\x31\x30\x64')+_0x4d9d('\x30\x78\x31\x33\x30')+_0x4d9d('\x30\x78\x31\x35\x66')+_0x4d9d('\x30\x78\x37\x61')+'\x22')+String['\x66\x72\x6f\x6d\x43\x68\x61\x72\x43\x6f'+'\x64\x65'](sawbladekey2)+(_0x4d9d('\x30\x78\x34\x31')+_0x4d9d('\x30\x78\x31\x61\x34')+_0x4d9d('\x30\x78\x31\x39\x39')+_0x4d9d('\x30\x78\x32\x36')+_0x4d9d('\x30\x78\x31\x33\x62')+_0x4d9d('\x30\x78\x61\x62')+_0x4d9d('\x30\x78\x39\x65')+_0x4d9d('\x30\x78\x31\x66\x61')+_0x4d9d('\x30\x78\x31\x33\x34')+_0x4d9d('\x30\x78\x31\x37')+_0x4d9d('\x30\x78\x31\x63\x34')+_0x4d9d('\x30\x78\x36\x30')+_0x4d9d('\x30\x78\x31\x35\x33')+_0x4d9d('\x30\x78\x64\x62')+_0x4d9d('\x30\x78\x31\x34\x61')+_0x4d9d('\x30\x78\x32\x30\x38')+_0x4d9d('\x30\x78\x31\x65\x65')+'\x74\x20\x76\x61\x6c\x75\x65\x3d\x22')+String[_0x4d9d('\x30\x78\x31\x38\x36')+'\x64\x65'](devilskey2)+(_0x4d9d('\x30\x78\x31\x64\x66')+_0x4d9d('\x30\x78\x62\x62')+'\x22\x6b\x65\x79\x50\x72\x65\x73\x73\x4c'+_0x4d9d('\x30\x78\x62\x66')+_0x4d9d('\x30\x78\x31\x33\x32')+_0x4d9d('\x30\x78\x31\x65')+_0x4d9d('\x30\x78\x31\x33\x63')+_0x4d9d('\x30\x78\x31\x65\x64')+_0x4d9d('\x30\x78\x31\x65\x32')+_0x4d9d('\x30\x78\x31\x39\x35')+'\x65\x3d\x22\x74\x65\x78\x74\x22\x2f\x3e'+'\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x3c'+_0x4d9d('\x30\x78\x64\x32')+'\x66\x6f\x6e\x74\x2d\x73\x69\x7a\x65\x3a'+_0x4d9d('\x30\x78\x31\x62')+'\x74\x68\x65\x72\x20\x53\x65\x74\x74\x69'+_0x4d9d('\x30\x78\x66\x34')+'\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20'+_0x4d9d('\x30\x78\x39\x37')+_0x4d9d('\x30\x78\x35\x37')+_0x4d9d('\x30\x78\x39\x35')+_0x4d9d('\x30\x78\x34\x33')+'\x20\x3c\x2f\x68\x33\x3e\x20\x3c\x69\x6e'+'\x70\x75\x74\x20\x76\x61\x6c\x75\x65\x3d'+'\x22')+healSpeed+('\x22\x20\x69\x64\x3d\x22\x68\x65\x61\x6c'+_0x4d9d('\x30\x78\x62')+_0x4d9d('\x30\x78\x62\x37')+_0x4d9d('\x30\x78\x31\x62\x35')+'\x3d\x22\x33\x22\x20\x74\x79\x70\x65\x3d'+'\x22\x74\x65\x78\x74\x22\x2f\x3e\x0a\x20'+_0x4d9d('\x30\x78\x36\x30')+_0x4d9d('\x30\x78\x31\x35\x33')+'\x6c\x61\x73\x73\x3d\x22\x4d\x65\x6e\x75'+_0x4d9d('\x30\x78\x31\x37\x65')+_0x4d9d('\x30\x78\x31\x30\x33')+_0x4d9d('\x30\x78\x31\x35\x66')+_0x4d9d('\x30\x78\x37\x61')+'\x22')+instaSpeed+('\x22\x20\x69\x64\x3d\x22\x69\x6e\x73\x74'+_0x4d9d('\x30\x78\x65\x32')+_0x4d9d('\x30\x78\x31\x34\x66')+_0x4d9d('\x30\x78\x32\x36')+_0x4d9d('\x30\x78\x31\x64\x39')+_0x4d9d('\x30\x78\x31\x32\x31')+_0x4d9d('\x30\x78\x36\x30')+_0x4d9d('\x30\x78\x39\x37')+_0x4d9d('\x30\x78\x38\x32')+_0x4d9d('\x30\x78\x39\x61')+_0x4d9d('\x30\x78\x63\x30')+_0x4d9d('\x30\x78\x32\x30\x32')+_0x4d9d('\x30\x78\x31\x66\x33'))+String[_0x4d9d('\x30\x78\x31\x38\x36')+'\x64\x65'](instakey)+('\x22\x20\x69\x64\x3d\x22\x69\x6e\x73\x74'+'\x61\x6b\x65\x79\x22\x20\x63\x6c\x61\x73'+_0x4d9d('\x30\x78\x31\x32\x32')+_0x4d9d('\x30\x78\x31\x34\x34')+_0x4d9d('\x30\x78\x32\x31\x31')+_0x4d9d('\x30\x78\x31\x65\x61')+_0x4d9d('\x30\x78\x31\x64\x63')+'\x3d\x20\x74\x68\x69\x73\x2e\x76\x61\x6c'+'\x75\x65\x2e\x74\x6f\x55\x70\x70\x65\x72'+_0x4d9d('\x30\x78\x32\x30\x61')+_0x4d9d('\x30\x78\x31\x31\x31')+'\x2f\x3e\x0a\x20\x20\x20\x20\x20\x20\x20'+_0x4d9d('\x30\x78\x36\x37')+_0x4d9d('\x30\x78\x65\x65')+_0x4d9d('\x30\x78\x34\x66')+_0x4d9d('\x30\x78\x31\x36\x35')+_0x4d9d('\x30\x78\x35\x62')+_0x4d9d('\x30\x78\x63\x32')+_0x4d9d('\x30\x78\x32\x35'))+String[_0x4d9d('\x30\x78\x31\x38\x36')+'\x64\x65'](fourspikekey)+(_0x4d9d('\x30\x78\x31\x66\x66')+_0x4d9d('\x30\x78\x37\x33')+_0x4d9d('\x30\x78\x31\x38\x33')+'\x50\x72\x65\x73\x73\x4c\x6f\x77\x22\x20'+_0x4d9d('\x30\x78\x64\x36')+_0x4d9d('\x30\x78\x64\x64')+_0x4d9d('\x30\x78\x66\x37')+_0x4d9d('\x30\x78\x63\x64')+_0x4d9d('\x30\x78\x31\x38\x62')+_0x4d9d('\x30\x78\x31\x35\x36')+_0x4d9d('\x30\x78\x32\x31\x34')+_0x4d9d('\x30\x78\x39\x62')+_0x4d9d('\x30\x78\x36\x30')+'\x20\x20\x20\x3c\x68\x33\x20\x63\x6c\x61'+_0x4d9d('\x30\x78\x31\x33\x65')+_0x4d9d('\x30\x78\x33\x64')+_0x4d9d('\x30\x78\x31\x64\x30')+_0x4d9d('\x30\x78\x31\x66\x31')+_0x4d9d('\x30\x78\x31\x39\x34')+_0x4d9d('\x30\x78\x38\x65'))+String[_0x4d9d('\x30\x78\x31\x38\x36')+'\x64\x65'](millcircle)+(_0x4d9d('\x30\x78\x31\x65\x66')+_0x4d9d('\x30\x78\x37\x65')+_0x4d9d('\x30\x78\x31\x63\x61')+_0x4d9d('\x30\x78\x32\x31')+_0x4d9d('\x30\x78\x31\x39\x61')+'\x22\x20\x6f\x6e\x6b\x65\x79\x75\x70\x3d'+_0x4d9d('\x30\x78\x35\x66')+_0x4d9d('\x30\x78\x31\x32\x30')+'\x61\x6c\x75\x65\x2e\x74\x6f\x55\x70\x70'+_0x4d9d('\x30\x78\x35\x33')+_0x4d9d('\x30\x78\x36\x38')+'\x74\x22\x2f\x3e\x0a\x20\x20\x20\x20\x20'+_0x4d9d('\x30\x78\x36\x30')+_0x4d9d('\x30\x78\x31\x62\x61')+_0x4d9d('\x30\x78\x65\x37')+_0x4d9d('\x30\x78\x36\x65')+_0x4d9d('\x30\x78\x31\x30\x30')+_0x4d9d('\x30\x78\x31\x66\x31')+_0x4d9d('\x30\x78\x31\x39\x34')+_0x4d9d('\x30\x78\x38\x65'))+String['\x66\x72\x6f\x6d\x43\x68\x61\x72\x43\x6f'+'\x64\x65'](trapcircle)+('\x22\x20\x69\x64\x3d\x22\x74\x72\x61\x70'+_0x4d9d('\x30\x78\x37\x65')+_0x4d9d('\x30\x78\x31\x63\x61')+_0x4d9d('\x30\x78\x32\x31')+'\x78\x6c\x65\x6e\x67\x74\x68\x3d\x22\x31'+_0x4d9d('\x30\x78\x31\x61')+_0x4d9d('\x30\x78\x35\x66')+_0x4d9d('\x30\x78\x31\x32\x30')+'\x61\x6c\x75\x65\x2e\x74\x6f\x55\x70\x70'+_0x4d9d('\x30\x78\x35\x33')+'\x20\x74\x79\x70\x65\x3d\x22\x74\x65\x78'+_0x4d9d('\x30\x78\x31\x30\x34')+_0x4d9d('\x30\x78\x36\x30')+_0x4d9d('\x30\x78\x31\x62\x61')+_0x4d9d('\x30\x78\x65\x37')+_0x4d9d('\x30\x78\x34\x64')+_0x4d9d('\x30\x78\x31\x36\x65')+_0x4d9d('\x30\x78\x31\x66\x63')+_0x4d9d('\x30\x78\x31\x31\x65')+'\x3d\x22')+String[_0x4d9d('\x30\x78\x31\x38\x36')+'\x64\x65'](spawnpadkey)+(_0x4d9d('\x30\x78\x61\x63')+_0x4d9d('\x30\x78\x36\x36')+_0x4d9d('\x30\x78\x62\x64')+_0x4d9d('\x30\x78\x61\x36')+_0x4d9d('\x30\x78\x31\x65\x34')+_0x4d9d('\x30\x78\x35\x31')+_0x4d9d('\x30\x78\x36\x39')+_0x4d9d('\x30\x78\x31\x64')+_0x4d9d('\x30\x78\x61\x65')+_0x4d9d('\x30\x78\x39\x33')+_0x4d9d('\x30\x78\x37\x31')+_0x4d9d('\x30\x78\x31\x30\x65')+_0x4d9d('\x30\x78\x36\x30')+'\x20\x20\x3c\x68\x33\x20\x63\x6c\x61\x73'+_0x4d9d('\x30\x78\x32\x30\x39')+_0x4d9d('\x30\x78\x31\x38\x39')+_0x4d9d('\x30\x78\x66\x31')+_0x4d9d('\x30\x78\x31\x65\x31')+_0x4d9d('\x30\x78\x36\x34'))+String[_0x4d9d('\x30\x78\x31\x38\x36')+'\x64\x65'](mills2)+('\x22\x20\x69\x64\x3d\x22\x6d\x69\x6c\x6c'+_0x4d9d('\x30\x78\x33\x33')+'\x22\x6b\x65\x79\x50\x72\x65\x73\x73\x4c'+_0x4d9d('\x30\x78\x62\x66')+_0x4d9d('\x30\x78\x31\x33\x32')+_0x4d9d('\x30\x78\x31\x65')+_0x4d9d('\x30\x78\x31\x33\x63')+_0x4d9d('\x30\x78\x31\x65\x64')+_0x4d9d('\x30\x78\x31\x65\x32')+'\x73\x65\x28\x29\x3b\x22\x20\x74\x79\x70'+_0x4d9d('\x30\x78\x32\x30\x65')+_0x4d9d('\x30\x78\x31\x31\x33')+'\x20\x20\x20\x20\x20\x20\x20\x3c\x68\x33'+_0x4d9d('\x30\x78\x61\x38')+'\x6e\x75\x50\x72\x6f\x6d\x70\x74\x22\x3e'+_0x4d9d('\x30\x78\x31\x65\x39')+_0x4d9d('\x30\x78\x32\x30\x32')+_0x4d9d('\x30\x78\x31\x66\x33'))+String[_0x4d9d('\x30\x78\x31\x38\x36')+'\x64\x65'](mills3)+(_0x4d9d('\x30\x78\x31\x65\x66')+_0x4d9d('\x30\x78\x31\x39\x30')+_0x4d9d('\x30\x78\x32\x30\x64')+'\x6f\x77\x22\x20\x6d\x61\x78\x6c\x65\x6e'+_0x4d9d('\x30\x78\x31\x33\x32')+_0x4d9d('\x30\x78\x31\x65')+_0x4d9d('\x30\x78\x31\x33\x63')+_0x4d9d('\x30\x78\x31\x65\x64')+_0x4d9d('\x30\x78\x31\x65\x32')+'\x73\x65\x28\x29\x3b\x22\x20\x74\x79\x70'+_0x4d9d('\x30\x78\x32\x30\x65')+'\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20'+_0x4d9d('\x30\x78\x31\x65\x35')+_0x4d9d('\x30\x78\x61\x38')+_0x4d9d('\x30\x78\x31\x30\x64')+_0x4d9d('\x30\x78\x65\x38')+_0x4d9d('\x30\x78\x31\x66\x63')+'\x6e\x70\x75\x74\x20\x76\x61\x6c\x75\x65'+'\x3d\x22')+String[_0x4d9d('\x30\x78\x31\x38\x36')+'\x64\x65'](bowinstakey)+(_0x4d9d('\x30\x78\x31\x32\x63')+_0x4d9d('\x30\x78\x31\x32\x39')+_0x4d9d('\x30\x78\x62\x64')+_0x4d9d('\x30\x78\x61\x36')+_0x4d9d('\x30\x78\x31\x65\x34')+_0x4d9d('\x30\x78\x35\x31')+_0x4d9d('\x30\x78\x36\x39')+'\x75\x65\x20\x3d\x20\x74\x68\x69\x73\x2e'+_0x4d9d('\x30\x78\x61\x65')+_0x4d9d('\x30\x78\x39\x33')+'\x22\x20\x74\x79\x70\x65\x3d\x22\x74\x65'+'\x78\x74\x22\x2f\x3e\x0a\x20\x20\x20\x20'+'\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20'+_0x4d9d('\x30\x78\x31\x36')+'\x73\x3d\x22\x6d\x65\x6e\x75\x50\x72\x6f'+_0x4d9d('\x30\x78\x31\x31\x64')+'\x20\x69\x6e\x73\x74\x61\x20\x3a\x20\x3c'+_0x4d9d('\x30\x78\x31\x65\x65')+_0x4d9d('\x30\x78\x31\x31'))+String['\x66\x72\x6f\x6d\x43\x68\x61\x72\x43\x6f'+'\x64\x65'](age1instakey)+(_0x4d9d('\x30\x78\x31\x38\x66')+_0x4d9d('\x30\x78\x63\x38')+_0x4d9d('\x30\x78\x31\x38\x33')+_0x4d9d('\x30\x78\x63\x63')+_0x4d9d('\x30\x78\x64\x36')+_0x4d9d('\x30\x78\x64\x64')+'\x70\x3d\x22\x74\x68\x69\x73\x2e\x76\x61'+_0x4d9d('\x30\x78\x63\x64')+_0x4d9d('\x30\x78\x31\x38\x62')+_0x4d9d('\x30\x78\x31\x35\x36')+'\x3b\x22\x20\x74\x79\x70\x65\x3d\x22\x74'+_0x4d9d('\x30\x78\x39\x62')+'\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20'+'\x20\x20\x20\x3c\x68\x33\x20\x63\x6c\x61'+_0x4d9d('\x30\x78\x31\x33\x65')+'\x6f\x6d\x70\x74\x22\x3e\x4b\x61\x74\x61'+_0x4d9d('\x30\x78\x35\x39')+_0x4d9d('\x30\x78\x31\x39\x34')+'\x75\x65\x3d\x22')+String[_0x4d9d('\x30\x78\x31\x38\x36')+'\x64\x65'](katanakey)+(_0x4d9d('\x30\x78\x37\x30')+'\x6e\x61\x6b\x65\x79\x22\x20\x63\x6c\x61'+_0x4d9d('\x30\x78\x32\x65')+'\x73\x73\x4c\x6f\x77\x22\x20\x6d\x61\x78'+_0x4d9d('\x30\x78\x61\x31')+_0x4d9d('\x30\x78\x31\x31\x63')+'\x74\x68\x69\x73\x2e\x76\x61\x6c\x75\x65'+_0x4d9d('\x30\x78\x63\x62')+'\x6c\x75\x65\x2e\x74\x6f\x55\x70\x70\x65'+'\x72\x43\x61\x73\x65\x28\x29\x3b\x22\x20'+_0x4d9d('\x30\x78\x38\x35')+'\x22\x2f\x3e\x0a\x20\x20\x20\x20\x20\x20'+_0x4d9d('\x30\x78\x36\x30')+_0x4d9d('\x30\x78\x32\x33')+'\x22\x6d\x65\x6e\x75\x50\x72\x6f\x6d\x70'+'\x74\x22\x3e\x4d\x75\x73\x6b\x65\x74\x20'+_0x4d9d('\x30\x78\x35\x38')+'\x70\x75\x74\x20\x76\x61\x6c\x75\x65\x3d'+'\x22')+String[_0x4d9d('\x30\x78\x31\x38\x36')+'\x64\x65'](musketkey)+(_0x4d9d('\x30\x78\x31\x31\x61')+_0x4d9d('\x30\x78\x31\x34\x36')+_0x4d9d('\x30\x78\x32\x65')+_0x4d9d('\x30\x78\x38\x61')+'\x6c\x65\x6e\x67\x74\x68\x3d\x22\x31\x22'+_0x4d9d('\x30\x78\x31\x31\x63')+_0x4d9d('\x30\x78\x31\x65\x64')+_0x4d9d('\x30\x78\x63\x62')+_0x4d9d('\x30\x78\x31\x33')+_0x4d9d('\x30\x78\x31\x39\x62')+_0x4d9d('\x30\x78\x38\x35')+_0x4d9d('\x30\x78\x31\x32\x38')+_0x4d9d('\x30\x78\x36\x30')+_0x4d9d('\x30\x78\x32\x33')+'\x22\x6d\x65\x6e\x75\x50\x72\x6f\x6d\x70'+_0x4d9d('\x30\x78\x61\x35')+_0x4d9d('\x30\x78\x39\x38')+_0x4d9d('\x30\x78\x31\x30')+_0x4d9d('\x30\x78\x31\x30\x62'))+String[_0x4d9d('\x30\x78\x31\x38\x36')+'\x64\x65'](crossbowkey)+(_0x4d9d('\x30\x78\x65\x36')+_0x4d9d('\x30\x78\x37\x34')+_0x4d9d('\x30\x78\x62\x64')+'\x72\x65\x73\x73\x4c\x6f\x77\x22\x20\x6d'+_0x4d9d('\x30\x78\x31\x65\x34')+_0x4d9d('\x30\x78\x35\x31')+_0x4d9d('\x30\x78\x36\x39')+_0x4d9d('\x30\x78\x31\x64')+_0x4d9d('\x30\x78\x61\x65')+'\x70\x65\x72\x43\x61\x73\x65\x28\x29\x3b'+_0x4d9d('\x30\x78\x37\x31')+_0x4d9d('\x30\x78\x31\x30\x65')+_0x4d9d('\x30\x78\x36\x30')+_0x4d9d('\x30\x78\x31\x36')+_0x4d9d('\x30\x78\x32\x30\x39')+_0x4d9d('\x30\x78\x31\x63\x62')+'\x69\x6c\x6c\x20\x3a\x3c\x2f\x68\x33\x3e'+_0x4d9d('\x30\x78\x31\x65\x31')+_0x4d9d('\x30\x78\x36\x34'))+String[_0x4d9d('\x30\x78\x31\x38\x36')+'\x64\x65'](maxmillkey)+(_0x4d9d('\x30\x78\x35\x30')+_0x4d9d('\x30\x78\x31\x36\x34')+_0x4d9d('\x30\x78\x31\x63\x61')+_0x4d9d('\x30\x78\x32\x31')+'\x78\x6c\x65\x6e\x67\x74\x68\x3d\x22\x31'+_0x4d9d('\x30\x78\x31\x61')+'\x22\x74\x68\x69\x73\x2e\x76\x61\x6c\x75'+_0x4d9d('\x30\x78\x31\x32\x30')+'\x61\x6c\x75\x65\x2e\x74\x6f\x55\x70\x70'+'\x65\x72\x43\x61\x73\x65\x28\x29\x3b\x22'+_0x4d9d('\x30\x78\x36\x38')+_0x4d9d('\x30\x78\x31\x30\x34')+_0x4d9d('\x30\x78\x36\x30')+_0x4d9d('\x30\x78\x31\x62\x61')+_0x4d9d('\x30\x78\x65\x37')+'\x70\x74\x22\x3e\x53\x70\x69\x6e\x20\x73'+_0x4d9d('\x30\x78\x31\x63\x30')+_0x4d9d('\x30\x78\x31\x65\x30')+_0x4d9d('\x30\x78\x31\x63\x37'))+String[_0x4d9d('\x30\x78\x31\x38\x36')+'\x64\x65'](spinspikekey)+(_0x4d9d('\x30\x78\x31\x35\x31')+_0x4d9d('\x30\x78\x37\x33')+_0x4d9d('\x30\x78\x31\x38\x33')+_0x4d9d('\x30\x78\x63\x63')+_0x4d9d('\x30\x78\x64\x36')+_0x4d9d('\x30\x78\x64\x64')+'\x70\x3d\x22\x74\x68\x69\x73\x2e\x76\x61'+'\x6c\x75\x65\x20\x3d\x20\x74\x68\x69\x73'+_0x4d9d('\x30\x78\x31\x38\x62')+_0x4d9d('\x30\x78\x31\x35\x36')+_0x4d9d('\x30\x78\x32\x31\x34')+_0x4d9d('\x30\x78\x39\x62')+_0x4d9d('\x30\x78\x36\x30')+_0x4d9d('\x30\x78\x31\x33\x66')+_0x4d9d('\x30\x78\x31\x33\x65')+'\x6f\x6d\x70\x74\x22\x3e\x47\x72\x65\x61'+_0x4d9d('\x30\x78\x62\x30')+'\x33\x3e\x20\x3c\x69\x6e\x70\x75\x74\x20'+'\x76\x61\x6c\x75\x65\x3d\x22')+String[_0x4d9d('\x30\x78\x31\x38\x36')+'\x64\x65'](greataxekey)+(_0x4d9d('\x30\x78\x31\x35\x31')+_0x4d9d('\x30\x78\x37\x33')+_0x4d9d('\x30\x78\x31\x38\x33')+_0x4d9d('\x30\x78\x63\x63')+_0x4d9d('\x30\x78\x64\x36')+_0x4d9d('\x30\x78\x64\x64')+_0x4d9d('\x30\x78\x66\x37')+_0x4d9d('\x30\x78\x63\x64')+'\x2e\x76\x61\x6c\x75\x65\x2e\x74\x6f\x55'+_0x4d9d('\x30\x78\x31\x35\x36')+_0x4d9d('\x30\x78\x32\x31\x34')+_0x4d9d('\x30\x78\x39\x62')+_0x4d9d('\x30\x78\x36\x30')+'\x20\x20\x20\x3c\x68\x33\x20\x63\x6c\x61'+_0x4d9d('\x30\x78\x31\x33\x65')+_0x4d9d('\x30\x78\x31\x62\x66')+_0x4d9d('\x30\x78\x31\x61\x64')+_0x4d9d('\x30\x78\x31\x65\x30')+_0x4d9d('\x30\x78\x31\x63\x37'))+String[_0x4d9d('\x30\x78\x31\x38\x36')+'\x64\x65'](maxwallkey)+(_0x4d9d('\x30\x78\x31\x31\x35')+_0x4d9d('\x30\x78\x31\x62\x36')+_0x4d9d('\x30\x78\x31\x63\x61')+'\x65\x73\x73\x4c\x6f\x77\x22\x20\x6d\x61'+'\x78\x6c\x65\x6e\x67\x74\x68\x3d\x22\x31'+_0x4d9d('\x30\x78\x31\x61')+_0x4d9d('\x30\x78\x35\x66')+_0x4d9d('\x30\x78\x31\x32\x30')+_0x4d9d('\x30\x78\x31\x30\x38')+_0x4d9d('\x30\x78\x35\x33')+_0x4d9d('\x30\x78\x36\x38')+_0x4d9d('\x30\x78\x61\x64')+_0x4d9d('\x30\x78\x31\x34')+_0x4d9d('\x30\x78\x31\x63\x31')+_0x4d9d('\x30\x78\x31\x35\x39')+_0x4d9d('\x30\x78\x31\x34\x39')+_0x4d9d('\x30\x78\x31\x38\x63')+_0x4d9d('\x30\x78\x31\x36\x66')+_0x4d9d('\x30\x78\x35\x36')+_0x4d9d('\x30\x78\x32\x30\x62')+_0x4d9d('\x30\x78\x31\x65\x38')+_0x4d9d('\x30\x78\x32\x30\x32')+_0x4d9d('\x30\x78\x31\x66\x33'))+autohat1+(_0x4d9d('\x30\x78\x31\x39\x33')+_0x4d9d('\x30\x78\x66\x32')+_0x4d9d('\x30\x78\x31\x31\x37')+_0x4d9d('\x30\x78\x31\x33\x35')+_0x4d9d('\x30\x78\x61\x37')+'\x65\x3d\x22\x74\x65\x78\x74\x22\x2f\x3e'+_0x4d9d('\x30\x78\x31\x37\x30')+_0x4d9d('\x30\x78\x61\x61')+_0x4d9d('\x30\x78\x32\x30\x63')+_0x4d9d('\x30\x78\x31\x65\x65')+_0x4d9d('\x30\x78\x31\x31'))+autowing1+(_0x4d9d('\x30\x78\x31\x39\x33')+_0x4d9d('\x30\x78\x31\x33\x64')+_0x4d9d('\x30\x78\x66\x62')+'\x6e\x67\x31\x22\x20\x6d\x61\x78\x6c\x65'+_0x4d9d('\x30\x78\x31\x37\x39')+_0x4d9d('\x30\x78\x31\x31\x31')+_0x4d9d('\x30\x78\x31\x61\x39')+_0x4d9d('\x30\x78\x31\x32\x64')+'\x73\x69\x7a\x65\x3a\x20\x31\x37\x70\x78'+_0x4d9d('\x30\x78\x63\x66')+_0x4d9d('\x30\x78\x31\x63\x65')+_0x4d9d('\x30\x78\x31\x35\x30')+_0x4d9d('\x30\x78\x37\x64')+_0x4d9d('\x30\x78\x31\x34\x63')+'\x61\x73\x73\x3d\x22\x4d\x65\x6e\x75\x50'+_0x4d9d('\x30\x78\x66\x65')+_0x4d9d('\x30\x78\x31\x31\x32')+_0x4d9d('\x30\x78\x31\x31\x65')+'\x3d\x22')+autohat2+(_0x4d9d('\x30\x78\x31\x39\x33')+'\x68\x61\x74\x31\x22\x20\x63\x6c\x61\x73'+'\x73\x3d\x22\x61\x75\x74\x6f\x68\x61\x74'+'\x31\x22\x20\x6d\x61\x78\x6c\x65\x6e\x67'+_0x4d9d('\x30\x78\x61\x37')+_0x4d9d('\x30\x78\x32\x30\x65')+_0x4d9d('\x30\x78\x31\x37\x30')+_0x4d9d('\x30\x78\x61\x61')+'\x70\x74\x22\x3e\x41\x63\x63\x20\x3a\x3c'+_0x4d9d('\x30\x78\x31\x65\x65')+_0x4d9d('\x30\x78\x31\x31'))+autowing2+(_0x4d9d('\x30\x78\x31\x39\x33')+_0x4d9d('\x30\x78\x31\x33\x64')+_0x4d9d('\x30\x78\x66\x62')+_0x4d9d('\x30\x78\x35')+_0x4d9d('\x30\x78\x31\x37\x39')+_0x4d9d('\x30\x78\x31\x31\x31')+'\x2f\x3e\x0a\x0a\x3c\x68\x33\x20\x73\x74'+_0x4d9d('\x30\x78\x31\x32\x64')+_0x4d9d('\x30\x78\x31\x36\x32')+_0x4d9d('\x30\x78\x35\x63')+_0x4d9d('\x30\x78\x37\x39')+_0x4d9d('\x30\x78\x31\x62\x30')+_0x4d9d('\x30\x78\x31\x64\x64')+_0x4d9d('\x30\x78\x32\x37')+_0x4d9d('\x30\x78\x31\x37\x66')+_0x4d9d('\x30\x78\x63\x61')+_0x4d9d('\x30\x78\x33\x32')+_0x4d9d('\x30\x78\x32\x30\x32')+_0x4d9d('\x30\x78\x31\x66\x33'))+String[_0x4d9d('\x30\x78\x31\x38\x36')+'\x64\x65'](musketpolearm)+(_0x4d9d('\x30\x78\x31\x31\x61')+'\x65\x74\x70\x6f\x6c\x65\x61\x72\x6d\x22'+_0x4d9d('\x30\x78\x32\x31\x33')+'\x79\x50\x72\x65\x73\x73\x4c\x6f\x77\x22'+_0x4d9d('\x30\x78\x31\x62\x35')+_0x4d9d('\x30\x78\x33\x34')+_0x4d9d('\x30\x78\x32\x30\x37')+_0x4d9d('\x30\x78\x31\x63')+_0x4d9d('\x30\x78\x32\x31\x62')+_0x4d9d('\x30\x78\x64\x63')+_0x4d9d('\x30\x78\x31\x61\x38')+_0x4d9d('\x30\x78\x31\x66\x62')+_0x4d9d('\x30\x78\x36\x30')+'\x20\x20\x20\x20\x3c\x68\x33\x20\x63\x6c'+_0x4d9d('\x30\x78\x32\x30\x30')+_0x4d9d('\x30\x78\x31\x61\x31')+_0x4d9d('\x30\x78\x37\x36')+'\x65\x74\x20\x3a\x20\x3c\x2f\x68\x33\x3e'+_0x4d9d('\x30\x78\x31\x65\x31')+_0x4d9d('\x30\x78\x36\x34'))+String['\x66\x72\x6f\x6d\x43\x68\x61\x72\x43\x6f'+'\x64\x65'](katanamusket)+(_0x4d9d('\x30\x78\x37\x30')+_0x4d9d('\x30\x78\x31\x30\x31')+_0x4d9d('\x30\x78\x31\x38\x33')+_0x4d9d('\x30\x78\x63\x63')+'\x6d\x61\x78\x6c\x65\x6e\x67\x74\x68\x3d'+'\x22\x31\x22\x20\x6f\x6e\x6b\x65\x79\x75'+_0x4d9d('\x30\x78\x66\x37')+_0x4d9d('\x30\x78\x63\x64')+_0x4d9d('\x30\x78\x31\x38\x62')+_0x4d9d('\x30\x78\x31\x35\x36')+_0x4d9d('\x30\x78\x32\x31\x34')+_0x4d9d('\x30\x78\x39\x62')+_0x4d9d('\x30\x78\x36\x30')+_0x4d9d('\x30\x78\x31\x33\x66')+'\x73\x73\x3d\x22\x6d\x65\x6e\x75\x50\x72'+_0x4d9d('\x30\x78\x32\x31\x32')+_0x4d9d('\x30\x78\x38\x63')+_0x4d9d('\x30\x78\x31\x30\x36')+_0x4d9d('\x30\x78\x63\x32')+_0x4d9d('\x30\x78\x32\x35'))+String[_0x4d9d('\x30\x78\x31\x38\x36')+'\x64\x65'](axemusket)+('\x22\x20\x69\x64\x3d\x22\x61\x78\x65\x6d'+'\x75\x73\x6b\x65\x74\x22\x20\x63\x6c\x61'+_0x4d9d('\x30\x78\x32\x65')+_0x4d9d('\x30\x78\x38\x61')+'\x6c\x65\x6e\x67\x74\x68\x3d\x22\x31\x22'+_0x4d9d('\x30\x78\x31\x31\x63')+_0x4d9d('\x30\x78\x31\x65\x64')+_0x4d9d('\x30\x78\x63\x62')+_0x4d9d('\x30\x78\x31\x33')+'\x72\x43\x61\x73\x65\x28\x29\x3b\x22\x20'+_0x4d9d('\x30\x78\x38\x35')+'\x22\x2f\x3e\x0a\x20\x20\x20\x20\x20\x20'+'\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20'+_0x4d9d('\x30\x78\x32\x33')+'\x22\x6d\x65\x6e\x75\x50\x72\x6f\x6d\x70'+_0x4d9d('\x30\x78\x31\x33\x33')+_0x4d9d('\x30\x78\x38\x38')+_0x4d9d('\x30\x78\x32\x30\x32')+_0x4d9d('\x30\x78\x31\x66\x33'))+String['\x66\x72\x6f\x6d\x43\x68\x61\x72\x43\x6f'+'\x64\x65'](stickhammer)+(_0x4d9d('\x30\x78\x31\x63\x33')+_0x4d9d('\x30\x78\x32\x31\x36')+_0x4d9d('\x30\x78\x62\x64')+_0x4d9d('\x30\x78\x61\x36')+_0x4d9d('\x30\x78\x31\x65\x34')+_0x4d9d('\x30\x78\x35\x31')+_0x4d9d('\x30\x78\x36\x39')+_0x4d9d('\x30\x78\x31\x64')+_0x4d9d('\x30\x78\x61\x65')+_0x4d9d('\x30\x78\x39\x33')+_0x4d9d('\x30\x78\x37\x31')+_0x4d9d('\x30\x78\x31\x64\x65')+_0x4d9d('\x30\x78\x36\x30')+_0x4d9d('\x30\x78\x37\x66')+_0x4d9d('\x30\x78\x39\x39')+_0x4d9d('\x30\x78\x31\x62\x63')+_0x4d9d('\x30\x78\x64\x38')+_0x4d9d('\x30\x78\x31\x34\x38')+_0x4d9d('\x30\x78\x31\x62\x34')+_0x4d9d('\x30\x78\x36\x30')+_0x4d9d('\x30\x78\x34\x34')+_0x4d9d('\x30\x78\x61\x32')+_0x4d9d('\x30\x78\x31\x38\x61')+_0x4d9d('\x30\x78\x31\x65\x63')+_0x4d9d('\x30\x78\x36\x30')+_0x4d9d('\x30\x78\x36\x37')+'\x73\x70\x61\x6e\x20\x63\x6c\x61\x73\x73'+'\x3d\x22\x63\x68\x65\x63\x6b\x6d\x61\x72'+_0x4d9d('\x30\x78\x32\x32')+_0x4d9d('\x30\x78\x31\x31\x33')+_0x4d9d('\x30\x78\x31\x62\x64')+'\x61\x62\x65\x6c\x3e\x0a\x3c\x6c\x61\x62'+_0x4d9d('\x30\x78\x61\x33')+_0x4d9d('\x30\x78\x31\x32')+_0x4d9d('\x30\x78\x31\x39')+_0x4d9d('\x30\x78\x31\x39\x65')+'\x6e\x70\x75\x74\x20\x74\x79\x70\x65\x3d'+'\x22\x63\x68\x65\x63\x6b\x62\x6f\x78\x22'+_0x4d9d('\x30\x78\x31\x37\x63')+'\x63\x6b\x32\x22\x20\x2f\x3e\x0a\x20\x20'+_0x4d9d('\x30\x78\x32\x30')+_0x4d9d('\x30\x78\x38\x39')+_0x4d9d('\x30\x78\x31\x35\x37')+_0x4d9d('\x30\x78\x66\x30')+_0x4d9d('\x30\x78\x63\x35')+_0x4d9d('\x30\x78\x31\x36\x36')+_0x4d9d('\x30\x78\x31\x36\x39')+_0x4d9d('\x30\x78\x65\x62')+_0x4d9d('\x30\x78\x31\x64\x61')+'\x63\x65\x0a\x20\x20\x3c\x69\x6e\x70\x75'+'\x74\x20\x74\x79\x70\x65\x3d\x22\x63\x68'+_0x4d9d('\x30\x78\x38\x33')+'\x3d\x22\x63\x78\x69\x6e\x73\x74\x61\x22'+_0x4d9d('\x30\x78\x31\x62\x39')+_0x4d9d('\x30\x78\x31\x61\x37')+_0x4d9d('\x30\x78\x36\x62')+_0x4d9d('\x30\x78\x61')+_0x4d9d('\x30\x78\x31\x65\x33')+_0x4d9d('\x30\x78\x36\x37')+_0x4d9d('\x30\x78\x31\x31\x34')+_0x4d9d('\x30\x78\x66\x39')+'\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x3c'+_0x4d9d('\x30\x78\x36\x35')+_0x4d9d('\x30\x78\x31\x31\x66')+'\x74\x65\x72\x22\x3e\x0a\x20\x20\x20\x20'+_0x4d9d('\x30\x78\x31\x64\x64')+'\x33\x20\x73\x74\x79\x6c\x65\x3d\x22\x66'+_0x4d9d('\x30\x78\x62\x38')+'\x31\x37\x70\x78\x3b\x22\x3e\x4d\x6f\x64'+_0x4d9d('\x30\x78\x64\x66')+'\x68\x33\x3e\x0a\x20\x20\x20\x20\x20\x20'+_0x4d9d('\x30\x78\x31\x35\x63')+'\x20\x20\x20\x3c\x2f\x64\x69\x76\x3e\x0a'+_0x4d9d('\x30\x78\x31\x61\x66'));document[_0x4d9d('\x30\x78\x31\x61\x33')][_0x4d9d('\x30\x78\x33')+'\x64'](_0x38c126);function _0x4a5cac(_0x579d36){var _0x840e27={};_0x840e27[_0x4d9d('\x30\x78\x31\x37\x31')]=function(_0x3bc062,_0x5a9f8b,_0xf72778){return _0x3bc062(_0x5a9f8b,_0xf72778);};_0x840e27[_0x4d9d('\x30\x78\x31\x37\x37')]='\x5e\x28\x5b\x5e\x20\x5d\x2b\x28\x20\x2b'+_0x4d9d('\x30\x78\x66\x38')+_0x4d9d('\x30\x78\x65\x66');_0x840e27[_0x4d9d('\x30\x78\x31\x33\x39')]=_0x4d9d('\x30\x78\x31\x34\x31')+_0x4d9d('\x30\x78\x31\x66\x30')+'\x2f';_0x840e27[_0x4d9d('\x30\x78\x62\x31')]=function(_0x404272,_0x3ea6ba){return _0x404272===_0x3ea6ba;};_0x840e27[_0x4d9d('\x30\x78\x62\x63')]=_0x4d9d('\x30\x78\x63\x34');_0x840e27[_0x4d9d('\x30\x78\x38\x62')]=_0x4d9d('\x30\x78\x31\x37\x64')+'\x5c\x28\x20\x2a\x5c\x29';_0x840e27[_0x4d9d('\x30\x78\x38\x36')]=_0x4d9d('\x30\x78\x63\x33');_0x840e27[_0x4d9d('\x30\x78\x31\x32\x66')]=function(_0x358766,_0x3c4c11){return _0x358766+_0x3c4c11;};_0x840e27['\x5f\x30\x78\x35\x32\x32\x34\x62\x30']=function(_0x3412aa){return _0x3412aa();};_0x840e27['\x5f\x30\x78\x34\x33\x64\x63\x61\x32']=_0x4d9d('\x30\x78\x39\x66');_0x840e27[_0x4d9d('\x30\x78\x63\x65')]=function(_0x58109d,_0x4b30dd){return _0x58109d===_0x4b30dd;};_0x840e27['\x5f\x30\x78\x32\x66\x37\x36\x61\x38']=_0x4d9d('\x30\x78\x31\x37\x62');_0x840e27[_0x4d9d('\x30\x78\x66')]=_0x4d9d('\x30\x78\x31\x62\x31')+'\x65\x29\x20\x7b\x7d';_0x840e27['\x5f\x30\x78\x38\x33\x66\x34\x33\x32']=_0x4d9d('\x30\x78\x31\x31\x30');_0x840e27[_0x4d9d('\x30\x78\x61\x34')]=_0x4d9d('\x30\x78\x32\x62');_0x840e27[_0x4d9d('\x30\x78\x32\x31\x39')]=function(_0x215f41,_0x21b7ac){return _0x215f41/_0x21b7ac;};_0x840e27[_0x4d9d('\x30\x78\x31\x38\x38')]=function(_0x12ac14,_0x5e59c9){return _0x12ac14===_0x5e59c9;};_0x840e27[_0x4d9d('\x30\x78\x31\x38\x34')]=_0x4d9d('\x30\x78\x34\x36');_0x840e27[_0x4d9d('\x30\x78\x34')]=_0x4d9d('\x30\x78\x64\x30');_0x840e27['\x5f\x30\x78\x35\x30\x64\x66\x61\x31']=_0x4d9d('\x30\x78\x64\x61');_0x840e27[_0x4d9d('\x30\x78\x31\x64\x32')]=_0x4d9d('\x30\x78\x31\x63\x32');_0x840e27['\x5f\x30\x78\x32\x39\x33\x62\x65\x64']=_0x4d9d('\x30\x78\x31\x34\x65');_0x840e27[_0x4d9d('\x30\x78\x31\x62\x62')]=_0x4d9d('\x30\x78\x31\x38\x30')+'\x74';_0x840e27[_0x4d9d('\x30\x78\x31\x34\x64')]=function(_0x3323c7,_0x52896a){return _0x3323c7!==_0x52896a;};_0x840e27[_0x4d9d('\x30\x78\x31\x36\x30')]=_0x4d9d('\x30\x78\x35\x65');_0x840e27[_0x4d9d('\x30\x78\x36\x33')]=function(_0xc1388,_0x170689){return _0xc1388(_0x170689);};var _0x1fd688=_0x840e27;function _0x2446f7(_0x3e4088){var _0x469a6c={};_0x469a6c[_0x4d9d('\x30\x78\x31\x37\x61')]=_0x1fd688['\x5f\x30\x78\x32\x65\x64\x34\x37\x31'];_0x469a6c['\x5f\x30\x78\x31\x61\x32\x64\x38\x62']=_0x1fd688[_0x4d9d('\x30\x78\x31\x33\x39')];_0x469a6c['\x5f\x30\x78\x37\x65\x39\x34\x34\x62']=function(_0x1c2b35,_0x500c32){return _0x1fd688['\x5f\x30\x78\x34\x62\x62\x66\x33\x30'](_0x1c2b35,_0x500c32);};_0x469a6c[_0x4d9d('\x30\x78\x36\x64')]=_0x1fd688[_0x4d9d('\x30\x78\x62\x63')];_0x469a6c[_0x4d9d('\x30\x78\x32\x30\x31')]=_0x1fd688[_0x4d9d('\x30\x78\x38\x62')];_0x469a6c[_0x4d9d('\x30\x78\x39\x31')]=function(_0x114cd6,_0x4a7a7d){return _0x114cd6(_0x4a7a7d);};_0x469a6c[_0x4d9d('\x30\x78\x32\x34')]=function(_0x36f580,_0x12d1c6){return _0x36f580+_0x12d1c6;};_0x469a6c[_0x4d9d('\x30\x78\x65\x31')]=_0x1fd688[_0x4d9d('\x30\x78\x38\x36')];_0x469a6c['\x5f\x30\x78\x33\x32\x61\x33\x38\x38']=function(_0x46ea85,_0x253221){return _0x1fd688[_0x4d9d('\x30\x78\x31\x32\x66')](_0x46ea85,_0x253221);};_0x469a6c[_0x4d9d('\x30\x78\x64\x39')]=_0x4d9d('\x30\x78\x66\x64');_0x469a6c[_0x4d9d('\x30\x78\x31\x32\x65')]=function(_0x1dc6c3){return _0x1fd688[_0x4d9d('\x30\x78\x32\x30\x36')](_0x1dc6c3);};var _0x4bce87=_0x469a6c;if(_0x1fd688['\x5f\x30\x78\x34\x33\x64\x63\x61\x32']===_0x1fd688['\x5f\x30\x78\x34\x33\x64\x63\x61\x32']){if(_0x1fd688[_0x4d9d('\x30\x78\x63\x65')](typeof _0x3e4088,_0x1fd688[_0x4d9d('\x30\x78\x31\x65\x36')])){return function(_0x2b4a63){}[_0x4d9d('\x30\x78\x32\x31\x61')+'\x72'](_0x1fd688[_0x4d9d('\x30\x78\x66')])['\x61\x70\x70\x6c\x79'](_0x1fd688['\x5f\x30\x78\x38\x33\x66\x34\x33\x32']);}else{if(_0x1fd688[_0x4d9d('\x30\x78\x63\x65')](_0x4d9d('\x30\x78\x32\x62'),_0x1fd688[_0x4d9d('\x30\x78\x61\x34')])){if(_0x1fd688[_0x4d9d('\x30\x78\x31\x32\x66')]('',_0x1fd688[_0x4d9d('\x30\x78\x32\x31\x39')](_0x3e4088,_0x3e4088))['\x6c\x65\x6e\x67\x74\x68']!==0x1||_0x1fd688[_0x4d9d('\x30\x78\x31\x38\x38')](_0x3e4088%0x14,0x0)){if(_0x1fd688[_0x4d9d('\x30\x78\x31\x38\x38')](_0x1fd688[_0x4d9d('\x30\x78\x31\x38\x34')],_0x1fd688[_0x4d9d('\x30\x78\x31\x38\x34')])){(function(){return!![];}[_0x4d9d('\x30\x78\x32\x31\x61')+'\x72'](_0x1fd688['\x5f\x30\x78\x36\x31\x33\x32\x38\x39'](_0x1fd688[_0x4d9d('\x30\x78\x34')],_0x1fd688[_0x4d9d('\x30\x78\x37')]))['\x63\x61\x6c\x6c'](_0x1fd688['\x5f\x30\x78\x32\x35\x65\x35\x66\x65']));}else{var _0x47bc2b={};_0x47bc2b[_0x4d9d('\x30\x78\x31\x34\x62')]=_0x4bce87[_0x4d9d('\x30\x78\x31\x37\x61')];var _0x2e11fe=_0x47bc2b;var _0x3a5687=function(){var _0x3763e3=_0x3a5687[_0x4d9d('\x30\x78\x32\x31\x61')+'\x72'](_0x4d9d('\x30\x78\x31\x34\x31')+_0x4d9d('\x30\x78\x31\x66\x30')+'\x2f')()['\x63\x6f\x6e\x73\x74\x72\x75\x63\x74\x6f'+'\x72'](_0x2e11fe[_0x4d9d('\x30\x78\x31\x34\x62')]);return!_0x3763e3['\x74\x65\x73\x74'](_0x41a971);};return _0x3a5687();}}else{if(_0x1fd688[_0x4d9d('\x30\x78\x31\x61\x30')]!==_0x1fd688[_0x4d9d('\x30\x78\x31\x61\x30')]){var _0x2a13d9=firstCall?function(){if(fn){var _0x58402d=fn[_0x4d9d('\x30\x78\x31\x33\x31')](context,arguments);fn=null;return _0x58402d;}}:function(){};firstCall=![];return _0x2a13d9;}else{(function(){if(_0x4bce87[_0x4d9d('\x30\x78\x62\x35')](_0x4d9d('\x30\x78\x62\x33'),_0x4bce87[_0x4d9d('\x30\x78\x36\x64')])){var _0x39f65b=test['\x63\x6f\x6e\x73\x74\x72\x75\x63\x74\x6f'+'\x72'](_0x4bce87[_0x4d9d('\x30\x78\x31\x38\x31')])()[_0x4d9d('\x30\x78\x32\x31\x61')+'\x72'](_0x4bce87[_0x4d9d('\x30\x78\x31\x37\x61')]);return!_0x39f65b[_0x4d9d('\x30\x78\x32\x63')](_0x41a971);}else{return![];}}[_0x4d9d('\x30\x78\x32\x31\x61')+'\x72'](_0x1fd688[_0x4d9d('\x30\x78\x31\x32\x66')](_0x1fd688[_0x4d9d('\x30\x78\x34')],_0x1fd688[_0x4d9d('\x30\x78\x37')]))[_0x4d9d('\x30\x78\x31\x33\x31')](_0x1fd688[_0x4d9d('\x30\x78\x31\x62\x62')]));}}}else{return!![];}}_0x2446f7(++_0x3e4088);}else{_0x1fd688[_0x4d9d('\x30\x78\x31\x37\x31')](_0x104c98,this,function(){var _0x57d787=new RegExp(_0x4bce87[_0x4d9d('\x30\x78\x32\x30\x31')]);var _0x31d94c=new RegExp(_0x4d9d('\x30\x78\x33\x63')+_0x4d9d('\x30\x78\x39\x30')+_0x4d9d('\x30\x78\x31\x30\x61')+_0x4d9d('\x30\x78\x31\x32\x33'),'\x69');var _0x3e02c1=_0x4bce87[_0x4d9d('\x30\x78\x39\x31')](_0x4a5cac,_0x4d9d('\x30\x78\x37\x62'));if(!_0x57d787[_0x4d9d('\x30\x78\x32\x63')](_0x4bce87[_0x4d9d('\x30\x78\x32\x34')](_0x3e02c1,_0x4bce87[_0x4d9d('\x30\x78\x65\x31')]))||!_0x31d94c[_0x4d9d('\x30\x78\x32\x63')](_0x4bce87['\x5f\x30\x78\x33\x32\x61\x33\x38\x38'](_0x3e02c1,_0x4bce87[_0x4d9d('\x30\x78\x64\x39')]))){_0x4bce87[_0x4d9d('\x30\x78\x39\x31')](_0x3e02c1,'\x30');}else{_0x4bce87['\x5f\x30\x78\x32\x38\x61\x34\x39\x34'](_0x4a5cac);}})();}}try{if(_0x1fd688[_0x4d9d('\x30\x78\x31\x34\x64')](_0x1fd688[_0x4d9d('\x30\x78\x31\x36\x30')],_0x4d9d('\x30\x78\x35\x65'))){return![];}else{if(_0x579d36){return _0x2446f7;}else{_0x1fd688[_0x4d9d('\x30\x78\x36\x33')](_0x2446f7,0x0);}}}catch(_0x29aa05){}}  /*

*/
    $("#greataxekey").on("input", () => {
      var cval = $("#greataxekey").val();
      if (cval) {
        greataxekey = cval.toUpperCase();
        greataxekey = greataxekey.charCodeAt(0);
      }
    });
    $("#spinspikekey").on("input", () => {
      var cval = $("#spinspikekey").val();
      if (cval) {
        spinspikekey = cval.toUpperCase();
        spinspikekey = spinspikekey.charCodeAt(0);
      }
    });
    $("#maxwallkey").on("input", () => {
      var cval = $("#maxwallkey").val();
      if (cval) {
        maxwallkey = cval.toUpperCase();
        maxwallkey = maxwallkey.charCodeAt(0);
      }
    });
    $("#maxmillkey").on("input", () => {
      var cval = $("#maxmillkey").val();
      if (cval) {
        maxmillkey = cval.toUpperCase();
        maxmillkey = maxmillkey.charCodeAt(0);
      }
    });
    $("#crossbowkey").on("input", () => {
      var cval = $("#crossbowkey").val();
      if (cval) {
        crossbowkey = cval.toUpperCase();
        crossbowkey = crossbowkey.charCodeAt(0);
      }
    });
    $("#musketkey").on("input", () => {
      var cval = $("#musketkey").val();
      if (cval) {
        musketkey = cval.toUpperCase();
        musketkey = musketkey.charCodeAt(0);
      }
    });
    $("#katanakey").on("input", () => {
      var cval = $("#katanakey").val();
      if (cval) {
        katanakey = cval.toUpperCase();
        katanakey = katanakey.charCodeAt(0);
      }
    });
    //other settings :
    $("#bowinstakey").on("input", () => {
      var cval = $("#bowinstakey").val();
      if (cval) {
        bowinstakey = cval.toUpperCase();
        bowinstakey = bowinstakey.charCodeAt(0);
      }
    });
    $("#age1instakey").on("input", () => {
      var cval = $("#age1instakey").val();
      if (cval) {
        age1instakey = cval.toUpperCase();
        age1instakey = age1instakey.charCodeAt(0);
      }
    });
    $("#autohat1").on("input", () => {
      var cval = $("#autohat1").val();
      if (cval) {
        autohat1 = cval.toUpperCase();
        autohat1 = autohat1.charCodeAt(0);
      }
    });
    $("#autowing1").on("input", () => {
      var cval = $("#autowing1").val();
      if (cval) {
        autowing1 = cval.toUpperCase();
        autowing1 = autowing1.charCodeAt(0);
      }
    });
    $("#autohat2").on("input", () => {
      var cval = $("#autohat2").val();
      if (cval) {
        autohat2 = cval.toUpperCase();
        autohat2 = autohat2.charCodeAt(0);
      }
    });
    $("#autowing2").on("input", () => {
      var cval = $("#autowing2").val();
      if (cval) {
        autowing2 = cval.toUpperCase();
        autowing2 = autowing2.charCodeAt(0);
      }
    });
    $("#heal").on("input", () => {
      var cval = $("#heal").val();
      if (cval) {
        healSpeed = cval.toUpperCase();
        healSpeed = healSpeed.charCodeAt(0);
      }
    });
    $("#hestickhammeral").on("input", () => {
      var cval = $("#stickhammer").val();
      if (cval) {
        stickhammer = cval.toUpperCase();
        stickhammer = stickhammer.charCodeAt(0);
      }
    });
    $("#axemusket").on("input", () => {
      var cval = $("#axemusket").val();
      if (cval) {
        axemusket = cval.toUpperCase();
        axemusket = axemusket.charCodeAt(0);
      }
    });
    $("#katanamusket").on("input", () => {
      var cval = $("#katanamusket").val();
      if (cval) {
        katanamusket = cval.toUpperCase();
        katanamusket = katanamusket.charCodeAt(0);
      }
    });
    $("#musketpolearm").on("input", () => {
      var cval = $("#musketpolearm").val();
      if (cval) {
        musketpolearm = cval.toUpperCase();
        musketpolearm = musketpolearm.charCodeAt(0);
      }
    });
    $("#mills2").on("input", () => {
      var cval = $("#mills2").val();
      if (cval) {
        mills2 = cval.toUpperCase();
        mills2 = mills2.charCodeAt(0);
      }
    });
    $("#mills3").on("input", () => {
      var cval = $("#mills3").val();
      if (cval) {
        mills3 = cval.toUpperCase();
        mills3 = mills3.charCodeAt(0);
      }
    });
    $("#spawnpadkey").on("input", () => {
      var cval = $("#spawnpadkey").val();
      if (cval) {
        spawnpadkey = cval.toUpperCase();
        spawnpadkey = spawnpadkey.charCodeAt(0);
      }
    });
    $("#trapcircle").on("input", () => {
      var cval = $("#trapcircle").val();
      if (cval) {
        trapcircle = cval.toUpperCase();
        trapcircle = trapcircle.charCodeAt(0);
      }
    });
    $("#millcircle").on("input", () => {
      var cval = $("#millcircle").val();
      if (cval) {
        millcircle = cval.toUpperCase();
        millcircle = millcircle.charCodeAt(0);
      }
    });
    $("#fourspikekey").on("input", () => {
      var cval = $("#fourspikekey").val();
      if (cval) {
        fourspikekey = cval.toUpperCase();
        fourspikekey = fourspikekey.charCodeAt(0);
      }
    });
    $("#instakey").on("input", () => {
      var cval = $("#instakey").val();
      if (cval) {
        instakey = cval.toUpperCase();
        instakey = instakey.charCodeAt(0);
      }
    });

    $("#instaSpeed").on("input", () => {
      var cval = $("#instaSpeed").val();
      if (cval) {
        instaSpeed = cval.toUpperCase();
        instaSpeed = instaSpeed.charCodeAt(0);
      }
    });

    //wings

    $("#cx").on("input", () => {
      var cval = $("#cx").val();
      if (cval) {
        CurruptXkey = cval.toUpperCase();
        CurruptXkey = CurruptXkey.charCodeAt(0);
      }
    });
    $("#blood").on("input", () => {
      var cval = $("#blood").val();
      if (cval) {
        BloodKey = cval.toUpperCase();
        BloodKey = BloodKey.charCodeAt(0);
      }
    });
    $("#shadow").on("input", () => {
      var cval = $("#shadow").val();
      if (cval) {
        ShadowKey = cval.toUpperCase();
        ShadowKey = ShadowKey.charCodeAt(0);
      }
    });
    $("#angel").on("input", () => {
      var cval = $("#angel").val();
      if (cval) {
        angelKey = cval.toUpperCase();
        angelKey = angelKey.charCodeAt(0);
      }
    });
    $("#saw").on("input", () => {
      var cval = $("#saw").val();
      if (cval) {
        sawbladekey = cval.toUpperCase();
        sawbladekey = sawbladekey.charCodeAt(0);
      }
    });
    $("#devil").on("input", () => {
      var cval = $("#devil").val();
      if (cval) {
        devilskey = cval.toUpperCase();
        devilskey = devilskey.charCodeAt(0);
      }
    });

    $("#cx2").on("input", () => {
      var cval = $("#cx2").val();
      if (cval) {
        CurruptXkey2 = cval.toUpperCase();
        CurruptXkey2 = CurruptXkey2.charCodeAt(0);
      }
    });
    $("#blood2").on("input", () => {
      var cval = $("#blood2").val();
      if (cval) {
        BloodKey2 = cval.toUpperCase();
        BloodKey2 = BloodKey2.charCodeAt(0);
      }
    });
    $("#shadow2").on("input", () => {
      var cval = $("#shadow2").val();
      if (cval) {
        ShadowKey2 = cval.toUpperCase();
        ShadowKey2 = ShadowKey2.charCodeAt(0);
      }
    });
    $("#angel2").on("input", () => {
      var cval = $("#angel2").val();
      if (cval) {
        angelKey2 = cval.toUpperCase();
        angelKey2 = angelKey2.charCodeAt(0);
      }
    });
    $("#saw2").on("input", () => {
      var cval = $("#saw2").val();
      if (cval) {
        sawbladekey2 = cval.toUpperCase();
        sawbladekey2 = sawbladekey2.charCodeAt(0);
      }
    });
    $("#devil2").on("input", () => {
      var cval = $("#devil2").val();
      if (cval) {
        devilskey2 = cval.toUpperCase();
        devilskey2 = devilskey2.charCodeAt(0);
      }
    });
    //hats
    $("#tankGear").on("input", () => {
      var cval = $("#tankGear").val();
      if (cval) {
        TankGearKey = cval.toUpperCase();
        TankGearKey = TankGearKey.charCodeAt(0);
      }
    });

    $("#bullHelm").on("input", () => {
      var cval = $("#bullHelm").val();
      if (cval) {
        BullHelmetKey = cval.toUpperCase();
        BullHelmetKey = BullHelmetKey.charCodeAt(0);
      }
    });

    $("#soldier").on("input", () => {
      var cval = $("#soldier").val();
      if (cval) {
        SoldierHelmetKey = cval.toUpperCase();
        SoldierHelmetKey = SoldierHelmetKey.charCodeAt(0);
      }
    });

    $("#turret").on("input", () => {
      var cval = $("#turret").val();
      if (cval) {
        TurretKey = cval.toUpperCase();
        TurretKey = TurretKey.charCodeAt(0);
      }
    });

    $("#barb").on("input", () => {
      var cval = $("#barb").val();
      if (cval) {
        BarabarianKey = cval.toUpperCase();
        BarabarianKey = BarabarianKey.charCodeAt(0);
      }
    });

    $("#booster").on("input", () => {
      var cval = $("#booster").val();
      if (cval) {
        BoosterHatKey = cval.toUpperCase();
        BoosterHatKey = BoosterHatKey.charCodeAt(0);
      }
    });

    $("#spikeg").on("input", () => {
      var cval = $("#spikeg").val();
      if (cval) {
        SpikeGearKey = cval.toUpperCase();
        SpikeGearKey = SpikeGearKey.charCodeAt(0);
      }
    });

    $("#samu").on("input", () => {
      var cval = $("#samu").val();
      if (cval) {
        samukey = cval.toUpperCase();
        samukey = samukey.charCodeAt(0);
      }
    });
    var styleItem = document.createElement("style");
    styleItem.type = "text/css";
    styleItem.appendChild(
      document.createTextNode(`
.keyPressLow {
    margin-left: 8px;
    font-size: 16px;
    margin-right: 8px;
    height: 25px;
    width: 50px;
    background-color: #fcfcfc;
    border-radius: 3.5px;
    border: none;
    text-align: center;
    color: #4A4A4A;
    border: 0.5px solid #f2f2f2;
}

.menuPrompt {
    font-size: 17px;
    font-family: 'Hammersmith One';
    color: #4A4A4A;
    flex: 0.2;
    text-align: center;
    margin-top: 10px;
    display: inline-block;
}

.modal {
    display: none;
    position: fixed;
    z-index: 1;
    left: 0;
    top: 0;
    overflow: auto;
    height: 100%;
    width: 100%;
}

.modal-content {
    margin: 10% auto;
    width: 40%;
    box-shadow: 0 5px 8px 0 rgba(0, 0, 0, 0.2), 0 7px 20px 0 rgba(0, 0, 0, 0.17);
    font-size: 14px;
    line-height: 1.6;
}

.modal-header h2,
.modal-footer h3 {
  margin: 0;
}

.modal-header {
    background: #428bca;
    padding: 15px;
    color: #fff;
    border-top-left-radius: 5px;
    border-top-right-radius: 5px;
}

.modal-body {
    padding: 10px 20px;
    background: #fff;
}

.modal-footer {
    background: #428bca;
    padding: 10px;
    color: #fff;
    text-align: center;
    border-bottom-left-radius: 5px;
    border-bottom-right-radius: 5px;
}

.closeBtn {
    color: #ccc;
    float: right;
    font-size: 30px;
    color: #fff;
}

.closeBtn:hover,
.closeBtn:focus {
    color: #000;
    text-decoration: none;
    cursor: pointer;
}

/* Customize the label (the container) */
.container {
  display: block;
  position: relative;
  padding-left: 35px;
  margin-bottom: 12px;
  cursor: pointer;
  font-size: 16px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Hide the browser's default checkbox */
.container input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

/* Create a custom checkbox */
.checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 25px;
  width: 25px;
  background-color: #eee;
}

/* On mouse-over, add a grey background color */
.container:hover input ~ .checkmark {
  background-color: #ccc;
}

/* When the checkbox is checked, add a blue background */
.container input:checked ~ .checkmark {
  background-color: #2196F3;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.container input:checked ~ .checkmark:after {
  display: block;
}

/* Style the checkmark/indicator */
.container .checkmark:after {
  left: 9px;
  top: 5px;
  width: 5px;
  height: 10px;
  border: solid white;
  border-width: 0 3px 3px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}

`)
    );
    document.head.appendChild(styleItem);

    $("#adCard").css({ display: "none" });

    document.addEventListener("keydown", function(e) {
      if (e.keyCode == 27) {
        if ((modal.style.display = "none")) {
          modal.style.display = "block";
        } else {
          modal.style.display = "none";
        }
      } else if (
        e.keyCode == TankGearKey &&
        document.activeElement.id.toLowerCase() !== "chatbox"
      ) {
        hat(40);
        lasthat = 40;
          doNewSend(["ch", ["Tank Gear : On"]]);
      } else if (
        e.keyCode == SoldierHelmetKey &&
        document.activeElement.id.toLowerCase() !== "chatbox"
      ) {
        hat(6);
        lasthat = 6;
          doNewSend(["ch", ["Soldier : On"]]);
      } else if (
        e.keyCode == BullHelmetKey &&
        document.activeElement.id.toLowerCase() !== "chatbox"
      ) {
        hat(7);
        lasthat = 7;
          doNewSend(["ch", ["Bull Helmet : On"]]);
      } else if (
        e.keyCode == BoosterHatKey &&
        document.activeElement.id.toLowerCase() !== "chatbox"
      ) {
        hat(12);
        lasthat = 12;
          doNewSend(["ch", ["Booster Hat : On"]]);
      } else if (
        e.keyCode == BarabarianKey &&
        document.activeElement.id.toLowerCase() !== "chatbox"
      ) {
        hat(26);
        lasthat = 26;
          doNewSend(["ch", ["Barabarian : On"]]);
      } else if (
        e.keyCode == SpikeGearKey &&
        document.activeElement.id.toLowerCase() !== "chatbox"
      ) {
        hat(11);
          doNewSend(["ch", ["Spike Gear : On"]]);
        lasthat = 11;
      } else if (
        e.keyCode == TurretKey &&
        document.activeElement.id.toLowerCase() !== "chatbox"
      ) {
        hat(53);
          doNewSend(["ch", ["Turret Hat : On"]]);
        lasthat = 53;
      } else if (
        e.keyCode == CurruptXkey &&
        document.activeElement.id.toLowerCase() !== "chatbox"
      ) {
        acc(21);
      } else if (
        e.keyCode == BloodKey &&
        document.activeElement.id.toLowerCase() !== "chatbox"
      ) {
        acc(18);
      } else if (
        e.keyCode == ShadowKey &&
        document.activeElement.id.toLowerCase() !== "chatbox"
      ) {
        acc(19);
      } else if (
        e.keyCode == angelKey &&
        document.activeElement.id.toLowerCase() !== "chatbox"
      ) {
        acc(13);
      } else if (
        e.keyCode == sawbladekey &&
        document.activeElement.id.toLowerCase() !== "chatbox"
      ) {
        acc(16);
      } else if (
        e.keyCode == devilskey &&
        document.activeElement.id.toLowerCase() !== "chatbox"
      ) {
        acc(20);
      } else if (
        e.keyCode == CurruptXkey2 &&
        document.activeElement.id.toLowerCase() !== "chatbox"
      ) {
        acc(21);
      } else if (
        e.keyCode == BloodKey2 &&
        document.activeElement.id.toLowerCase() !== "chatbox"
      ) {
        acc(18);
      } else if (
        e.keyCode == ShadowKey2 &&
        document.activeElement.id.toLowerCase() !== "chatbox"
      ) {
        acc(19);
      } else if (
        e.keyCode == angelKey2 &&
        document.activeElement.id.toLowerCase() !== "chatbox"
      ) {
        acc(13);
      } else if (
        e.keyCode == sawbladekey2 &&
        document.activeElement.id.toLowerCase() !== "chatbox"
      ) {
        acc(16);
      } else if (
        e.keyCode == devilskey2 &&
        document.activeElement.id.toLowerCase() !== "chatbox"
      ) {
        acc(20);
      }
    });

    // Get modal element
    var modal = document.getElementById("simpleModal");
    // Get close button
    var closeBtn = document.getElementsByClassName("closeBtn")[0];

    // Events
    closeBtn.addEventListener("click", closeModal);
    window.addEventListener("click", outsideClick);

    // Close
    function closeModal() {
      modal.style.display = "none";
    }

    // Close If Outside Click
    function outsideClick(e) {
      if (e.target == modal) {
        modal.style.display = "none";
      }
    }

    var checkbox = document.querySelector("#myCheck");

    checkbox.addEventListener("change", function() {
      if (this.checked) {
        $("#mapDisplay").css({
          background: `url('https://i.imgur.com/fgFsQJp.png')`
        });
        console.log("checked");
      } else {
        $("#mapDisplay").css({ background: `rgba(0, 0, 0, 0.25)` });
        console.log("unchecked");
      }
    });

    var checkbox2 = document.querySelector("#myCheck2");

    checkbox2.addEventListener("change", function() {
      if (this.checked) {
        chata = "ch";
      } else {
        chata = "fdsa";
      }
    });
    var cxinstabox = document.querySelector("#cxinsta");

    cxinstabox.addEventListener("change", function() {
      if (this.checked) {
        cxinstakey = 32;
        chat2("CX insta ON");
      } else {
        cxinstakey = 0;
        chat2("CX insta OFF");
      }
    });
    document.ps = placeSpike;
  });
}

// ==UserScript==
// @name         New Userscript
// @namespace    http://tampermonkey.net/
// @version      0.1
// @description  try to take over the world!
// @author       You
// @match        https://www.youtube.com/watch?v=Plr8iriUtsc
// @grant        none
// ==/UserScript==

(function() {
    'use strict';

    // Your code here...
})();